/* CssParserTokenManager.java */
/* Generated By:JavaCC: Do not edit this line. CssParserTokenManager.java */
package org.w3c.css.parser.analyzer;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.Iterator;
import java.net.URL;
import java.math.BigDecimal;
import org.w3c.css.values.CssValue;
import org.w3c.css.values.CssOperator;
import org.w3c.css.values.CssAngle;
import org.w3c.css.values.CssCheckableValue;
import org.w3c.css.values.CssExpression;
import org.w3c.css.values.CssString;
import org.w3c.css.values.CssURL;
import org.w3c.css.values.CssLength;
import org.w3c.css.values.CssNumber;
import org.w3c.css.values.CssAttr;
import org.w3c.css.values.CssBracket;
import org.w3c.css.values.CssCalc;
import org.w3c.css.values.CssColor;
import org.w3c.css.values.CssFlexibleLength;
import org.w3c.css.values.CssFrequency;
import org.w3c.css.values.CssHashIdent;
import org.w3c.css.values.CssIdent;
import org.w3c.css.values.CssImage;
import org.w3c.css.values.CssPercentage;
import org.w3c.css.values.CssTime;
import org.w3c.css.values.CssSwitch;
import org.w3c.css.values.CssFunction;
import org.w3c.css.values.CssUnicodeRange;
import org.w3c.css.values.CssResolution;
import org.w3c.css.values.CssRatio;
import org.w3c.css.values.CssSemitone;
import org.w3c.css.values.CssTypes;
import org.w3c.css.values.CssVolume;
import org.w3c.css.properties.css.CssProperty;
import org.w3c.css.parser.Frame;
import org.w3c.css.parser.CssError;
import org.w3c.css.parser.CssErrorToken;
import org.w3c.css.parser.CssSelectors;
import org.w3c.css.parser.CssParseException;
import org.w3c.css.parser.AtRule;
import org.w3c.css.parser.AtRuleCounterStyle;
import org.w3c.css.media.AtRuleMedia;
import org.w3c.css.media.MediaFeature;
import org.w3c.css.parser.AtRuleFontFace;
import org.w3c.css.parser.AtRuleKeyframes;
import org.w3c.css.parser.AtRulePage;
import org.w3c.css.parser.AtRulePreference;
import org.w3c.css.parser.AtRulePhoneticAlphabet;
import org.w3c.css.properties.svg.AtRuleColorProfile;
import org.w3c.css.util.ApplContext;
import org.w3c.css.util.CssProfile;
import org.w3c.css.util.CssVersion;
import org.w3c.css.util.InvalidParamException;
import org.w3c.css.util.WarningParamException;
import org.w3c.css.util.Util;
import org.w3c.css.util.Messages;
import org.w3c.css.selectors.AdjacentSiblingSelector;
import org.w3c.css.selectors.AttributeSelector;
import org.w3c.css.selectors.ChildSelector;
import org.w3c.css.selectors.ClassSelector;
import org.w3c.css.selectors.DescendantSelector;
import org.w3c.css.selectors.GeneralSiblingSelector;
import org.w3c.css.selectors.IdSelector;
import org.w3c.css.selectors.TypeSelector;
import org.w3c.css.selectors.UniversalSelector;
import org.w3c.css.selectors.attributes.AttributeAny;
import org.w3c.css.selectors.attributes.AttributeBegin;
import org.w3c.css.selectors.attributes.AttributeExact;
import org.w3c.css.selectors.attributes.AttributeOneOf;
import org.w3c.css.selectors.attributes.AttributeStart;
import org.w3c.css.selectors.attributes.AttributeSubstr;
import org.w3c.css.selectors.attributes.AttributeSuffix;

/** Token Manager. */
public class CssParserTokenManager implements CssParserConstants {

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_0(){
   switch(curChar)
   {
      case 36:
         return jjMoveStringLiteralDfa1_0(0x40000000000L, 0x0L);
      case 37:
         jjmatchedKind = 107;
         return jjMoveNfa_0(7, 0);
      case 40:
         jjmatchedKind = 52;
         return jjMoveNfa_0(7, 0);
      case 41:
         jjmatchedKind = 51;
         return jjMoveNfa_0(7, 0);
      case 42:
         jjmatchedKind = 49;
         return jjMoveStringLiteralDfa1_0(0x80000000000L, 0x0L);
      case 45:
         jjmatchedKind = 28;
         return jjMoveStringLiteralDfa1_0(0x800000L, 0x0L);
      case 46:
         jjmatchedKind = 50;
         return jjMoveNfa_0(7, 0);
      case 47:
         jjmatchedKind = 46;
         return jjMoveNfa_0(7, 0);
      case 58:
         jjmatchedKind = 53;
         return jjMoveStringLiteralDfa1_0(0x0L, 0x1000000040L);
      case 59:
         jjmatchedKind = 45;
         return jjMoveNfa_0(7, 0);
      case 60:
         return jjMoveStringLiteralDfa1_0(0x400000L, 0x0L);
      case 61:
         jjmatchedKind = 44;
         return jjMoveNfa_0(7, 0);
      case 64:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x7fff80L);
      case 91:
         jjmatchedKind = 47;
         return jjMoveNfa_0(7, 0);
      case 93:
         jjmatchedKind = 48;
         return jjMoveNfa_0(7, 0);
      case 94:
         return jjMoveStringLiteralDfa1_0(0x20000000000L, 0x0L);
      case 65:
      case 97:
         return jjMoveStringLiteralDfa1_0(0x100000000L, 0x4000000000L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x2000000000L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x800000000L);
      case 124:
         jjmatchedKind = 106;
         return jjMoveStringLiteralDfa1_0(0x2000000L, 0x0L);
      case 125:
         jjmatchedKind = 40;
         return jjMoveNfa_0(7, 0);
      default :
         return jjMoveNfa_0(7, 0);
   }
}
private int jjMoveStringLiteralDfa1_0(long active0, long active1){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 0);
   }
   switch(curChar)
   {
      case 33:
         return jjMoveStringLiteralDfa2_0(active0, 0x400000L, active1, 0L);
      case 45:
         return jjMoveStringLiteralDfa2_0(active0, 0x800000L, active1, 0L);
      case 58:
         if ((active1 & 0x40L) != 0L)
         {
            jjmatchedKind = 70;
            jjmatchedPos = 1;
         }
         break;
      case 61:
         if ((active0 & 0x2000000L) != 0L)
         {
            jjmatchedKind = 25;
            jjmatchedPos = 1;
         }
         else if ((active0 & 0x20000000000L) != 0L)
         {
            jjmatchedKind = 41;
            jjmatchedPos = 1;
         }
         else if ((active0 & 0x40000000000L) != 0L)
         {
            jjmatchedKind = 42;
            jjmatchedPos = 1;
         }
         else if ((active0 & 0x80000000000L) != 0L)
         {
            jjmatchedKind = 43;
            jjmatchedPos = 1;
         }
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x2800000000L);
      case 66:
      case 98:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x40000L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x308080L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x1000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x100L);
      case 75:
      case 107:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x2000L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x80000L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x400L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa2_0(active0, 0x100000000L, active1, 0x1000000200L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x404800L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x20000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x4000010000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 1);
}
private int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 1);
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa3_0(active0, 0x400000L, active1, 0L);
      case 62:
         if ((active0 & 0x800000L) != 0L)
         {
            jjmatchedKind = 23;
            jjmatchedPos = 2;
         }
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0xa00L);
      case 68:
      case 100:
         if ((active0 & 0x100000000L) != 0L)
         {
            jjmatchedKind = 32;
            jjmatchedPos = 2;
         }
         break;
      case 69:
      case 101:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x82400L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x400080L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x20000L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x2000000000L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x100L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x800000000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x1000359000L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x4000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x4000000000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 2);
}
private int jjMoveStringLiteralDfa3_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 2);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 2);
   }
   switch(curChar)
   {
      case 45:
         if ((active0 & 0x400000L) != 0L)
         {
            jjmatchedKind = 22;
            jjmatchedPos = 3;
         }
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x80L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x2000000000L);
      case 68:
      case 100:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x400L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x4000L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x80000L);
      case 71:
      case 103:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x800020800L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x8000L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x200L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x1000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x400000L);
      case 80:
      case 112:
         if ((active1 & 0x10000L) != 0L)
         {
            jjmatchedKind = 80;
            jjmatchedPos = 3;
         }
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x100L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x4000000000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x1000040000L);
      case 85:
      case 117:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x300000L);
      case 89:
      case 121:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x2000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 3);
}
private int jjMoveStringLiteralDfa4_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 3);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 3);
   }
   switch(curChar)
   {
      case 40:
         if ((active1 & 0x800000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 4;
         }
         else if ((active1 & 0x1000000000L) != 0L)
         {
            jjmatchedKind = 100;
            jjmatchedPos = 4;
         }
         else if ((active1 & 0x2000000000L) != 0L)
         {
            jjmatchedKind = 101;
            jjmatchedPos = 4;
         }
         else if ((active1 & 0x4000000000L) != 0L)
         {
            jjmatchedKind = 102;
            jjmatchedPos = 4;
         }
         break;
      case 69:
      case 101:
         if ((active1 & 0x800L) != 0L)
         {
            jjmatchedKind = 75;
            jjmatchedPos = 4;
         }
         return jjMoveStringLiteralDfa5_0(active1, 0x200L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa5_0(active1, 0x6000L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa5_0(active1, 0x20000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa5_0(active1, 0x400L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa5_0(active1, 0x700000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa5_0(active1, 0x8100L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa5_0(active1, 0x80L);
      case 84:
      case 116:
         if ((active1 & 0x80000L) != 0L)
         {
            jjmatchedKind = 83;
            jjmatchedPos = 4;
         }
         return jjMoveStringLiteralDfa5_0(active1, 0x41000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 4);
}
private int jjMoveStringLiteralDfa5_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 4);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 4);
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa6_0(active1, 0x1000L);
      case 65:
      case 97:
         if ((active1 & 0x400L) != 0L)
         {
            jjmatchedKind = 74;
            jjmatchedPos = 5;
         }
         break;
      case 69:
      case 101:
         return jjMoveStringLiteralDfa6_0(active1, 0x404000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa6_0(active1, 0x40000L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa6_0(active1, 0xa100L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa6_0(active1, 0x280L);
      case 84:
      case 116:
         if ((active1 & 0x20000L) != 0L)
         {
            jjmatchedKind = 81;
            jjmatchedPos = 5;
         }
         return jjMoveStringLiteralDfa6_0(active1, 0x300000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 5);
}
private int jjMoveStringLiteralDfa6_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 5);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 5);
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa7_0(active1, 0x8000L);
      case 65:
      case 97:
         return jjMoveStringLiteralDfa7_0(active1, 0x2000L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa7_0(active1, 0x300080L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa7_0(active1, 0x1000L);
      case 77:
      case 109:
         if ((active1 & 0x40000L) != 0L)
         {
            jjmatchedKind = 82;
            jjmatchedPos = 6;
         }
         break;
      case 80:
      case 112:
         return jjMoveStringLiteralDfa7_0(active1, 0x200L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa7_0(active1, 0x4000L);
      case 84:
      case 116:
         if ((active1 & 0x100L) != 0L)
         {
            jjmatchedKind = 72;
            jjmatchedPos = 6;
         }
         return jjMoveStringLiteralDfa7_0(active1, 0x400000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 6);
}
private int jjMoveStringLiteralDfa7_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 6);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 6);
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa8_0(active1, 0x1200L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa8_0(active1, 0x4000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa8_0(active1, 0x400000L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa8_0(active1, 0x2000L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa8_0(active1, 0x8000L);
      case 82:
      case 114:
         if ((active1 & 0x100000L) != 0L)
         {
            jjmatchedKind = 84;
            jjmatchedPos = 7;
         }
         return jjMoveStringLiteralDfa8_0(active1, 0x200000L);
      case 84:
      case 116:
         if ((active1 & 0x80L) != 0L)
         {
            jjmatchedKind = 71;
            jjmatchedPos = 7;
         }
         break;
      default :
         break;
   }
   return jjMoveNfa_0(7, 7);
}
private int jjMoveStringLiteralDfa8_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 7);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 7);
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa9_0(active1, 0x200000L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa9_0(active1, 0x401200L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa9_0(active1, 0x2000L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa9_0(active1, 0x4000L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa9_0(active1, 0x8000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 8);
}
private int jjMoveStringLiteralDfa9_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 8);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 8);
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa10_0(active1, 0x400000L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa10_0(active1, 0x4000L);
      case 69:
      case 101:
         if ((active1 & 0x200L) != 0L)
         {
            jjmatchedKind = 73;
            jjmatchedPos = 9;
         }
         else if ((active1 & 0x1000L) != 0L)
         {
            jjmatchedKind = 76;
            jjmatchedPos = 9;
         }
         break;
      case 79:
      case 111:
         return jjMoveStringLiteralDfa10_0(active1, 0x8000L);
      case 83:
      case 115:
         if ((active1 & 0x2000L) != 0L)
         {
            jjmatchedKind = 77;
            jjmatchedPos = 9;
         }
         return jjMoveStringLiteralDfa10_0(active1, 0x200000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 9);
}
private int jjMoveStringLiteralDfa10_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 9);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 9);
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa11_0(active1, 0x400000L);
      case 69:
      case 101:
         if ((active1 & 0x4000L) != 0L)
         {
            jjmatchedKind = 78;
            jjmatchedPos = 10;
         }
         break;
      case 70:
      case 102:
         return jjMoveStringLiteralDfa11_0(active1, 0x8000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa11_0(active1, 0x200000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 10);
}
private int jjMoveStringLiteralDfa11_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 10);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 10);
   }
   switch(curChar)
   {
      case 73:
      case 105:
         return jjMoveStringLiteralDfa12_0(active1, 0x8000L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa12_0(active1, 0x400000L);
      case 89:
      case 121:
         return jjMoveStringLiteralDfa12_0(active1, 0x200000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 11);
}
private int jjMoveStringLiteralDfa12_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 11);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 11);
   }
   switch(curChar)
   {
      case 76:
      case 108:
         return jjMoveStringLiteralDfa13_0(active1, 0x208000L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa13_0(active1, 0x400000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 12);
}
private int jjMoveStringLiteralDfa13_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 12);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 12);
   }
   switch(curChar)
   {
      case 69:
      case 101:
         if ((active1 & 0x8000L) != 0L)
         {
            jjmatchedKind = 79;
            jjmatchedPos = 13;
         }
         else if ((active1 & 0x200000L) != 0L)
         {
            jjmatchedKind = 85;
            jjmatchedPos = 13;
         }
         break;
      case 72:
      case 104:
         return jjMoveStringLiteralDfa14_0(active1, 0x400000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 13);
}
private int jjMoveStringLiteralDfa14_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 13);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 13);
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa15_0(active1, 0x400000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 14);
}
private int jjMoveStringLiteralDfa15_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 14);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 14);
   }
   switch(curChar)
   {
      case 66:
      case 98:
         return jjMoveStringLiteralDfa16_0(active1, 0x400000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 15);
}
private int jjMoveStringLiteralDfa16_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 15);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 15);
   }
   switch(curChar)
   {
      case 69:
      case 101:
         return jjMoveStringLiteralDfa17_0(active1, 0x400000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 16);
}
private int jjMoveStringLiteralDfa17_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 16);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 16);
   }
   switch(curChar)
   {
      case 84:
      case 116:
         if ((active1 & 0x400000L) != 0L)
         {
            jjmatchedKind = 86;
            jjmatchedPos = 17;
         }
         break;
      default :
         break;
   }
   return jjMoveNfa_0(7, 17);
}
static final long[] jjbitVec0 = {
   0xfffffffffffffffeL, 0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static final long[] jjbitVec2 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private int jjMoveNfa_0(int startState, int curPos)
{
   int strKind = jjmatchedKind;
   int strPos = jjmatchedPos;
   int seenUpto;
   input_stream.backup(seenUpto = curPos + 1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { throw new Error("Internal Error"); }
   curPos = 0;
   int startsAt = 0;
   jjnewStateCnt = 849;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 7:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 68)
                        kind = 68;
                     { jjCheckNAddStates(0, 109); }
                  }
                  else if ((0x100003600L & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     { jjCheckNAddStates(110, 129); }
                  }
                  else if (curChar == 46)
                     { jjCheckNAddStates(130, 158); }
                  else if (curChar == 35)
                     { jjCheckNAddStates(159, 163); }
                  else if (curChar == 45)
                     { jjAddStates(164, 167); }
                  else if (curChar == 39)
                  {
                     if (kind > 35)
                        kind = 35;
                     { jjCheckNAddStates(168, 172); }
                  }
                  else if (curChar == 34)
                  {
                     if (kind > 35)
                        kind = 35;
                     { jjCheckNAddStates(173, 177); }
                  }
                  else if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 244;
                  else if (curChar == 33)
                  {
                     if (kind > 69)
                        kind = 69;
                     { jjCheckNAddTwoStates(75, 84); }
                  }
                  else if (curChar == 44)
                  {
                     if (kind > 30)
                        kind = 30;
                  }
                  else if (curChar == 62)
                  {
                     if (kind > 29)
                        kind = 29;
                  }
                  else if (curChar == 43)
                  {
                     if (kind > 27)
                        kind = 27;
                  }
                  else if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 0;
                  if (curChar == 60)
                     { jjCheckNAddStates(178, 182); }
                  break;
               case 0:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(1, 2); }
                  break;
               case 1:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(1, 2); }
                  break;
               case 2:
                  if (curChar == 42)
                     { jjCheckNAddStates(183, 185); }
                  break;
               case 3:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(4, 5); }
                  break;
               case 4:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(4, 5); }
                  break;
               case 5:
                  if (curChar == 42)
                     { jjCheckNAddStates(186, 188); }
                  break;
               case 6:
                  if (curChar == 47 && kind > 1)
                     kind = 1;
                  break;
               case 9:
                  if (curChar == 43 && kind > 27)
                     kind = 27;
                  break;
               case 10:
                  if (curChar == 62 && kind > 29)
                     kind = 29;
                  break;
               case 11:
                  if (curChar == 44 && kind > 30)
                     kind = 30;
                  break;
               case 19:
                  if (curChar == 46)
                     { jjAddStates(189, 191); }
                  break;
               case 21:
                  if ((0xfffffdffffffffffL & l) != 0L)
                     { jjAddStates(192, 193); }
                  break;
               case 22:
                  if (curChar == 41 && kind > 39)
                     kind = 39;
                  break;
               case 50:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 49;
                  break;
               case 67:
                  if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 66;
                  break;
               case 74:
                  if (curChar != 33)
                     break;
                  if (kind > 69)
                     kind = 69;
                  { jjCheckNAddTwoStates(75, 84); }
                  break;
               case 75:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  { jjCheckNAddStates(194, 196); }
                  break;
               case 76:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(77, 78); }
                  break;
               case 77:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(77, 78); }
                  break;
               case 78:
                  if (curChar == 42)
                     { jjCheckNAddStates(197, 199); }
                  break;
               case 79:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(80, 81); }
                  break;
               case 80:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(80, 81); }
                  break;
               case 81:
                  if (curChar == 42)
                     { jjCheckNAddStates(200, 202); }
                  break;
               case 82:
                  if (curChar != 47)
                     break;
                  if (kind > 69)
                     kind = 69;
                  { jjCheckNAddStates(194, 196); }
                  break;
               case 83:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 76;
                  break;
               case 84:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  { jjCheckNAdd(84); }
                  break;
               case 86:
                  if (curChar == 45)
                     { jjAddStates(203, 204); }
                  break;
               case 88:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAddTwoStates(88, 89); }
                  break;
               case 90:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAddTwoStates(88, 89); }
                  break;
               case 91:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAddStates(205, 209); }
                  break;
               case 92:
                  if (curChar != 10)
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAddTwoStates(88, 89); }
                  break;
               case 93:
               case 102:
                  if (curChar == 13)
                     { jjCheckNAdd(92); }
                  break;
               case 94:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAddTwoStates(88, 89); }
                  break;
               case 95:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAddStates(210, 217); }
                  break;
               case 96:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAddStates(218, 221); }
                  break;
               case 97:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAddStates(222, 226); }
                  break;
               case 98:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAddStates(227, 232); }
                  break;
               case 99:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAddStates(233, 239); }
                  break;
               case 101:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAddStates(240, 244); }
                  break;
               case 103:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAddStates(245, 252); }
                  break;
               case 104:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAddStates(253, 256); }
                  break;
               case 105:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAddStates(257, 261); }
                  break;
               case 106:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAddStates(262, 267); }
                  break;
               case 107:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAddStates(268, 274); }
                  break;
               case 108:
                  if (curChar == 60)
                     { jjCheckNAddStates(178, 182); }
                  break;
               case 110:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(275, 279); }
                  break;
               case 111:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(112, 113); }
                  break;
               case 112:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(112, 113); }
                  break;
               case 113:
                  if (curChar == 42)
                     { jjCheckNAddStates(280, 282); }
                  break;
               case 114:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(115, 116); }
                  break;
               case 115:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(115, 116); }
                  break;
               case 116:
                  if (curChar == 42)
                     { jjCheckNAddStates(283, 285); }
                  break;
               case 117:
                  if (curChar == 47)
                     { jjCheckNAddStates(275, 279); }
                  break;
               case 118:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 111;
                  break;
               case 119:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(120, 229); }
                  break;
               case 121:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(286, 291); }
                  break;
               case 122:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(292, 297); }
                  break;
               case 123:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(124, 125); }
                  break;
               case 124:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(124, 125); }
                  break;
               case 125:
                  if (curChar == 42)
                     { jjCheckNAddStates(298, 300); }
                  break;
               case 126:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(127, 128); }
                  break;
               case 127:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(127, 128); }
                  break;
               case 128:
                  if (curChar == 42)
                     { jjCheckNAddStates(301, 303); }
                  break;
               case 129:
                  if (curChar == 47)
                     { jjCheckNAddStates(292, 297); }
                  break;
               case 130:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 123;
                  break;
               case 131:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(132, 148); }
                  break;
               case 133:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(304, 306); }
                  break;
               case 134:
                  if (curChar == 61)
                     { jjCheckNAddStates(307, 311); }
                  break;
               case 135:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(136, 178); }
                  break;
               case 137:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(312, 317); }
                  break;
               case 138:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(318, 323); }
                  break;
               case 139:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(140, 141); }
                  break;
               case 140:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(140, 141); }
                  break;
               case 141:
                  if (curChar == 42)
                     { jjCheckNAddStates(324, 326); }
                  break;
               case 142:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(143, 144); }
                  break;
               case 143:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(143, 144); }
                  break;
               case 144:
                  if (curChar == 42)
                     { jjCheckNAddStates(327, 329); }
                  break;
               case 145:
                  if (curChar == 47)
                     { jjCheckNAddStates(318, 323); }
                  break;
               case 146:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 139;
                  break;
               case 147:
                  if (curChar == 62 && kind > 104)
                     kind = 104;
                  break;
               case 149:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(304, 306); }
                  break;
               case 151:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(330, 335); }
                  break;
               case 152:
                  if (curChar == 10)
                     { jjCheckNAddStates(304, 306); }
                  break;
               case 153:
               case 161:
                  if (curChar == 13)
                     { jjCheckNAdd(152); }
                  break;
               case 154:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(304, 306); }
                  break;
               case 155:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(336, 344); }
                  break;
               case 156:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(345, 349); }
                  break;
               case 157:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(350, 355); }
                  break;
               case 158:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(356, 362); }
                  break;
               case 159:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(363, 370); }
                  break;
               case 160:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(371, 376); }
                  break;
               case 162:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(377, 385); }
                  break;
               case 163:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(386, 390); }
                  break;
               case 164:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(391, 396); }
                  break;
               case 165:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(397, 403); }
                  break;
               case 166:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(404, 411); }
                  break;
               case 168:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(312, 317); }
                  break;
               case 169:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(412, 419); }
                  break;
               case 170:
                  if (curChar == 10)
                     { jjCheckNAddStates(312, 317); }
                  break;
               case 171:
               case 180:
                  if (curChar == 13)
                     { jjCheckNAdd(170); }
                  break;
               case 172:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(420, 428); }
                  break;
               case 173:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(429, 439); }
                  break;
               case 174:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(440, 446); }
                  break;
               case 175:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(447, 454); }
                  break;
               case 176:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(455, 463); }
                  break;
               case 177:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(464, 473); }
                  break;
               case 179:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(474, 481); }
                  break;
               case 181:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(482, 492); }
                  break;
               case 182:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(493, 499); }
                  break;
               case 183:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(500, 507); }
                  break;
               case 184:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(508, 516); }
                  break;
               case 185:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(517, 526); }
                  break;
               case 186:
                  if (curChar == 34)
                     { jjCheckNAddStates(527, 529); }
                  break;
               case 187:
                  if ((0xfffffffbffffcbffL & l) != 0L)
                     { jjCheckNAddStates(527, 529); }
                  break;
               case 188:
                  if (curChar == 34)
                     { jjCheckNAddStates(530, 534); }
                  break;
               case 190:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(527, 529); }
                  break;
               case 191:
                  if (curChar == 10)
                     { jjCheckNAddStates(527, 529); }
                  break;
               case 192:
               case 195:
                  if (curChar == 13)
                     { jjCheckNAdd(191); }
                  break;
               case 193:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(527, 529); }
                  break;
               case 194:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(535, 540); }
                  break;
               case 196:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(527, 529); }
                  break;
               case 197:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(541, 549); }
                  break;
               case 198:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(550, 554); }
                  break;
               case 199:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(555, 560); }
                  break;
               case 200:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(561, 567); }
                  break;
               case 201:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(568, 575); }
                  break;
               case 202:
                  if (curChar == 39)
                     { jjCheckNAddStates(576, 578); }
                  break;
               case 203:
                  if ((0xffffff7fffffcbffL & l) != 0L)
                     { jjCheckNAddStates(576, 578); }
                  break;
               case 204:
                  if (curChar == 39)
                     { jjCheckNAddStates(530, 534); }
                  break;
               case 206:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(576, 578); }
                  break;
               case 207:
                  if (curChar == 10)
                     { jjCheckNAddStates(576, 578); }
                  break;
               case 208:
               case 211:
                  if (curChar == 13)
                     { jjCheckNAdd(207); }
                  break;
               case 209:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(576, 578); }
                  break;
               case 210:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(579, 584); }
                  break;
               case 212:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(576, 578); }
                  break;
               case 213:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(585, 593); }
                  break;
               case 214:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(594, 598); }
                  break;
               case 215:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(599, 604); }
                  break;
               case 216:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(605, 611); }
                  break;
               case 217:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(612, 619); }
                  break;
               case 219:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(286, 291); }
                  break;
               case 220:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(620, 627); }
                  break;
               case 221:
                  if (curChar == 10)
                     { jjCheckNAddStates(286, 291); }
                  break;
               case 222:
               case 231:
                  if (curChar == 13)
                     { jjCheckNAdd(221); }
                  break;
               case 223:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(628, 636); }
                  break;
               case 224:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(637, 647); }
                  break;
               case 225:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(648, 654); }
                  break;
               case 226:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(655, 662); }
                  break;
               case 227:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(663, 671); }
                  break;
               case 228:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(672, 681); }
                  break;
               case 230:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(682, 689); }
                  break;
               case 232:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(690, 700); }
                  break;
               case 233:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(701, 707); }
                  break;
               case 234:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(708, 715); }
                  break;
               case 235:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(716, 724); }
                  break;
               case 236:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(725, 734); }
                  break;
               case 243:
                  if (curChar == 33)
                     jjstateSet[jjnewStateCnt++] = 242;
                  break;
               case 244:
                  if (curChar == 47)
                     { jjCheckNAddStates(735, 738); }
                  break;
               case 245:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(739, 743); }
                  break;
               case 246:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(247, 248); }
                  break;
               case 247:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(247, 248); }
                  break;
               case 248:
                  if (curChar == 42)
                     { jjCheckNAddStates(744, 746); }
                  break;
               case 249:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(250, 251); }
                  break;
               case 250:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(250, 251); }
                  break;
               case 251:
                  if (curChar == 42)
                     { jjCheckNAddStates(747, 749); }
                  break;
               case 252:
                  if (curChar == 47)
                     { jjCheckNAddStates(739, 743); }
                  break;
               case 253:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 246;
                  break;
               case 254:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(255, 278); }
                  break;
               case 256:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(750, 753); }
                  break;
               case 257:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(754, 756); }
                  break;
               case 258:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(259, 260); }
                  break;
               case 259:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(259, 260); }
                  break;
               case 260:
                  if (curChar == 42)
                     { jjCheckNAddStates(757, 759); }
                  break;
               case 261:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(262, 263); }
                  break;
               case 262:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(262, 263); }
                  break;
               case 263:
                  if (curChar == 42)
                     { jjCheckNAddStates(760, 762); }
                  break;
               case 264:
                  if (curChar == 47)
                     { jjCheckNAddStates(754, 756); }
                  break;
               case 265:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 258;
                  break;
               case 266:
                  if (curChar == 62 && kind > 105)
                     kind = 105;
                  break;
               case 268:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(750, 753); }
                  break;
               case 269:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(763, 768); }
                  break;
               case 270:
                  if (curChar == 10)
                     { jjCheckNAddStates(750, 753); }
                  break;
               case 271:
               case 280:
                  if (curChar == 13)
                     { jjCheckNAdd(270); }
                  break;
               case 272:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(769, 774); }
                  break;
               case 273:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(775, 783); }
                  break;
               case 274:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(784, 788); }
                  break;
               case 275:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(789, 794); }
                  break;
               case 276:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(795, 801); }
                  break;
               case 277:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(802, 809); }
                  break;
               case 279:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(810, 815); }
                  break;
               case 281:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(816, 824); }
                  break;
               case 282:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(825, 829); }
                  break;
               case 283:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(830, 835); }
                  break;
               case 284:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(836, 842); }
                  break;
               case 285:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(843, 850); }
                  break;
               case 286:
                  if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 244;
                  break;
               case 287:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  { jjCheckNAddStates(110, 129); }
                  break;
               case 288:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(289, 290); }
                  break;
               case 289:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(289, 290); }
                  break;
               case 290:
                  if (curChar == 42)
                     { jjCheckNAddStates(851, 853); }
                  break;
               case 291:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(292, 293); }
                  break;
               case 292:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(292, 293); }
                  break;
               case 293:
                  if (curChar == 42)
                     { jjCheckNAddStates(854, 856); }
                  break;
               case 294:
                  if (curChar != 47)
                     break;
                  if (kind > 21)
                     kind = 21;
                  { jjCheckNAddTwoStates(295, 296); }
                  break;
               case 295:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 288;
                  break;
               case 296:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  { jjCheckNAddTwoStates(295, 296); }
                  break;
               case 297:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(298, 299); }
                  break;
               case 298:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(298, 299); }
                  break;
               case 299:
                  if (curChar == 42)
                     { jjCheckNAddStates(857, 859); }
                  break;
               case 300:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(301, 302); }
                  break;
               case 301:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(301, 302); }
                  break;
               case 302:
                  if (curChar == 42)
                     { jjCheckNAddStates(860, 862); }
                  break;
               case 303:
                  if (curChar == 47)
                     { jjCheckNAddStates(863, 865); }
                  break;
               case 304:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 297;
                  break;
               case 305:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(863, 865); }
                  break;
               case 307:
                  if (curChar == 61 && kind > 24)
                     kind = 24;
                  break;
               case 308:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(309, 310); }
                  break;
               case 309:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(309, 310); }
                  break;
               case 310:
                  if (curChar == 42)
                     { jjCheckNAddStates(866, 868); }
                  break;
               case 311:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(312, 313); }
                  break;
               case 312:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(312, 313); }
                  break;
               case 313:
                  if (curChar == 42)
                     { jjCheckNAddStates(869, 871); }
                  break;
               case 314:
                  if (curChar == 47)
                     { jjCheckNAddStates(872, 874); }
                  break;
               case 315:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 308;
                  break;
               case 316:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(872, 874); }
                  break;
               case 317:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(318, 319); }
                  break;
               case 318:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(318, 319); }
                  break;
               case 319:
                  if (curChar == 42)
                     { jjCheckNAddStates(875, 877); }
                  break;
               case 320:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(321, 322); }
                  break;
               case 321:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(321, 322); }
                  break;
               case 322:
                  if (curChar == 42)
                     { jjCheckNAddStates(878, 880); }
                  break;
               case 323:
                  if (curChar == 47)
                     { jjCheckNAddStates(881, 883); }
                  break;
               case 324:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 317;
                  break;
               case 325:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(881, 883); }
                  break;
               case 326:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(327, 328); }
                  break;
               case 327:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(327, 328); }
                  break;
               case 328:
                  if (curChar == 42)
                     { jjCheckNAddStates(884, 886); }
                  break;
               case 329:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(330, 331); }
                  break;
               case 330:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(330, 331); }
                  break;
               case 331:
                  if (curChar == 42)
                     { jjCheckNAddStates(887, 889); }
                  break;
               case 332:
                  if (curChar == 47)
                     { jjCheckNAddStates(890, 892); }
                  break;
               case 333:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 326;
                  break;
               case 334:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(890, 892); }
                  break;
               case 335:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(336, 337); }
                  break;
               case 336:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(336, 337); }
                  break;
               case 337:
                  if (curChar == 42)
                     { jjCheckNAddStates(893, 895); }
                  break;
               case 338:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(339, 340); }
                  break;
               case 339:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(339, 340); }
                  break;
               case 340:
                  if (curChar == 42)
                     { jjCheckNAddStates(896, 898); }
                  break;
               case 341:
                  if (curChar == 47)
                     { jjCheckNAddStates(899, 901); }
                  break;
               case 342:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 335;
                  break;
               case 343:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(899, 901); }
                  break;
               case 344:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(345, 346); }
                  break;
               case 345:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(345, 346); }
                  break;
               case 346:
                  if (curChar == 42)
                     { jjCheckNAddStates(902, 904); }
                  break;
               case 347:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(348, 349); }
                  break;
               case 348:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(348, 349); }
                  break;
               case 349:
                  if (curChar == 42)
                     { jjCheckNAddStates(905, 907); }
                  break;
               case 350:
                  if (curChar == 47)
                     { jjCheckNAddStates(908, 910); }
                  break;
               case 351:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 344;
                  break;
               case 352:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(908, 910); }
                  break;
               case 355:
                  if (curChar != 34)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(173, 177); }
                  break;
               case 356:
                  if ((0xfffffffbffffcbffL & l) != 0L)
                     { jjCheckNAddStates(911, 913); }
                  break;
               case 357:
                  if (curChar == 34 && kind > 34)
                     kind = 34;
                  break;
               case 359:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(911, 913); }
                  break;
               case 360:
                  if (curChar == 10)
                     { jjCheckNAddStates(911, 913); }
                  break;
               case 361:
               case 364:
                  if (curChar == 13)
                     { jjCheckNAdd(360); }
                  break;
               case 362:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(911, 913); }
                  break;
               case 363:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(914, 919); }
                  break;
               case 365:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(911, 913); }
                  break;
               case 366:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(920, 928); }
                  break;
               case 367:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(929, 933); }
                  break;
               case 368:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(934, 939); }
                  break;
               case 369:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(940, 946); }
                  break;
               case 370:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(947, 954); }
                  break;
               case 371:
                  if ((0xfffffffbffffcbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(371, 372); }
                  break;
               case 373:
                  if ((0x3400L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(371, 372); }
                  break;
               case 374:
                  if (curChar != 10)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(371, 372); }
                  break;
               case 375:
               case 378:
                  if (curChar == 13)
                     { jjCheckNAdd(374); }
                  break;
               case 376:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(371, 372); }
                  break;
               case 377:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(955, 959); }
                  break;
               case 379:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(371, 372); }
                  break;
               case 380:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(960, 967); }
                  break;
               case 381:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(968, 971); }
                  break;
               case 382:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(972, 976); }
                  break;
               case 383:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(977, 982); }
                  break;
               case 384:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(983, 989); }
                  break;
               case 385:
                  if (curChar != 39)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(168, 172); }
                  break;
               case 386:
                  if ((0xffffff7fffffcbffL & l) != 0L)
                     { jjCheckNAddStates(990, 992); }
                  break;
               case 387:
                  if (curChar == 39 && kind > 34)
                     kind = 34;
                  break;
               case 389:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(990, 992); }
                  break;
               case 390:
                  if (curChar == 10)
                     { jjCheckNAddStates(990, 992); }
                  break;
               case 391:
               case 394:
                  if (curChar == 13)
                     { jjCheckNAdd(390); }
                  break;
               case 392:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(990, 992); }
                  break;
               case 393:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(993, 998); }
                  break;
               case 395:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(990, 992); }
                  break;
               case 396:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(999, 1007); }
                  break;
               case 397:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1008, 1012); }
                  break;
               case 398:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1013, 1018); }
                  break;
               case 399:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1019, 1025); }
                  break;
               case 400:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1026, 1033); }
                  break;
               case 401:
                  if ((0xffffff7fffffcbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(401, 402); }
                  break;
               case 403:
                  if ((0x3400L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(401, 402); }
                  break;
               case 404:
                  if (curChar != 10)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(401, 402); }
                  break;
               case 405:
               case 408:
                  if (curChar == 13)
                     { jjCheckNAdd(404); }
                  break;
               case 406:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(401, 402); }
                  break;
               case 407:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(1034, 1038); }
                  break;
               case 409:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(401, 402); }
                  break;
               case 410:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(1039, 1046); }
                  break;
               case 411:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(1047, 1050); }
                  break;
               case 412:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(1051, 1055); }
                  break;
               case 413:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(1056, 1061); }
                  break;
               case 414:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(1062, 1068); }
                  break;
               case 415:
                  if (curChar == 45)
                     { jjAddStates(164, 167); }
                  break;
               case 417:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddTwoStates(417, 418); }
                  break;
               case 419:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddTwoStates(417, 418); }
                  break;
               case 420:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1069, 1073); }
                  break;
               case 421:
                  if (curChar != 10)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddTwoStates(417, 418); }
                  break;
               case 422:
               case 453:
                  if (curChar == 13)
                     { jjCheckNAdd(421); }
                  break;
               case 423:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddTwoStates(417, 418); }
                  break;
               case 424:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1074, 1081); }
                  break;
               case 425:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1082, 1085); }
                  break;
               case 426:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1086, 1090); }
                  break;
               case 427:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1091, 1096); }
                  break;
               case 428:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1097, 1103); }
                  break;
               case 430:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(1104, 1106); }
                  break;
               case 431:
                  if (curChar == 40 && kind > 103)
                     kind = 103;
                  break;
               case 433:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1104, 1106); }
                  break;
               case 434:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1107, 1112); }
                  break;
               case 435:
                  if (curChar == 10)
                     { jjCheckNAddStates(1104, 1106); }
                  break;
               case 436:
               case 445:
                  if (curChar == 13)
                     { jjCheckNAdd(435); }
                  break;
               case 437:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1104, 1106); }
                  break;
               case 438:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1113, 1121); }
                  break;
               case 439:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1122, 1126); }
                  break;
               case 440:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1127, 1132); }
                  break;
               case 441:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1133, 1139); }
                  break;
               case 442:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1140, 1147); }
                  break;
               case 444:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1148, 1153); }
                  break;
               case 446:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1154, 1162); }
                  break;
               case 447:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1163, 1167); }
                  break;
               case 448:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1168, 1173); }
                  break;
               case 449:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1174, 1180); }
                  break;
               case 450:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1181, 1188); }
                  break;
               case 452:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1189, 1193); }
                  break;
               case 454:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1194, 1201); }
                  break;
               case 455:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1202, 1205); }
                  break;
               case 456:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1206, 1210); }
                  break;
               case 457:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1211, 1216); }
                  break;
               case 458:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1217, 1223); }
                  break;
               case 460:
                  if (curChar == 35)
                     { jjCheckNAddStates(159, 163); }
                  break;
               case 461:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(462, 475); }
                  break;
               case 463:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddTwoStates(463, 464); }
                  break;
               case 465:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddTwoStates(463, 464); }
                  break;
               case 466:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1224, 1228); }
                  break;
               case 467:
                  if (curChar != 10)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddTwoStates(463, 464); }
                  break;
               case 468:
               case 477:
                  if (curChar == 13)
                     { jjCheckNAdd(467); }
                  break;
               case 469:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddTwoStates(463, 464); }
                  break;
               case 470:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1229, 1236); }
                  break;
               case 471:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1237, 1240); }
                  break;
               case 472:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1241, 1245); }
                  break;
               case 473:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1246, 1251); }
                  break;
               case 474:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1252, 1258); }
                  break;
               case 476:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1259, 1263); }
                  break;
               case 478:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1264, 1271); }
                  break;
               case 479:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1272, 1275); }
                  break;
               case 480:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1276, 1280); }
                  break;
               case 481:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1281, 1286); }
                  break;
               case 482:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1287, 1293); }
                  break;
               case 483:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(483, 484); }
                  break;
               case 485:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(483, 484); }
                  break;
               case 486:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1294, 1298); }
                  break;
               case 487:
                  if (curChar != 10)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(483, 484); }
                  break;
               case 488:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 487;
                  break;
               case 489:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(483, 484); }
                  break;
               case 490:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1299, 1306); }
                  break;
               case 491:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1307, 1310); }
                  break;
               case 492:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1311, 1315); }
                  break;
               case 493:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1316, 1321); }
                  break;
               case 494:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1322, 1328); }
                  break;
               case 496:
                  if (curChar == 40)
                     { jjCheckNAddStates(1329, 1334); }
                  break;
               case 497:
                  if (curChar == 34)
                     { jjCheckNAddStates(1335, 1337); }
                  break;
               case 498:
                  if ((0xfffffffbffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1335, 1337); }
                  break;
               case 499:
                  if (curChar == 34)
                     { jjCheckNAddTwoStates(500, 509); }
                  break;
               case 500:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1338, 1340); }
                  break;
               case 501:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(502, 503); }
                  break;
               case 502:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(502, 503); }
                  break;
               case 503:
                  if (curChar == 42)
                     { jjCheckNAddStates(1341, 1343); }
                  break;
               case 504:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(505, 506); }
                  break;
               case 505:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(505, 506); }
                  break;
               case 506:
                  if (curChar == 42)
                     { jjCheckNAddStates(1344, 1346); }
                  break;
               case 507:
                  if (curChar == 47)
                     { jjCheckNAddStates(1338, 1340); }
                  break;
               case 508:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 501;
                  break;
               case 509:
                  if (curChar == 41 && kind > 54)
                     kind = 54;
                  break;
               case 511:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(1335, 1337); }
                  break;
               case 512:
                  if (curChar == 10)
                     { jjCheckNAddStates(1335, 1337); }
                  break;
               case 513:
               case 516:
                  if (curChar == 13)
                     { jjCheckNAdd(512); }
                  break;
               case 514:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1335, 1337); }
                  break;
               case 515:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1347, 1352); }
                  break;
               case 517:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1335, 1337); }
                  break;
               case 518:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1353, 1361); }
                  break;
               case 519:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1362, 1366); }
                  break;
               case 520:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1367, 1372); }
                  break;
               case 521:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1373, 1379); }
                  break;
               case 522:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1380, 1387); }
                  break;
               case 523:
                  if (curChar == 39)
                     { jjCheckNAddStates(1388, 1390); }
                  break;
               case 524:
                  if ((0xffffff7fffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1388, 1390); }
                  break;
               case 525:
                  if (curChar == 39)
                     { jjCheckNAddTwoStates(500, 509); }
                  break;
               case 527:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(1388, 1390); }
                  break;
               case 528:
                  if (curChar == 10)
                     { jjCheckNAddStates(1388, 1390); }
                  break;
               case 529:
               case 532:
                  if (curChar == 13)
                     { jjCheckNAdd(528); }
                  break;
               case 530:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1388, 1390); }
                  break;
               case 531:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1391, 1396); }
                  break;
               case 533:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1388, 1390); }
                  break;
               case 534:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1397, 1405); }
                  break;
               case 535:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1406, 1410); }
                  break;
               case 536:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1411, 1416); }
                  break;
               case 537:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1417, 1423); }
                  break;
               case 538:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1424, 1431); }
                  break;
               case 539:
                  if ((0xfffffc7a00000000L & l) != 0L)
                     { jjCheckNAddStates(1432, 1435); }
                  break;
               case 541:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1432, 1435); }
                  break;
               case 542:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1436, 1441); }
                  break;
               case 543:
                  if (curChar == 10)
                     { jjCheckNAddStates(1432, 1435); }
                  break;
               case 544:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 543;
                  break;
               case 545:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1442, 1447); }
                  break;
               case 546:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1448, 1456); }
                  break;
               case 547:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1457, 1461); }
                  break;
               case 548:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1462, 1467); }
                  break;
               case 549:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1468, 1474); }
                  break;
               case 550:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1475, 1482); }
                  break;
               case 551:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1483, 1491); }
                  break;
               case 552:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(553, 554); }
                  break;
               case 553:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(553, 554); }
                  break;
               case 554:
                  if (curChar == 42)
                     { jjCheckNAddStates(1492, 1494); }
                  break;
               case 555:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(556, 557); }
                  break;
               case 556:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(556, 557); }
                  break;
               case 557:
                  if (curChar == 42)
                     { jjCheckNAddStates(1495, 1497); }
                  break;
               case 558:
                  if (curChar == 47)
                     { jjCheckNAddStates(1498, 1504); }
                  break;
               case 559:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 552;
                  break;
               case 562:
                  if (curChar == 43)
                     { jjAddStates(1505, 1506); }
                  break;
               case 563:
                  if (curChar != 63)
                     break;
                  if (kind > 97)
                     kind = 97;
                  jjstateSet[jjnewStateCnt++] = 564;
                  break;
               case 564:
                  if (curChar != 63)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1507, 1510); }
                  break;
               case 565:
                  if (curChar == 63 && kind > 97)
                     kind = 97;
                  break;
               case 566:
               case 582:
               case 586:
               case 589:
               case 592:
                  if (curChar != 63)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAdd(565); }
                  break;
               case 567:
                  if (curChar != 63)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddTwoStates(565, 566); }
                  break;
               case 568:
                  if (curChar != 63)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1511, 1513); }
                  break;
               case 569:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjAddStates(1514, 1519); }
                  break;
               case 570:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 571;
                  break;
               case 571:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 572;
                  break;
               case 572:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 573;
                  break;
               case 573:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(574); }
                  break;
               case 574:
                  if ((0x3ff000000000000L & l) != 0L && kind > 97)
                     kind = 97;
                  break;
               case 575:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 576;
                  break;
               case 576:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 577;
                  break;
               case 577:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 578;
                  break;
               case 578:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAdd(565); }
                  break;
               case 579:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 580;
                  break;
               case 580:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 581;
                  break;
               case 581:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  jjstateSet[jjnewStateCnt++] = 582;
                  break;
               case 583:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 584;
                  break;
               case 584:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  jjstateSet[jjnewStateCnt++] = 585;
                  break;
               case 585:
                  if (curChar != 63)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddTwoStates(565, 586); }
                  break;
               case 587:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  jjstateSet[jjnewStateCnt++] = 588;
                  break;
               case 588:
                  if (curChar != 63)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1520, 1522); }
                  break;
               case 590:
                  if (curChar != 63)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddTwoStates(565, 589); }
                  break;
               case 591:
                  if (curChar != 63)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1523, 1526); }
                  break;
               case 593:
                  if (curChar != 63)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddTwoStates(565, 592); }
                  break;
               case 594:
                  if (curChar != 63)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1527, 1529); }
                  break;
               case 595:
                  if (curChar == 43)
                     jjstateSet[jjnewStateCnt++] = 596;
                  break;
               case 596:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(597, 603); }
                  break;
               case 597:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 598;
                  break;
               case 598:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  jjstateSet[jjnewStateCnt++] = 599;
                  break;
               case 599:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1530, 1533); }
                  break;
               case 600:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAdd(574); }
                  break;
               case 601:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddTwoStates(574, 600); }
                  break;
               case 602:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1534, 1536); }
                  break;
               case 603:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1537, 1541); }
                  break;
               case 604:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(597); }
                  break;
               case 605:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(604, 597); }
                  break;
               case 606:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1542, 1544); }
                  break;
               case 607:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1545, 1548); }
                  break;
               case 608:
                  if (curChar == 46)
                     { jjCheckNAddStates(130, 158); }
                  break;
               case 609:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(609, 611); }
                  break;
               case 612:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(612, 614); }
                  break;
               case 615:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(615, 617); }
                  break;
               case 618:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(618, 620); }
                  break;
               case 621:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(621, 623); }
                  break;
               case 624:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(624, 626); }
                  break;
               case 627:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(627, 631); }
                  break;
               case 632:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(632, 636); }
                  break;
               case 637:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(637, 639); }
                  break;
               case 640:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(640, 641); }
                  break;
               case 642:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(642, 643); }
                  break;
               case 644:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(644, 646); }
                  break;
               case 647:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(647, 649); }
                  break;
               case 650:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(650, 652); }
                  break;
               case 653:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(653, 655); }
                  break;
               case 656:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(656, 658); }
                  break;
               case 659:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1549, 1553); }
                  break;
               case 673:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(673, 675); }
                  break;
               case 676:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(676, 678); }
                  break;
               case 679:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1554, 1556); }
                  break;
               case 683:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1557, 1559); }
                  break;
               case 688:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(688, 689); }
                  break;
               case 698:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1560, 1562); }
                  break;
               case 700:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(1563, 1565); }
                  break;
               case 701:
                  if (curChar == 57 && kind > 65)
                     kind = 65;
                  break;
               case 704:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1563, 1565); }
                  break;
               case 705:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1566, 1571); }
                  break;
               case 706:
                  if (curChar == 10)
                     { jjCheckNAddStates(1563, 1565); }
                  break;
               case 707:
               case 716:
                  if (curChar == 13)
                     { jjCheckNAdd(706); }
                  break;
               case 708:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1563, 1565); }
                  break;
               case 709:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1572, 1580); }
                  break;
               case 710:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1581, 1585); }
                  break;
               case 711:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1586, 1591); }
                  break;
               case 712:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1592, 1598); }
                  break;
               case 713:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1599, 1606); }
                  break;
               case 715:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1607, 1612); }
                  break;
               case 717:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1613, 1621); }
                  break;
               case 718:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1622, 1626); }
                  break;
               case 719:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1627, 1632); }
                  break;
               case 720:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1633, 1639); }
                  break;
               case 721:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1640, 1647); }
                  break;
               case 722:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1648, 1650); }
                  break;
               case 724:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  { jjCheckNAddTwoStates(724, 725); }
                  break;
               case 726:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  { jjCheckNAddTwoStates(724, 725); }
                  break;
               case 727:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  { jjCheckNAddStates(1651, 1655); }
                  break;
               case 728:
                  if (curChar != 10)
                     break;
                  if (kind > 66)
                     kind = 66;
                  { jjCheckNAddTwoStates(724, 725); }
                  break;
               case 729:
               case 738:
                  if (curChar == 13)
                     { jjCheckNAdd(728); }
                  break;
               case 730:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  { jjCheckNAddTwoStates(724, 725); }
                  break;
               case 731:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  { jjCheckNAddStates(1656, 1663); }
                  break;
               case 732:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  { jjCheckNAddStates(1664, 1667); }
                  break;
               case 733:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  { jjCheckNAddStates(1668, 1672); }
                  break;
               case 734:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  { jjCheckNAddStates(1673, 1678); }
                  break;
               case 735:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  { jjCheckNAddStates(1679, 1685); }
                  break;
               case 737:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  { jjCheckNAddStates(1686, 1690); }
                  break;
               case 739:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  { jjCheckNAddStates(1691, 1698); }
                  break;
               case 740:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  { jjCheckNAddStates(1699, 1702); }
                  break;
               case 741:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  { jjCheckNAddStates(1703, 1707); }
                  break;
               case 742:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  { jjCheckNAddStates(1708, 1713); }
                  break;
               case 743:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  { jjCheckNAddStates(1714, 1720); }
                  break;
               case 744:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(744, 745); }
                  break;
               case 745:
                  if (curChar == 37 && kind > 67)
                     kind = 67;
                  break;
               case 746:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 68)
                     kind = 68;
                  { jjCheckNAdd(746); }
                  break;
               case 747:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(748, 761); }
                  break;
               case 749:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAddTwoStates(749, 750); }
                  break;
               case 751:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAddTwoStates(749, 750); }
                  break;
               case 752:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAddStates(1721, 1725); }
                  break;
               case 753:
                  if (curChar != 10)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAddTwoStates(749, 750); }
                  break;
               case 754:
               case 763:
                  if (curChar == 13)
                     { jjCheckNAdd(753); }
                  break;
               case 755:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAddTwoStates(749, 750); }
                  break;
               case 756:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAddStates(1726, 1733); }
                  break;
               case 757:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAddStates(1734, 1737); }
                  break;
               case 758:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAddStates(1738, 1742); }
                  break;
               case 759:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAddStates(1743, 1748); }
                  break;
               case 760:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAddStates(1749, 1755); }
                  break;
               case 762:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAddStates(1756, 1760); }
                  break;
               case 764:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAddStates(1761, 1768); }
                  break;
               case 765:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAddStates(1769, 1772); }
                  break;
               case 766:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAddStates(1773, 1777); }
                  break;
               case 767:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAddStates(1778, 1783); }
                  break;
               case 768:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAddStates(1784, 1790); }
                  break;
               case 770:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 68)
                     kind = 68;
                  { jjCheckNAddStates(0, 109); }
                  break;
               case 771:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(771, 611); }
                  break;
               case 772:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(772, 773); }
                  break;
               case 773:
                  if (curChar == 46)
                     { jjCheckNAdd(609); }
                  break;
               case 774:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(774, 614); }
                  break;
               case 775:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(775, 776); }
                  break;
               case 776:
                  if (curChar == 46)
                     { jjCheckNAdd(612); }
                  break;
               case 777:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(777, 617); }
                  break;
               case 778:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(778, 779); }
                  break;
               case 779:
                  if (curChar == 46)
                     { jjCheckNAdd(615); }
                  break;
               case 780:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(780, 620); }
                  break;
               case 781:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(781, 782); }
                  break;
               case 782:
                  if (curChar == 46)
                     { jjCheckNAdd(618); }
                  break;
               case 783:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(783, 623); }
                  break;
               case 784:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(784, 785); }
                  break;
               case 785:
                  if (curChar == 46)
                     { jjCheckNAdd(621); }
                  break;
               case 786:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(786, 626); }
                  break;
               case 787:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(787, 788); }
                  break;
               case 788:
                  if (curChar == 46)
                     { jjCheckNAdd(624); }
                  break;
               case 789:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(789, 631); }
                  break;
               case 790:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(790, 791); }
                  break;
               case 791:
                  if (curChar == 46)
                     { jjCheckNAdd(627); }
                  break;
               case 792:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(792, 636); }
                  break;
               case 793:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(793, 794); }
                  break;
               case 794:
                  if (curChar == 46)
                     { jjCheckNAdd(632); }
                  break;
               case 795:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(795, 639); }
                  break;
               case 796:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(796, 797); }
                  break;
               case 797:
                  if (curChar == 46)
                     { jjCheckNAdd(637); }
                  break;
               case 798:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(798, 641); }
                  break;
               case 799:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(799, 800); }
                  break;
               case 800:
                  if (curChar == 46)
                     { jjCheckNAdd(640); }
                  break;
               case 801:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(801, 643); }
                  break;
               case 802:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(802, 803); }
                  break;
               case 803:
                  if (curChar == 46)
                     { jjCheckNAdd(642); }
                  break;
               case 804:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(804, 646); }
                  break;
               case 805:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(805, 806); }
                  break;
               case 806:
                  if (curChar == 46)
                     { jjCheckNAdd(644); }
                  break;
               case 807:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(807, 649); }
                  break;
               case 808:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(808, 809); }
                  break;
               case 809:
                  if (curChar == 46)
                     { jjCheckNAdd(647); }
                  break;
               case 810:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(810, 652); }
                  break;
               case 811:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(811, 812); }
                  break;
               case 812:
                  if (curChar == 46)
                     { jjCheckNAdd(650); }
                  break;
               case 813:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(813, 655); }
                  break;
               case 814:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(814, 815); }
                  break;
               case 815:
                  if (curChar == 46)
                     { jjCheckNAdd(653); }
                  break;
               case 816:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(816, 658); }
                  break;
               case 817:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(817, 818); }
                  break;
               case 818:
                  if (curChar == 46)
                     { jjCheckNAdd(656); }
                  break;
               case 819:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1791, 1795); }
                  break;
               case 820:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(820, 821); }
                  break;
               case 821:
                  if (curChar == 46)
                     { jjCheckNAdd(659); }
                  break;
               case 822:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(822, 675); }
                  break;
               case 823:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(823, 824); }
                  break;
               case 824:
                  if (curChar == 46)
                     { jjCheckNAdd(673); }
                  break;
               case 825:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(825, 678); }
                  break;
               case 826:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(826, 827); }
                  break;
               case 827:
                  if (curChar == 46)
                     { jjCheckNAdd(676); }
                  break;
               case 828:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1796, 1798); }
                  break;
               case 829:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(829, 830); }
                  break;
               case 830:
                  if (curChar == 46)
                     { jjCheckNAdd(679); }
                  break;
               case 831:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1799, 1801); }
                  break;
               case 832:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(832, 833); }
                  break;
               case 833:
                  if (curChar == 46)
                     { jjCheckNAdd(683); }
                  break;
               case 834:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(834, 689); }
                  break;
               case 835:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(835, 836); }
                  break;
               case 836:
                  if (curChar == 46)
                     { jjCheckNAdd(688); }
                  break;
               case 837:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1802, 1804); }
                  break;
               case 838:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(838, 839); }
                  break;
               case 839:
                  if (curChar == 46)
                     { jjCheckNAdd(698); }
                  break;
               case 840:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1805, 1807); }
                  break;
               case 841:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(841, 842); }
                  break;
               case 842:
                  if (curChar == 46)
                     { jjCheckNAdd(722); }
                  break;
               case 843:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(843, 745); }
                  break;
               case 844:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(844, 845); }
                  break;
               case 845:
                  if (curChar == 46)
                     { jjCheckNAdd(744); }
                  break;
               case 846:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 68)
                     kind = 68;
                  { jjCheckNAdd(846); }
                  break;
               case 847:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(847, 848); }
                  break;
               case 848:
                  if (curChar == 46)
                     { jjCheckNAdd(746); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 7:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 36)
                        kind = 36;
                     { jjCheckNAddStates(1808, 1812); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddStates(1813, 1816); }
                  else if (curChar == 126)
                  {
                     if (kind > 31)
                        kind = 31;
                     { jjCheckNAdd(307); }
                  }
                  else if (curChar == 64)
                     { jjAddStates(1817, 1819); }
                  else if (curChar == 123)
                  {
                     if (kind > 26)
                        kind = 26;
                  }
                  if ((0x20000000200000L & l) != 0L)
                     { jjAddStates(1820, 1822); }
                  else if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 72;
                  else if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 17;
                  else if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 14;
                  break;
               case 1:
                  { jjAddStates(1823, 1824); }
                  break;
               case 3:
               case 4:
                  { jjCheckNAddTwoStates(4, 5); }
                  break;
               case 8:
                  if (curChar == 123 && kind > 26)
                     kind = 26;
                  break;
               case 12:
                  if ((0x200000002000000L & l) != 0L && kind > 33)
                     kind = 33;
                  break;
               case 13:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 12;
                  break;
               case 14:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 15:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 14;
                  break;
               case 16:
                  if ((0x10000000100000L & l) != 0L && kind > 33)
                     kind = 33;
                  break;
               case 17:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 16;
                  break;
               case 18:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 20:
                  if ((0x10000000100000L & l) != 0L)
                     { jjCheckNAdd(21); }
                  break;
               case 21:
                  { jjCheckNAddTwoStates(21, 22); }
                  break;
               case 23:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 24:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 23;
                  break;
               case 25:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 24;
                  break;
               case 26:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 25;
                  break;
               case 27:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 26;
                  break;
               case 28:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 27;
                  break;
               case 29:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 28;
                  break;
               case 30:
                  if ((0x200000002L & l) != 0L)
                     { jjCheckNAdd(21); }
                  break;
               case 31:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 30;
                  break;
               case 32:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 33:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 32;
                  break;
               case 34:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 33;
                  break;
               case 35:
                  if ((0x80000000800000L & l) != 0L)
                     { jjCheckNAdd(21); }
                  break;
               case 36:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 35;
                  break;
               case 37:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 36;
                  break;
               case 38:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 39:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 38;
                  break;
               case 40:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 39;
                  break;
               case 41:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 19;
                  break;
               case 42:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 41;
                  break;
               case 43:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 42;
                  break;
               case 44:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 43;
                  break;
               case 45:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 44;
                  break;
               case 46:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 45;
                  break;
               case 47:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 46;
                  break;
               case 48:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 47;
                  break;
               case 49:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 48;
                  break;
               case 51:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 50;
                  break;
               case 52:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 51;
                  break;
               case 53:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 52;
                  break;
               case 54:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 53;
                  break;
               case 55:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 54;
                  break;
               case 56:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 55;
                  break;
               case 57:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 56;
                  break;
               case 58:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 57;
                  break;
               case 59:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 58;
                  break;
               case 60:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 59;
                  break;
               case 61:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 60;
                  break;
               case 62:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 61;
                  break;
               case 63:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 62;
                  break;
               case 64:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 63;
                  break;
               case 65:
                  if ((0x100000001000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 64;
                  break;
               case 66:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 65;
                  break;
               case 68:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 67;
                  break;
               case 69:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 68;
                  break;
               case 70:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 69;
                  break;
               case 71:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 70;
                  break;
               case 72:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 71;
                  break;
               case 73:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 72;
                  break;
               case 77:
                  { jjAddStates(1825, 1826); }
                  break;
               case 79:
               case 80:
                  { jjCheckNAddTwoStates(80, 81); }
                  break;
               case 84:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  jjstateSet[jjnewStateCnt++] = 84;
                  break;
               case 85:
                  if (curChar == 64)
                     { jjAddStates(1817, 1819); }
                  break;
               case 87:
               case 88:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAddTwoStates(88, 89); }
                  break;
               case 89:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(90, 91); }
                  break;
               case 90:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAddTwoStates(88, 89); }
                  break;
               case 91:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAddStates(205, 209); }
                  break;
               case 95:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAddStates(210, 217); }
                  break;
               case 96:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAddStates(218, 221); }
                  break;
               case 97:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAddStates(222, 226); }
                  break;
               case 98:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAddStates(227, 232); }
                  break;
               case 99:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAddStates(233, 239); }
                  break;
               case 100:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(90, 101); }
                  break;
               case 101:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAddStates(240, 244); }
                  break;
               case 103:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAddStates(245, 252); }
                  break;
               case 104:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAddStates(253, 256); }
                  break;
               case 105:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAddStates(257, 261); }
                  break;
               case 106:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAddStates(262, 267); }
                  break;
               case 107:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAddStates(268, 274); }
                  break;
               case 109:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1827, 1830); }
                  break;
               case 112:
                  { jjAddStates(1831, 1832); }
                  break;
               case 114:
               case 115:
                  { jjCheckNAddTwoStates(115, 116); }
                  break;
               case 120:
               case 121:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(286, 291); }
                  break;
               case 124:
                  { jjAddStates(1833, 1834); }
                  break;
               case 126:
               case 127:
                  { jjCheckNAddTwoStates(127, 128); }
                  break;
               case 132:
               case 133:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(304, 306); }
                  break;
               case 136:
               case 137:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(312, 317); }
                  break;
               case 140:
                  { jjAddStates(1835, 1836); }
                  break;
               case 142:
               case 143:
                  { jjCheckNAddTwoStates(143, 144); }
                  break;
               case 148:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(149, 160); }
                  break;
               case 149:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(304, 306); }
                  break;
               case 150:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(149, 151); }
                  break;
               case 151:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(330, 335); }
                  break;
               case 155:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(336, 344); }
                  break;
               case 156:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(345, 349); }
                  break;
               case 157:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(350, 355); }
                  break;
               case 158:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(356, 362); }
                  break;
               case 159:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(363, 370); }
                  break;
               case 160:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(371, 376); }
                  break;
               case 162:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(377, 385); }
                  break;
               case 163:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(386, 390); }
                  break;
               case 164:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(391, 396); }
                  break;
               case 165:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(397, 403); }
                  break;
               case 166:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(404, 411); }
                  break;
               case 167:
                  if (curChar == 92)
                     { jjCheckNAddStates(1837, 1840); }
                  break;
               case 168:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(312, 317); }
                  break;
               case 169:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(412, 419); }
                  break;
               case 173:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(429, 439); }
                  break;
               case 174:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(440, 446); }
                  break;
               case 175:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(447, 454); }
                  break;
               case 176:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(455, 463); }
                  break;
               case 177:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(464, 473); }
                  break;
               case 178:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(168, 179); }
                  break;
               case 179:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(474, 481); }
                  break;
               case 181:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(482, 492); }
                  break;
               case 182:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(493, 499); }
                  break;
               case 183:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(500, 507); }
                  break;
               case 184:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(508, 516); }
                  break;
               case 185:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(517, 526); }
                  break;
               case 187:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(527, 529); }
                  break;
               case 189:
                  if (curChar == 92)
                     { jjAddStates(1841, 1844); }
                  break;
               case 193:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(527, 529); }
                  break;
               case 194:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(535, 540); }
                  break;
               case 197:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(541, 549); }
                  break;
               case 198:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(550, 554); }
                  break;
               case 199:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(555, 560); }
                  break;
               case 200:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(561, 567); }
                  break;
               case 201:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(568, 575); }
                  break;
               case 203:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(576, 578); }
                  break;
               case 205:
                  if (curChar == 92)
                     { jjAddStates(1845, 1848); }
                  break;
               case 209:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(576, 578); }
                  break;
               case 210:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(579, 584); }
                  break;
               case 213:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(585, 593); }
                  break;
               case 214:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(594, 598); }
                  break;
               case 215:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(599, 604); }
                  break;
               case 216:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(605, 611); }
                  break;
               case 217:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(612, 619); }
                  break;
               case 218:
                  if (curChar == 92)
                     { jjCheckNAddStates(1849, 1852); }
                  break;
               case 219:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(286, 291); }
                  break;
               case 220:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(620, 627); }
                  break;
               case 224:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(637, 647); }
                  break;
               case 225:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(648, 654); }
                  break;
               case 226:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(655, 662); }
                  break;
               case 227:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(663, 671); }
                  break;
               case 228:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(672, 681); }
                  break;
               case 229:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(219, 230); }
                  break;
               case 230:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(682, 689); }
                  break;
               case 232:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(690, 700); }
                  break;
               case 233:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(701, 707); }
                  break;
               case 234:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(708, 715); }
                  break;
               case 235:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(716, 724); }
                  break;
               case 236:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(725, 734); }
                  break;
               case 237:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 109;
                  break;
               case 238:
                  if ((0x200000002000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 237;
                  break;
               case 239:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 238;
                  break;
               case 240:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 239;
                  break;
               case 241:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 240;
                  break;
               case 242:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 241;
                  break;
               case 247:
                  { jjAddStates(1853, 1854); }
                  break;
               case 249:
               case 250:
                  { jjCheckNAddTwoStates(250, 251); }
                  break;
               case 255:
               case 256:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(750, 753); }
                  break;
               case 259:
                  { jjAddStates(1855, 1856); }
                  break;
               case 261:
               case 262:
                  { jjCheckNAddTwoStates(262, 263); }
                  break;
               case 267:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(268, 269); }
                  break;
               case 268:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(750, 753); }
                  break;
               case 269:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(763, 768); }
                  break;
               case 273:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(775, 783); }
                  break;
               case 274:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(784, 788); }
                  break;
               case 275:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(789, 794); }
                  break;
               case 276:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(795, 801); }
                  break;
               case 277:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(802, 809); }
                  break;
               case 278:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(268, 279); }
                  break;
               case 279:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(810, 815); }
                  break;
               case 281:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(816, 824); }
                  break;
               case 282:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(825, 829); }
                  break;
               case 283:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(830, 835); }
                  break;
               case 284:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(836, 842); }
                  break;
               case 285:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(843, 850); }
                  break;
               case 289:
                  { jjAddStates(1857, 1858); }
                  break;
               case 291:
               case 292:
                  { jjCheckNAddTwoStates(292, 293); }
                  break;
               case 298:
                  { jjAddStates(1859, 1860); }
                  break;
               case 300:
               case 301:
                  { jjCheckNAddTwoStates(301, 302); }
                  break;
               case 306:
                  if (curChar == 126)
                     { jjCheckNAdd(307); }
                  break;
               case 309:
                  { jjAddStates(1861, 1862); }
                  break;
               case 311:
               case 312:
                  { jjCheckNAddTwoStates(312, 313); }
                  break;
               case 318:
                  { jjAddStates(1863, 1864); }
                  break;
               case 320:
               case 321:
                  { jjCheckNAddTwoStates(321, 322); }
                  break;
               case 327:
                  { jjAddStates(1865, 1866); }
                  break;
               case 329:
               case 330:
                  { jjCheckNAddTwoStates(330, 331); }
                  break;
               case 336:
                  { jjAddStates(1867, 1868); }
                  break;
               case 338:
               case 339:
                  { jjCheckNAddTwoStates(339, 340); }
                  break;
               case 345:
                  { jjAddStates(1869, 1870); }
                  break;
               case 347:
               case 348:
                  { jjCheckNAddTwoStates(348, 349); }
                  break;
               case 353:
                  if (curChar == 126 && kind > 31)
                     kind = 31;
                  break;
               case 354:
                  if (curChar != 126)
                     break;
                  if (kind > 31)
                     kind = 31;
                  { jjCheckNAdd(307); }
                  break;
               case 356:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(911, 913); }
                  break;
               case 358:
                  if (curChar == 92)
                     { jjAddStates(1871, 1874); }
                  break;
               case 362:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(911, 913); }
                  break;
               case 363:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(914, 919); }
                  break;
               case 366:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(920, 928); }
                  break;
               case 367:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(929, 933); }
                  break;
               case 368:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(934, 939); }
                  break;
               case 369:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(940, 946); }
                  break;
               case 370:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(947, 954); }
                  break;
               case 371:
                  if ((0xffffffffefffffffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(371, 372); }
                  break;
               case 372:
                  if (curChar == 92)
                     { jjAddStates(1875, 1878); }
                  break;
               case 376:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(371, 372); }
                  break;
               case 377:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(955, 959); }
                  break;
               case 380:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(960, 967); }
                  break;
               case 381:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(968, 971); }
                  break;
               case 382:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(972, 976); }
                  break;
               case 383:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(977, 982); }
                  break;
               case 384:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(983, 989); }
                  break;
               case 386:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(990, 992); }
                  break;
               case 388:
                  if (curChar == 92)
                     { jjAddStates(1879, 1882); }
                  break;
               case 392:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(990, 992); }
                  break;
               case 393:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(993, 998); }
                  break;
               case 396:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(999, 1007); }
                  break;
               case 397:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1008, 1012); }
                  break;
               case 398:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1013, 1018); }
                  break;
               case 399:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1019, 1025); }
                  break;
               case 400:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1026, 1033); }
                  break;
               case 401:
                  if ((0xffffffffefffffffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(401, 402); }
                  break;
               case 402:
                  if (curChar == 92)
                     { jjAddStates(1883, 1886); }
                  break;
               case 406:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(401, 402); }
                  break;
               case 407:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(1034, 1038); }
                  break;
               case 410:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(1039, 1046); }
                  break;
               case 411:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(1047, 1050); }
                  break;
               case 412:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(1051, 1055); }
                  break;
               case 413:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(1056, 1061); }
                  break;
               case 414:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(1062, 1068); }
                  break;
               case 416:
               case 417:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddTwoStates(417, 418); }
                  break;
               case 418:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(419, 420); }
                  break;
               case 419:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddTwoStates(417, 418); }
                  break;
               case 420:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1069, 1073); }
                  break;
               case 424:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1074, 1081); }
                  break;
               case 425:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1082, 1085); }
                  break;
               case 426:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1086, 1090); }
                  break;
               case 427:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1091, 1096); }
                  break;
               case 428:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1097, 1103); }
                  break;
               case 429:
               case 430:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(1104, 1106); }
                  break;
               case 432:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(433, 434); }
                  break;
               case 433:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(1104, 1106); }
                  break;
               case 434:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1107, 1112); }
                  break;
               case 438:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1113, 1121); }
                  break;
               case 439:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1122, 1126); }
                  break;
               case 440:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1127, 1132); }
                  break;
               case 441:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1133, 1139); }
                  break;
               case 442:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1140, 1147); }
                  break;
               case 443:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(433, 444); }
                  break;
               case 444:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1148, 1153); }
                  break;
               case 446:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1154, 1162); }
                  break;
               case 447:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1163, 1167); }
                  break;
               case 448:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1168, 1173); }
                  break;
               case 449:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1174, 1180); }
                  break;
               case 450:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1181, 1188); }
                  break;
               case 451:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(419, 452); }
                  break;
               case 452:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1189, 1193); }
                  break;
               case 454:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1194, 1201); }
                  break;
               case 455:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1202, 1205); }
                  break;
               case 456:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1206, 1210); }
                  break;
               case 457:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1211, 1216); }
                  break;
               case 458:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1217, 1223); }
                  break;
               case 459:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1808, 1812); }
                  break;
               case 462:
               case 463:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddTwoStates(463, 464); }
                  break;
               case 464:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(465, 466); }
                  break;
               case 465:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddTwoStates(463, 464); }
                  break;
               case 466:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1224, 1228); }
                  break;
               case 470:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1229, 1236); }
                  break;
               case 471:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1237, 1240); }
                  break;
               case 472:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1241, 1245); }
                  break;
               case 473:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1246, 1251); }
                  break;
               case 474:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1252, 1258); }
                  break;
               case 475:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(465, 476); }
                  break;
               case 476:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1259, 1263); }
                  break;
               case 478:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1264, 1271); }
                  break;
               case 479:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1272, 1275); }
                  break;
               case 480:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1276, 1280); }
                  break;
               case 481:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1281, 1286); }
                  break;
               case 482:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1287, 1293); }
                  break;
               case 483:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(483, 484); }
                  break;
               case 484:
                  if (curChar == 92)
                     { jjAddStates(1887, 1888); }
                  break;
               case 485:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(483, 484); }
                  break;
               case 486:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1294, 1298); }
                  break;
               case 490:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1299, 1306); }
                  break;
               case 491:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1307, 1310); }
                  break;
               case 492:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1311, 1315); }
                  break;
               case 493:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1316, 1321); }
                  break;
               case 494:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1322, 1328); }
                  break;
               case 495:
                  if ((0x20000000200000L & l) != 0L)
                     { jjAddStates(1820, 1822); }
                  break;
               case 498:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(1335, 1337); }
                  break;
               case 502:
                  { jjAddStates(1889, 1890); }
                  break;
               case 504:
               case 505:
                  { jjCheckNAddTwoStates(505, 506); }
                  break;
               case 510:
                  if (curChar == 92)
                     { jjAddStates(1891, 1894); }
                  break;
               case 514:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(1335, 1337); }
                  break;
               case 515:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1347, 1352); }
                  break;
               case 518:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1353, 1361); }
                  break;
               case 519:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1362, 1366); }
                  break;
               case 520:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1367, 1372); }
                  break;
               case 521:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1373, 1379); }
                  break;
               case 522:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1380, 1387); }
                  break;
               case 524:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(1388, 1390); }
                  break;
               case 526:
                  if (curChar == 92)
                     { jjAddStates(1895, 1898); }
                  break;
               case 530:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(1388, 1390); }
                  break;
               case 531:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1391, 1396); }
                  break;
               case 534:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1397, 1405); }
                  break;
               case 535:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1406, 1410); }
                  break;
               case 536:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1411, 1416); }
                  break;
               case 537:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1417, 1423); }
                  break;
               case 538:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1424, 1431); }
                  break;
               case 539:
                  if ((0x7fffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(1432, 1435); }
                  break;
               case 540:
                  if (curChar == 92)
                     { jjAddStates(1899, 1900); }
                  break;
               case 541:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(1432, 1435); }
                  break;
               case 542:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1436, 1441); }
                  break;
               case 546:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1448, 1456); }
                  break;
               case 547:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1457, 1461); }
                  break;
               case 548:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1462, 1467); }
                  break;
               case 549:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1468, 1474); }
                  break;
               case 550:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1475, 1482); }
                  break;
               case 553:
                  { jjAddStates(1901, 1902); }
                  break;
               case 555:
               case 556:
                  { jjCheckNAddTwoStates(556, 557); }
                  break;
               case 560:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 496;
                  break;
               case 561:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 560;
                  break;
               case 569:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjAddStates(1514, 1519); }
                  break;
               case 570:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 571;
                  break;
               case 571:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 572;
                  break;
               case 572:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 573;
                  break;
               case 573:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(574); }
                  break;
               case 574:
                  if ((0x7e0000007eL & l) != 0L && kind > 97)
                     kind = 97;
                  break;
               case 575:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 576;
                  break;
               case 576:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 577;
                  break;
               case 577:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 578;
                  break;
               case 578:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  jjstateSet[jjnewStateCnt++] = 565;
                  break;
               case 579:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 580;
                  break;
               case 580:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 581;
                  break;
               case 581:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  jjstateSet[jjnewStateCnt++] = 582;
                  break;
               case 583:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 584;
                  break;
               case 584:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  jjstateSet[jjnewStateCnt++] = 585;
                  break;
               case 587:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  jjstateSet[jjnewStateCnt++] = 588;
                  break;
               case 596:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddTwoStates(597, 603); }
                  break;
               case 598:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  jjstateSet[jjnewStateCnt++] = 599;
                  break;
               case 599:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1530, 1533); }
                  break;
               case 600:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAdd(574); }
                  break;
               case 601:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddTwoStates(574, 600); }
                  break;
               case 602:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1534, 1536); }
                  break;
               case 603:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1537, 1541); }
                  break;
               case 604:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(597); }
                  break;
               case 605:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddTwoStates(604, 597); }
                  break;
               case 606:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1542, 1544); }
                  break;
               case 607:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1545, 1548); }
                  break;
               case 610:
                  if ((0x200000002000L & l) != 0L && kind > 55)
                     kind = 55;
                  break;
               case 611:
               case 619:
                  if ((0x2000000020L & l) != 0L)
                     { jjCheckNAdd(610); }
                  break;
               case 613:
                  if ((0x100000001000000L & l) != 0L && kind > 55)
                     kind = 55;
                  break;
               case 614:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 613;
                  break;
               case 616:
                  if ((0x10000000100L & l) != 0L && kind > 55)
                     kind = 55;
                  break;
               case 617:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 616;
                  break;
               case 620:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 619;
                  break;
               case 622:
                  if ((0x80000000800000L & l) != 0L && kind > 56)
                     kind = 56;
                  break;
               case 623:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 622;
                  break;
               case 625:
                  if ((0x10000000100L & l) != 0L && kind > 56)
                     kind = 56;
                  break;
               case 626:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 625;
                  break;
               case 628:
                  if ((0x400000004000L & l) != 0L && kind > 56)
                     kind = 56;
                  break;
               case 629:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 628;
                  break;
               case 630:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 629;
                  break;
               case 631:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 630;
                  break;
               case 633:
                  if ((0x100000001000000L & l) != 0L && kind > 56)
                     kind = 56;
                  break;
               case 634:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 633;
                  break;
               case 635:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 634;
                  break;
               case 636:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 635;
                  break;
               case 638:
                  if ((0x200000002000L & l) != 0L && kind > 57)
                     kind = 57;
                  break;
               case 639:
                  if ((0x800000008L & l) != 0L)
                     { jjCheckNAdd(638); }
                  break;
               case 641:
                  if ((0x200000002000L & l) != 0L)
                     { jjCheckNAdd(638); }
                  break;
               case 643:
                  if ((0x2000000020000L & l) != 0L && kind > 57)
                     kind = 57;
                  break;
               case 645:
                  if ((0x400000004000L & l) != 0L && kind > 57)
                     kind = 57;
                  break;
               case 646:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 645;
                  break;
               case 648:
                  if ((0x10000000100000L & l) != 0L && kind > 57)
                     kind = 57;
                  break;
               case 649:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 648;
                  break;
               case 651:
                  if ((0x800000008L & l) != 0L && kind > 57)
                     kind = 57;
                  break;
               case 652:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 651;
                  break;
               case 654:
                  if ((0x100000001000000L & l) != 0L && kind > 57)
                     kind = 57;
                  break;
               case 655:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 654;
                  break;
               case 657:
                  if ((0x4000000040000L & l) != 0L && kind > 58)
                     kind = 58;
                  break;
               case 658:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 657;
                  break;
               case 660:
                  if ((0x8000000080L & l) != 0L && kind > 59)
                     kind = 59;
                  break;
               case 661:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 660;
                  break;
               case 662:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 661;
                  break;
               case 663:
                  if ((0x1000000010L & l) != 0L && kind > 59)
                     kind = 59;
                  break;
               case 664:
               case 667:
                  if ((0x200000002L & l) != 0L)
                     { jjCheckNAdd(663); }
                  break;
               case 665:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 664;
                  break;
               case 666:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 665;
                  break;
               case 668:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 667;
                  break;
               case 669:
                  if ((0x400000004000L & l) != 0L && kind > 59)
                     kind = 59;
                  break;
               case 670:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 669;
                  break;
               case 671:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 670;
                  break;
               case 672:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 671;
                  break;
               case 674:
                  if ((0x400000004L & l) != 0L && kind > 60)
                     kind = 60;
                  break;
               case 675:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 674;
                  break;
               case 677:
                  if ((0x10000000100000L & l) != 0L && kind > 61)
                     kind = 61;
                  break;
               case 678:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 677;
                  break;
               case 680:
               case 682:
                  if ((0x8000000080000L & l) != 0L && kind > 62)
                     kind = 62;
                  break;
               case 681:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 680;
                  break;
               case 684:
                  if ((0x400000004000000L & l) != 0L && kind > 63)
                     kind = 63;
                  break;
               case 685:
               case 686:
                  if ((0x10000000100L & l) != 0L)
                     { jjCheckNAdd(684); }
                  break;
               case 687:
                  if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 686;
                  break;
               case 689:
                  if ((0x1000000010L & l) != 0L)
                     { jjAddStates(1903, 1905); }
                  break;
               case 690:
                  if ((0x20000000200L & l) != 0L && kind > 64)
                     kind = 64;
                  break;
               case 691:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 690;
                  break;
               case 692:
                  if ((0x200000002000L & l) != 0L && kind > 64)
                     kind = 64;
                  break;
               case 693:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 692;
                  break;
               case 694:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 693;
                  break;
               case 695:
                  if ((0x100000001000000L & l) != 0L && kind > 64)
                     kind = 64;
                  break;
               case 696:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 695;
                  break;
               case 697:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 696;
                  break;
               case 699:
               case 700:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(1563, 1565); }
                  break;
               case 702:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 701;
                  break;
               case 703:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(704, 705); }
                  break;
               case 704:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(1563, 1565); }
                  break;
               case 705:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1566, 1571); }
                  break;
               case 709:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1572, 1580); }
                  break;
               case 710:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1581, 1585); }
                  break;
               case 711:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1586, 1591); }
                  break;
               case 712:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1592, 1598); }
                  break;
               case 713:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1599, 1606); }
                  break;
               case 714:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(704, 715); }
                  break;
               case 715:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1607, 1612); }
                  break;
               case 717:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1613, 1621); }
                  break;
               case 718:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1622, 1626); }
                  break;
               case 719:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1627, 1632); }
                  break;
               case 720:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1633, 1639); }
                  break;
               case 721:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1640, 1647); }
                  break;
               case 723:
               case 724:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  { jjCheckNAddTwoStates(724, 725); }
                  break;
               case 725:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(726, 727); }
                  break;
               case 726:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  { jjCheckNAddTwoStates(724, 725); }
                  break;
               case 727:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  { jjCheckNAddStates(1651, 1655); }
                  break;
               case 731:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  { jjCheckNAddStates(1656, 1663); }
                  break;
               case 732:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  { jjCheckNAddStates(1664, 1667); }
                  break;
               case 733:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  { jjCheckNAddStates(1668, 1672); }
                  break;
               case 734:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  { jjCheckNAddStates(1673, 1678); }
                  break;
               case 735:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  { jjCheckNAddStates(1679, 1685); }
                  break;
               case 736:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(726, 737); }
                  break;
               case 737:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  { jjCheckNAddStates(1686, 1690); }
                  break;
               case 739:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  { jjCheckNAddStates(1691, 1698); }
                  break;
               case 740:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  { jjCheckNAddStates(1699, 1702); }
                  break;
               case 741:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  { jjCheckNAddStates(1703, 1707); }
                  break;
               case 742:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  { jjCheckNAddStates(1708, 1713); }
                  break;
               case 743:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  { jjCheckNAddStates(1714, 1720); }
                  break;
               case 748:
               case 749:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAddTwoStates(749, 750); }
                  break;
               case 750:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(751, 752); }
                  break;
               case 751:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAddTwoStates(749, 750); }
                  break;
               case 752:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAddStates(1721, 1725); }
                  break;
               case 756:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAddStates(1726, 1733); }
                  break;
               case 757:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAddStates(1734, 1737); }
                  break;
               case 758:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAddStates(1738, 1742); }
                  break;
               case 759:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAddStates(1743, 1748); }
                  break;
               case 760:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAddStates(1749, 1755); }
                  break;
               case 761:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(751, 762); }
                  break;
               case 762:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAddStates(1756, 1760); }
                  break;
               case 764:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAddStates(1761, 1768); }
                  break;
               case 765:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAddStates(1769, 1772); }
                  break;
               case 766:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAddStates(1773, 1777); }
                  break;
               case 767:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAddStates(1778, 1783); }
                  break;
               case 768:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAddStates(1784, 1790); }
                  break;
               case 769:
                  if (curChar == 92)
                     { jjCheckNAddStates(1813, 1816); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 7:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1808, 1812); }
                  break;
               case 1:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1823, 1824); }
                  break;
               case 3:
               case 4:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(4, 5); }
                  break;
               case 21:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(192, 193); }
                  break;
               case 77:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1825, 1826); }
                  break;
               case 79:
               case 80:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(80, 81); }
                  break;
               case 87:
               case 88:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAddTwoStates(88, 89); }
                  break;
               case 90:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAddTwoStates(88, 89); }
                  break;
               case 112:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1831, 1832); }
                  break;
               case 114:
               case 115:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(115, 116); }
                  break;
               case 120:
               case 121:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(286, 291); }
                  break;
               case 124:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1833, 1834); }
                  break;
               case 126:
               case 127:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(127, 128); }
                  break;
               case 132:
               case 133:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(304, 306); }
                  break;
               case 136:
               case 137:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(312, 317); }
                  break;
               case 140:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1835, 1836); }
                  break;
               case 142:
               case 143:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(143, 144); }
                  break;
               case 149:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(304, 306); }
                  break;
               case 168:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(312, 317); }
                  break;
               case 187:
               case 193:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(527, 529); }
                  break;
               case 203:
               case 209:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(576, 578); }
                  break;
               case 219:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(286, 291); }
                  break;
               case 247:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1853, 1854); }
                  break;
               case 249:
               case 250:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(250, 251); }
                  break;
               case 255:
               case 256:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(750, 753); }
                  break;
               case 259:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1855, 1856); }
                  break;
               case 261:
               case 262:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(262, 263); }
                  break;
               case 268:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(750, 753); }
                  break;
               case 289:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1857, 1858); }
                  break;
               case 291:
               case 292:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(292, 293); }
                  break;
               case 298:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1859, 1860); }
                  break;
               case 300:
               case 301:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(301, 302); }
                  break;
               case 309:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1861, 1862); }
                  break;
               case 311:
               case 312:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(312, 313); }
                  break;
               case 318:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1863, 1864); }
                  break;
               case 320:
               case 321:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(321, 322); }
                  break;
               case 327:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1865, 1866); }
                  break;
               case 329:
               case 330:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(330, 331); }
                  break;
               case 336:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1867, 1868); }
                  break;
               case 338:
               case 339:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(339, 340); }
                  break;
               case 345:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1869, 1870); }
                  break;
               case 347:
               case 348:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(348, 349); }
                  break;
               case 356:
               case 362:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(911, 913); }
                  break;
               case 371:
               case 376:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(371, 372); }
                  break;
               case 386:
               case 392:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(990, 992); }
                  break;
               case 401:
               case 406:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(401, 402); }
                  break;
               case 416:
               case 417:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddTwoStates(417, 418); }
                  break;
               case 419:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddTwoStates(417, 418); }
                  break;
               case 429:
               case 430:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1104, 1106); }
                  break;
               case 433:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1104, 1106); }
                  break;
               case 462:
               case 463:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddTwoStates(463, 464); }
                  break;
               case 465:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddTwoStates(463, 464); }
                  break;
               case 483:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(483, 484); }
                  break;
               case 485:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(483, 484); }
                  break;
               case 498:
               case 514:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1335, 1337); }
                  break;
               case 502:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1889, 1890); }
                  break;
               case 504:
               case 505:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(505, 506); }
                  break;
               case 524:
               case 530:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1388, 1390); }
                  break;
               case 539:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1432, 1435); }
                  break;
               case 541:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1432, 1435); }
                  break;
               case 553:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1901, 1902); }
                  break;
               case 555:
               case 556:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(556, 557); }
                  break;
               case 699:
               case 700:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1563, 1565); }
                  break;
               case 704:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1563, 1565); }
                  break;
               case 723:
               case 724:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 66)
                     kind = 66;
                  { jjCheckNAddTwoStates(724, 725); }
                  break;
               case 726:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 66)
                     kind = 66;
                  { jjCheckNAddTwoStates(724, 725); }
                  break;
               case 748:
               case 749:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAddTwoStates(749, 750); }
                  break;
               case 751:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAddTwoStates(749, 750); }
                  break;
               default : if (i1 == 0 || l1 == 0 || i2 == 0 ||  l2 == 0) break; else break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 849 - (jjnewStateCnt = startsAt)))
         break;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { break; }
   }
   if (jjmatchedPos > strPos)
      return curPos;

   int toRet = Math.max(curPos, seenUpto);

   if (curPos < toRet)
      for (i = toRet - Math.min(curPos, seenUpto); i-- > 0; )
         try { curChar = input_stream.readChar(); }
         catch(java.io.IOException e) { throw new Error("Internal Error : Please send a bug report."); }

   if (jjmatchedPos < strPos)
   {
      jjmatchedKind = strKind;
      jjmatchedPos = strPos;
   }
   else if (jjmatchedPos == strPos && jjmatchedKind > strKind)
      jjmatchedKind = strKind;

   return toRet;
}

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, "\74\41\55\55", "\55\55\76", 
null, "\174\75", null, null, "\55", null, null, null, null, null, null, null, null, 
null, null, null, "\175", "\136\75", "\44\75", "\52\75", "\75", "\73", "\57", 
"\133", "\135", "\52", "\56", "\51", "\50", "\72", null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, "\72\72", null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, "\174", "\45", };
protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}
static final int[] jjnextStates = {
   771, 772, 773, 611, 774, 775, 776, 614, 777, 778, 779, 617, 780, 781, 782, 620, 
   783, 784, 785, 623, 786, 787, 788, 626, 789, 790, 791, 631, 792, 793, 794, 636, 
   795, 796, 797, 639, 798, 799, 800, 641, 801, 802, 803, 643, 804, 805, 806, 646, 
   807, 808, 809, 649, 810, 811, 812, 652, 813, 814, 815, 655, 816, 817, 818, 658, 
   819, 820, 821, 662, 666, 668, 672, 822, 823, 824, 675, 825, 826, 827, 678, 828, 
   829, 830, 681, 682, 831, 832, 833, 685, 687, 834, 835, 836, 837, 838, 839, 699, 
   840, 841, 842, 723, 843, 844, 845, 745, 846, 847, 848, 736, 714, 689, 295, 296, 
   304, 305, 306, 315, 316, 8, 324, 325, 9, 333, 334, 10, 342, 343, 11, 351, 
   352, 353, 609, 612, 615, 618, 621, 624, 627, 632, 637, 640, 642, 644, 647, 650, 
   653, 656, 659, 673, 676, 679, 683, 688, 698, 722, 744, 746, 747, 748, 761, 461, 
   462, 483, 484, 475, 416, 429, 443, 451, 386, 387, 401, 402, 388, 356, 357, 371, 
   372, 358, 243, 110, 119, 120, 229, 2, 3, 6, 3, 5, 6, 29, 34, 40, 
   21, 22, 83, 84, 75, 78, 79, 82, 79, 81, 82, 87, 100, 88, 93, 94, 
   89, 95, 88, 96, 93, 94, 89, 97, 98, 99, 88, 93, 94, 89, 88, 96, 
   93, 94, 89, 88, 96, 93, 94, 89, 97, 88, 96, 93, 94, 89, 97, 98, 
   102, 94, 88, 89, 103, 104, 102, 94, 88, 89, 105, 106, 107, 102, 94, 88, 
   89, 104, 102, 94, 88, 89, 104, 102, 94, 88, 89, 105, 104, 102, 94, 88, 
   89, 105, 106, 118, 119, 120, 229, 110, 113, 114, 117, 114, 116, 117, 121, 122, 
   131, 132, 147, 218, 130, 131, 132, 147, 148, 122, 125, 126, 129, 126, 128, 129, 
   133, 134, 150, 135, 136, 186, 202, 178, 131, 132, 137, 138, 147, 167, 131, 132, 
   146, 147, 148, 138, 141, 142, 145, 142, 144, 145, 133, 153, 154, 134, 150, 155, 
   133, 156, 153, 154, 134, 150, 157, 158, 159, 133, 153, 154, 134, 150, 133, 156, 
   153, 154, 134, 150, 133, 156, 153, 154, 134, 150, 157, 133, 156, 153, 154, 134, 
   150, 157, 158, 161, 154, 133, 134, 150, 162, 163, 161, 154, 133, 134, 150, 164, 
   165, 166, 161, 154, 133, 134, 150, 163, 161, 154, 133, 134, 150, 163, 161, 154, 
   133, 134, 150, 164, 163, 161, 154, 133, 134, 150, 164, 165, 131, 132, 137, 171, 
   147, 167, 172, 173, 131, 132, 137, 138, 146, 147, 148, 138, 167, 131, 132, 137, 
   174, 171, 147, 167, 172, 175, 176, 177, 131, 132, 137, 171, 147, 167, 172, 131, 
   132, 137, 174, 171, 147, 167, 172, 131, 132, 137, 174, 171, 147, 167, 172, 175, 
   131, 132, 137, 174, 171, 147, 167, 172, 175, 176, 131, 132, 180, 137, 147, 167, 
   172, 181, 131, 132, 182, 180, 137, 147, 167, 172, 183, 184, 185, 131, 132, 180, 
   137, 147, 167, 172, 131, 132, 182, 180, 137, 147, 167, 172, 131, 132, 182, 180, 
   137, 147, 167, 172, 183, 131, 132, 182, 180, 137, 147, 167, 172, 183, 184, 187, 
   188, 189, 131, 132, 138, 147, 148, 187, 195, 196, 188, 189, 197, 187, 198, 195, 
   196, 188, 189, 199, 200, 201, 187, 195, 196, 188, 189, 187, 198, 195, 196, 188, 
   189, 187, 198, 195, 196, 188, 189, 199, 187, 198, 195, 196, 188, 189, 199, 200, 
   203, 204, 205, 203, 211, 212, 204, 205, 213, 203, 214, 211, 212, 204, 205, 215, 
   216, 217, 203, 211, 212, 204, 205, 203, 214, 211, 212, 204, 205, 203, 214, 211, 
   212, 204, 205, 215, 203, 214, 211, 212, 204, 205, 215, 216, 121, 222, 131, 132, 
   147, 218, 223, 224, 121, 122, 130, 131, 132, 147, 148, 122, 218, 121, 225, 222, 
   131, 132, 147, 218, 223, 226, 227, 228, 121, 222, 131, 132, 147, 218, 223, 121, 
   225, 222, 131, 132, 147, 218, 223, 121, 225, 222, 131, 132, 147, 218, 223, 226, 
   121, 225, 222, 131, 132, 147, 218, 223, 226, 227, 231, 121, 131, 132, 147, 218, 
   223, 232, 233, 231, 121, 131, 132, 147, 218, 223, 234, 235, 236, 231, 121, 131, 
   132, 147, 218, 223, 233, 231, 121, 131, 132, 147, 218, 223, 233, 231, 121, 131, 
   132, 147, 218, 223, 234, 233, 231, 121, 131, 132, 147, 218, 223, 234, 235, 245, 
   254, 255, 278, 253, 254, 255, 278, 245, 248, 249, 252, 249, 251, 252, 256, 257, 
   266, 267, 265, 266, 257, 260, 261, 264, 261, 263, 264, 256, 271, 266, 267, 272, 
   273, 256, 257, 265, 266, 257, 267, 256, 274, 271, 266, 267, 272, 275, 276, 277, 
   256, 271, 266, 267, 272, 256, 274, 271, 266, 267, 272, 256, 274, 271, 266, 267, 
   272, 275, 256, 274, 271, 266, 267, 272, 275, 276, 280, 256, 266, 267, 272, 281, 
   282, 280, 256, 266, 267, 272, 283, 284, 285, 280, 256, 266, 267, 272, 282, 280, 
   256, 266, 267, 272, 282, 280, 256, 266, 267, 272, 283, 282, 280, 256, 266, 267, 
   272, 283, 284, 290, 291, 294, 291, 293, 294, 299, 300, 303, 300, 302, 303, 304, 
   305, 306, 310, 311, 314, 311, 313, 314, 315, 316, 8, 319, 320, 323, 320, 322, 
   323, 324, 325, 9, 328, 329, 332, 329, 331, 332, 333, 334, 10, 337, 338, 341, 
   338, 340, 341, 342, 343, 11, 346, 347, 350, 347, 349, 350, 351, 352, 353, 356, 
   357, 358, 356, 364, 365, 357, 358, 366, 356, 367, 364, 365, 357, 358, 368, 369, 
   370, 356, 364, 365, 357, 358, 356, 367, 364, 365, 357, 358, 356, 367, 364, 365, 
   357, 358, 368, 356, 367, 364, 365, 357, 358, 368, 369, 371, 378, 379, 372, 380, 
   371, 381, 378, 379, 372, 382, 383, 384, 371, 378, 379, 372, 371, 381, 378, 379, 
   372, 371, 381, 378, 379, 372, 382, 371, 381, 378, 379, 372, 382, 383, 386, 387, 
   388, 386, 394, 395, 387, 388, 396, 386, 397, 394, 395, 387, 388, 398, 399, 400, 
   386, 394, 395, 387, 388, 386, 397, 394, 395, 387, 388, 386, 397, 394, 395, 387, 
   388, 398, 386, 397, 394, 395, 387, 388, 398, 399, 401, 408, 409, 402, 410, 401, 
   411, 408, 409, 402, 412, 413, 414, 401, 408, 409, 402, 401, 411, 408, 409, 402, 
   401, 411, 408, 409, 402, 412, 401, 411, 408, 409, 402, 412, 413, 417, 422, 423, 
   418, 424, 417, 425, 422, 423, 418, 426, 427, 428, 417, 422, 423, 418, 417, 425, 
   422, 423, 418, 417, 425, 422, 423, 418, 426, 417, 425, 422, 423, 418, 426, 427, 
   430, 431, 432, 430, 436, 437, 431, 432, 438, 430, 439, 436, 437, 431, 432, 440, 
   441, 442, 430, 436, 437, 431, 432, 430, 439, 436, 437, 431, 432, 430, 439, 436, 
   437, 431, 432, 440, 430, 439, 436, 437, 431, 432, 440, 441, 445, 437, 430, 431, 
   432, 446, 447, 445, 437, 430, 431, 432, 448, 449, 450, 445, 437, 430, 431, 432, 
   447, 445, 437, 430, 431, 432, 447, 445, 437, 430, 431, 432, 448, 447, 445, 437, 
   430, 431, 432, 448, 449, 453, 423, 417, 418, 454, 455, 453, 423, 417, 418, 456, 
   457, 458, 453, 423, 417, 418, 455, 453, 423, 417, 418, 455, 453, 423, 417, 418, 
   456, 455, 453, 423, 417, 418, 456, 457, 463, 468, 469, 464, 470, 463, 471, 468, 
   469, 464, 472, 473, 474, 463, 468, 469, 464, 463, 471, 468, 469, 464, 463, 471, 
   468, 469, 464, 472, 463, 471, 468, 469, 464, 472, 473, 477, 469, 463, 464, 478, 
   479, 477, 469, 463, 464, 480, 481, 482, 477, 469, 463, 464, 479, 477, 469, 463, 
   464, 479, 477, 469, 463, 464, 480, 479, 477, 469, 463, 464, 480, 481, 483, 488, 
   489, 484, 490, 483, 491, 488, 489, 484, 492, 493, 494, 483, 488, 489, 484, 483, 
   491, 488, 489, 484, 483, 491, 488, 489, 484, 492, 483, 491, 488, 489, 484, 492, 
   493, 497, 523, 539, 509, 540, 551, 498, 499, 510, 508, 509, 500, 503, 504, 507, 
   504, 506, 507, 498, 516, 517, 499, 510, 518, 498, 519, 516, 517, 499, 510, 520, 
   521, 522, 498, 516, 517, 499, 510, 498, 519, 516, 517, 499, 510, 498, 519, 516, 
   517, 499, 510, 520, 498, 519, 516, 517, 499, 510, 520, 521, 524, 525, 526, 524, 
   532, 533, 525, 526, 534, 524, 535, 532, 533, 525, 526, 536, 537, 538, 524, 532, 
   533, 525, 526, 524, 535, 532, 533, 525, 526, 524, 535, 532, 533, 525, 526, 536, 
   524, 535, 532, 533, 525, 526, 536, 537, 539, 500, 509, 540, 539, 544, 509, 540, 
   545, 546, 539, 500, 508, 509, 500, 540, 539, 547, 544, 509, 540, 545, 548, 549, 
   550, 539, 544, 509, 540, 545, 539, 547, 544, 509, 540, 545, 539, 547, 544, 509, 
   540, 545, 548, 539, 547, 544, 509, 540, 545, 548, 549, 559, 497, 523, 539, 508, 
   509, 500, 540, 551, 554, 555, 558, 555, 557, 558, 559, 497, 523, 539, 509, 540, 
   551, 563, 569, 565, 566, 567, 568, 565, 566, 567, 570, 575, 579, 583, 587, 591, 
   565, 589, 590, 565, 592, 593, 594, 565, 592, 593, 574, 600, 601, 602, 574, 600, 
   601, 604, 597, 605, 606, 607, 604, 597, 605, 604, 597, 605, 606, 659, 662, 666, 
   668, 672, 679, 681, 682, 683, 685, 687, 698, 699, 714, 700, 702, 703, 700, 707, 
   708, 702, 703, 709, 700, 710, 707, 708, 702, 703, 711, 712, 713, 700, 707, 708, 
   702, 703, 700, 710, 707, 708, 702, 703, 700, 710, 707, 708, 702, 703, 711, 700, 
   710, 707, 708, 702, 703, 711, 712, 716, 708, 700, 702, 703, 717, 718, 716, 708, 
   700, 702, 703, 719, 720, 721, 716, 708, 700, 702, 703, 718, 716, 708, 700, 702, 
   703, 718, 716, 708, 700, 702, 703, 719, 718, 716, 708, 700, 702, 703, 719, 720, 
   722, 723, 736, 724, 729, 730, 725, 731, 724, 732, 729, 730, 725, 733, 734, 735, 
   724, 729, 730, 725, 724, 732, 729, 730, 725, 724, 732, 729, 730, 725, 733, 724, 
   732, 729, 730, 725, 733, 734, 738, 730, 724, 725, 739, 740, 738, 730, 724, 725, 
   741, 742, 743, 738, 730, 724, 725, 740, 738, 730, 724, 725, 740, 738, 730, 724, 
   725, 741, 740, 738, 730, 724, 725, 741, 742, 749, 754, 755, 750, 756, 749, 757, 
   754, 755, 750, 758, 759, 760, 749, 754, 755, 750, 749, 757, 754, 755, 750, 749, 
   757, 754, 755, 750, 758, 749, 757, 754, 755, 750, 758, 759, 763, 755, 749, 750, 
   764, 765, 763, 755, 749, 750, 766, 767, 768, 763, 755, 749, 750, 765, 763, 755, 
   749, 750, 765, 763, 755, 749, 750, 766, 765, 763, 755, 749, 750, 766, 767, 819, 
   662, 666, 668, 672, 828, 681, 682, 831, 685, 687, 837, 699, 714, 840, 723, 736, 
   417, 430, 431, 432, 418, 419, 452, 433, 444, 86, 87, 100, 561, 562, 595, 1, 
   2, 77, 78, 110, 119, 120, 229, 112, 113, 124, 125, 140, 141, 149, 160, 168, 
   169, 190, 192, 193, 194, 206, 208, 209, 210, 219, 220, 149, 160, 247, 248, 259, 
   260, 289, 290, 298, 299, 309, 310, 318, 319, 327, 328, 336, 337, 345, 346, 359, 
   361, 362, 363, 373, 375, 376, 377, 389, 391, 392, 393, 403, 405, 406, 407, 485, 
   486, 502, 503, 511, 513, 514, 515, 527, 529, 530, 531, 541, 542, 553, 554, 691, 
   694, 697, 
};
private static final boolean jjCanMove_0(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec2[i2] & l2) != 0L);
      default :
         if ((jjbitVec0[i1] & l1) != 0L)
            return true;
         return false;
   }
}
private static final boolean jjCanMove_1(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec2[i2] & l2) != 0L);
      default :
         return false;
   }
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken() 
{
  Token specialToken = null;
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(Exception e)
   {
      jjmatchedKind = 0;
      jjmatchedPos = -1;
      matchedToken = jjFillToken();
      matchedToken.specialToken = specialToken;
      return matchedToken;
   }

   jjmatchedKind = 0x7fffffff;
   jjmatchedPos = 0;
   curPos = jjMoveStringLiteralDfa0_0();
   if (jjmatchedKind != 0x7fffffff)
   {
      if (jjmatchedPos + 1 < curPos)
         input_stream.backup(curPos - jjmatchedPos - 1);
      if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
      {
         matchedToken = jjFillToken();
         matchedToken.specialToken = specialToken;
         return matchedToken;
      }
      else
      {
         if ((jjtoSpecial[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
         {
            matchedToken = jjFillToken();
            if (specialToken == null)
               specialToken = matchedToken;
            else
            {
               matchedToken.specialToken = specialToken;
               specialToken = (specialToken.next = matchedToken);
            }
         }
         continue EOFLoop;
      }
   }
   int error_line = input_stream.getEndLine();
   int error_column = input_stream.getEndColumn();
   String error_after = null;
   boolean EOFSeen = false;
   try { input_stream.readChar(); input_stream.backup(1); }
   catch (java.io.IOException e1) {
      EOFSeen = true;
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
      if (curChar == '\n' || curChar == '\r') {
         error_line++;
         error_column = 0;
      }
      else
         error_column++;
   }
   if (!EOFSeen) {
      input_stream.backup(1);
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
   }
   throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
  }
}

void SkipLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      default :
         break;
   }
}
void MoreLexicalActions()
{
   jjimageLen += (lengthOfMatch = jjmatchedPos + 1);
   switch(jjmatchedKind)
   {
      default :
         break;
   }
}
void TokenLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      default :
         break;
   }
}
private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

    /** Constructor. */
    public CssParserTokenManager(SimpleCharStream stream){

      if (SimpleCharStream.staticFlag)
            throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");

    input_stream = stream;
  }

  /** Constructor. */
  public CssParserTokenManager (SimpleCharStream stream, int lexState){
    ReInit(stream);
    SwitchTo(lexState);
  }

  /** Reinitialise parser. */
  
  public void ReInit(SimpleCharStream stream)
  {


    jjmatchedPos =
    jjnewStateCnt =
    0;
    curLexState = defaultLexState;
    input_stream = stream;
    ReInitRounds();
  }

  private void ReInitRounds()
  {
    int i;
    jjround = 0x80000001;
    for (i = 849; i-- > 0;)
      jjrounds[i] = 0x80000000;
  }

  /** Reinitialise parser. */
  public void ReInit(SimpleCharStream stream, int lexState)
  
  {
    ReInit(stream);
    SwitchTo(lexState);
  }

  /** Switch to specified lex state. */
  public void SwitchTo(int lexState)
  {
    if (lexState >= 1 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
    else
      curLexState = lexState;
  }


/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
};

/** Lex State array. */
public static final int[] jjnewLexState = {
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, 
};
static final long[] jjtoToken = {
   0xffffffffffe00001L, 0xffe00ffffffL, 
};
static final long[] jjtoSkip = {
   0x2L, 0x0L, 
};
static final long[] jjtoSpecial = {
   0x2L, 0x0L, 
};
static final long[] jjtoMore = {
   0x0L, 0x0L, 
};
    protected SimpleCharStream  input_stream;

    private final int[] jjrounds = new int[849];
    private final int[] jjstateSet = new int[2 * 849];
    private final StringBuilder jjimage = new StringBuilder();
    private StringBuilder image = jjimage;
    private int jjimageLen;
    private int lengthOfMatch;
    protected int curChar;
}
