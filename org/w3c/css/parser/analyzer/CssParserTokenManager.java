/* CssParserTokenManager.java */
/* Generated By:JavaCC: Do not edit this line. CssParserTokenManager.java */
package org.w3c.css.parser.analyzer;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.Iterator;
import java.net.URL;
import java.math.BigDecimal;
import org.w3c.css.values.CssValue;
import org.w3c.css.values.CssOperator;
import org.w3c.css.values.CssAngle;
import org.w3c.css.values.CssCheckableValue;
import org.w3c.css.values.CssExpression;
import org.w3c.css.values.CssString;
import org.w3c.css.values.CssURL;
import org.w3c.css.values.CssLength;
import org.w3c.css.values.CssNumber;
import org.w3c.css.values.CssAttr;
import org.w3c.css.values.CssBracket;
import org.w3c.css.values.CssCalc;
import org.w3c.css.values.CssColor;
import org.w3c.css.values.CssFlexibleLength;
import org.w3c.css.values.CssFrequency;
import org.w3c.css.values.CssHashIdent;
import org.w3c.css.values.CssIdent;
import org.w3c.css.values.CssImage;
import org.w3c.css.values.CssPercentage;
import org.w3c.css.values.CssTime;
import org.w3c.css.values.CssSwitch;
import org.w3c.css.values.CssFunction;
import org.w3c.css.values.CssUnicodeRange;
import org.w3c.css.values.CssResolution;
import org.w3c.css.values.CssRatio;
import org.w3c.css.values.CssSemitone;
import org.w3c.css.values.CssTypes;
import org.w3c.css.values.CssVolume;
import org.w3c.css.properties.css.CssProperty;
import org.w3c.css.parser.Frame;
import org.w3c.css.parser.CssError;
import org.w3c.css.parser.CssErrorToken;
import org.w3c.css.parser.CssSelectors;
import org.w3c.css.parser.CssParseException;
import org.w3c.css.parser.AtRule;
import org.w3c.css.parser.AtRuleCounterStyle;
import org.w3c.css.media.AtRuleMedia;
import org.w3c.css.media.MediaFeature;
import org.w3c.css.parser.AtRuleFontFace;
import org.w3c.css.parser.AtRuleKeyframes;
import org.w3c.css.parser.AtRulePage;
import org.w3c.css.parser.AtRulePreference;
import org.w3c.css.parser.AtRulePhoneticAlphabet;
import org.w3c.css.properties.svg.AtRuleColorProfile;
import org.w3c.css.util.ApplContext;
import org.w3c.css.util.CssProfile;
import org.w3c.css.util.CssVersion;
import org.w3c.css.util.InvalidParamException;
import org.w3c.css.util.WarningParamException;
import org.w3c.css.util.Util;
import org.w3c.css.util.Messages;
import org.w3c.css.selectors.AdjacentSiblingSelector;
import org.w3c.css.selectors.AttributeSelector;
import org.w3c.css.selectors.ChildSelector;
import org.w3c.css.selectors.ClassSelector;
import org.w3c.css.selectors.DescendantSelector;
import org.w3c.css.selectors.GeneralSiblingSelector;
import org.w3c.css.selectors.IdSelector;
import org.w3c.css.selectors.TypeSelector;
import org.w3c.css.selectors.UniversalSelector;
import org.w3c.css.selectors.attributes.AttributeAny;
import org.w3c.css.selectors.attributes.AttributeBegin;
import org.w3c.css.selectors.attributes.AttributeExact;
import org.w3c.css.selectors.attributes.AttributeOneOf;
import org.w3c.css.selectors.attributes.AttributeStart;
import org.w3c.css.selectors.attributes.AttributeSubstr;
import org.w3c.css.selectors.attributes.AttributeSuffix;

/** Token Manager. */
public class CssParserTokenManager implements CssParserConstants {

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_0(){
   switch(curChar)
   {
      case 36:
         return jjMoveStringLiteralDfa1_0(0x40000000000L, 0x0L);
      case 37:
         jjmatchedKind = 106;
         return jjMoveNfa_0(7, 0);
      case 40:
         jjmatchedKind = 52;
         return jjMoveNfa_0(7, 0);
      case 41:
         jjmatchedKind = 51;
         return jjMoveNfa_0(7, 0);
      case 42:
         jjmatchedKind = 49;
         return jjMoveStringLiteralDfa1_0(0x80000000000L, 0x0L);
      case 45:
         jjmatchedKind = 28;
         return jjMoveStringLiteralDfa1_0(0x800000L, 0x0L);
      case 46:
         jjmatchedKind = 50;
         return jjMoveNfa_0(7, 0);
      case 47:
         jjmatchedKind = 46;
         return jjMoveNfa_0(7, 0);
      case 58:
         jjmatchedKind = 53;
         return jjMoveStringLiteralDfa1_0(0x0L, 0x800000020L);
      case 59:
         jjmatchedKind = 45;
         return jjMoveNfa_0(7, 0);
      case 60:
         return jjMoveStringLiteralDfa1_0(0x400000L, 0x0L);
      case 61:
         jjmatchedKind = 44;
         return jjMoveNfa_0(7, 0);
      case 64:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x3fffc0L);
      case 91:
         jjmatchedKind = 47;
         return jjMoveNfa_0(7, 0);
      case 93:
         jjmatchedKind = 48;
         return jjMoveNfa_0(7, 0);
      case 94:
         return jjMoveStringLiteralDfa1_0(0x20000000000L, 0x0L);
      case 65:
      case 97:
         return jjMoveStringLiteralDfa1_0(0x100000000L, 0x2000000000L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x1000000000L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x400000000L);
      case 124:
         jjmatchedKind = 105;
         return jjMoveStringLiteralDfa1_0(0x2000000L, 0x0L);
      case 125:
         jjmatchedKind = 40;
         return jjMoveNfa_0(7, 0);
      default :
         return jjMoveNfa_0(7, 0);
   }
}
private int jjMoveStringLiteralDfa1_0(long active0, long active1){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 0);
   }
   switch(curChar)
   {
      case 33:
         return jjMoveStringLiteralDfa2_0(active0, 0x400000L, active1, 0L);
      case 45:
         return jjMoveStringLiteralDfa2_0(active0, 0x800000L, active1, 0L);
      case 58:
         if ((active1 & 0x20L) != 0L)
         {
            jjmatchedKind = 69;
            jjmatchedPos = 1;
         }
         break;
      case 61:
         if ((active0 & 0x2000000L) != 0L)
         {
            jjmatchedKind = 25;
            jjmatchedPos = 1;
         }
         else if ((active0 & 0x20000000000L) != 0L)
         {
            jjmatchedKind = 41;
            jjmatchedPos = 1;
         }
         else if ((active0 & 0x40000000000L) != 0L)
         {
            jjmatchedKind = 42;
            jjmatchedPos = 1;
         }
         else if ((active0 & 0x80000000000L) != 0L)
         {
            jjmatchedKind = 43;
            jjmatchedPos = 1;
         }
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x1400000000L);
      case 66:
      case 98:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x20000L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x184040L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x800L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x80L);
      case 75:
      case 107:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x1000L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x40000L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x200L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa2_0(active0, 0x100000000L, active1, 0x800000100L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x202400L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x10000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x2000008000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 1);
}
private int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 1);
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa3_0(active0, 0x400000L, active1, 0L);
      case 62:
         if ((active0 & 0x800000L) != 0L)
         {
            jjmatchedKind = 23;
            jjmatchedPos = 2;
         }
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x500L);
      case 68:
      case 100:
         if ((active0 & 0x100000000L) != 0L)
         {
            jjmatchedKind = 32;
            jjmatchedPos = 2;
         }
         break;
      case 69:
      case 101:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x41200L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x200040L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x10000L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x1000000000L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x80L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x400000000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x8001ac800L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x2000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x2000000000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 2);
}
private int jjMoveStringLiteralDfa3_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 2);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 2);
   }
   switch(curChar)
   {
      case 45:
         if ((active0 & 0x400000L) != 0L)
         {
            jjmatchedKind = 22;
            jjmatchedPos = 3;
         }
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x40L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x1000000000L);
      case 68:
      case 100:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x200L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x2000L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x40000L);
      case 71:
      case 103:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x400010400L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x4000L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x100L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x800L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x200000L);
      case 80:
      case 112:
         if ((active1 & 0x8000L) != 0L)
         {
            jjmatchedKind = 79;
            jjmatchedPos = 3;
         }
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x80L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x2000000000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x800020000L);
      case 85:
      case 117:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x180000L);
      case 89:
      case 121:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x1000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 3);
}
private int jjMoveStringLiteralDfa4_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 3);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 3);
   }
   switch(curChar)
   {
      case 40:
         if ((active1 & 0x400000000L) != 0L)
         {
            jjmatchedKind = 98;
            jjmatchedPos = 4;
         }
         else if ((active1 & 0x800000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 4;
         }
         else if ((active1 & 0x1000000000L) != 0L)
         {
            jjmatchedKind = 100;
            jjmatchedPos = 4;
         }
         else if ((active1 & 0x2000000000L) != 0L)
         {
            jjmatchedKind = 101;
            jjmatchedPos = 4;
         }
         break;
      case 69:
      case 101:
         if ((active1 & 0x400L) != 0L)
         {
            jjmatchedKind = 74;
            jjmatchedPos = 4;
         }
         return jjMoveStringLiteralDfa5_0(active1, 0x100L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa5_0(active1, 0x3000L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa5_0(active1, 0x10000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa5_0(active1, 0x200L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa5_0(active1, 0x380000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa5_0(active1, 0x4080L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa5_0(active1, 0x40L);
      case 84:
      case 116:
         if ((active1 & 0x40000L) != 0L)
         {
            jjmatchedKind = 82;
            jjmatchedPos = 4;
         }
         return jjMoveStringLiteralDfa5_0(active1, 0x20800L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 4);
}
private int jjMoveStringLiteralDfa5_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 4);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 4);
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa6_0(active1, 0x800L);
      case 65:
      case 97:
         if ((active1 & 0x200L) != 0L)
         {
            jjmatchedKind = 73;
            jjmatchedPos = 5;
         }
         break;
      case 69:
      case 101:
         return jjMoveStringLiteralDfa6_0(active1, 0x202000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa6_0(active1, 0x20000L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa6_0(active1, 0x5080L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa6_0(active1, 0x140L);
      case 84:
      case 116:
         if ((active1 & 0x10000L) != 0L)
         {
            jjmatchedKind = 80;
            jjmatchedPos = 5;
         }
         return jjMoveStringLiteralDfa6_0(active1, 0x180000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 5);
}
private int jjMoveStringLiteralDfa6_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 5);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 5);
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa7_0(active1, 0x4000L);
      case 65:
      case 97:
         return jjMoveStringLiteralDfa7_0(active1, 0x1000L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa7_0(active1, 0x180040L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa7_0(active1, 0x800L);
      case 77:
      case 109:
         if ((active1 & 0x20000L) != 0L)
         {
            jjmatchedKind = 81;
            jjmatchedPos = 6;
         }
         break;
      case 80:
      case 112:
         return jjMoveStringLiteralDfa7_0(active1, 0x100L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa7_0(active1, 0x2000L);
      case 84:
      case 116:
         if ((active1 & 0x80L) != 0L)
         {
            jjmatchedKind = 71;
            jjmatchedPos = 6;
         }
         return jjMoveStringLiteralDfa7_0(active1, 0x200000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 6);
}
private int jjMoveStringLiteralDfa7_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 6);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 6);
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa8_0(active1, 0x900L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa8_0(active1, 0x2000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa8_0(active1, 0x200000L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa8_0(active1, 0x1000L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa8_0(active1, 0x4000L);
      case 82:
      case 114:
         if ((active1 & 0x80000L) != 0L)
         {
            jjmatchedKind = 83;
            jjmatchedPos = 7;
         }
         return jjMoveStringLiteralDfa8_0(active1, 0x100000L);
      case 84:
      case 116:
         if ((active1 & 0x40L) != 0L)
         {
            jjmatchedKind = 70;
            jjmatchedPos = 7;
         }
         break;
      default :
         break;
   }
   return jjMoveNfa_0(7, 7);
}
private int jjMoveStringLiteralDfa8_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 7);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 7);
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa9_0(active1, 0x100000L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa9_0(active1, 0x200900L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa9_0(active1, 0x1000L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa9_0(active1, 0x2000L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa9_0(active1, 0x4000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 8);
}
private int jjMoveStringLiteralDfa9_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 8);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 8);
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa10_0(active1, 0x200000L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa10_0(active1, 0x2000L);
      case 69:
      case 101:
         if ((active1 & 0x100L) != 0L)
         {
            jjmatchedKind = 72;
            jjmatchedPos = 9;
         }
         else if ((active1 & 0x800L) != 0L)
         {
            jjmatchedKind = 75;
            jjmatchedPos = 9;
         }
         break;
      case 79:
      case 111:
         return jjMoveStringLiteralDfa10_0(active1, 0x4000L);
      case 83:
      case 115:
         if ((active1 & 0x1000L) != 0L)
         {
            jjmatchedKind = 76;
            jjmatchedPos = 9;
         }
         return jjMoveStringLiteralDfa10_0(active1, 0x100000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 9);
}
private int jjMoveStringLiteralDfa10_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 9);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 9);
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa11_0(active1, 0x200000L);
      case 69:
      case 101:
         if ((active1 & 0x2000L) != 0L)
         {
            jjmatchedKind = 77;
            jjmatchedPos = 10;
         }
         break;
      case 70:
      case 102:
         return jjMoveStringLiteralDfa11_0(active1, 0x4000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa11_0(active1, 0x100000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 10);
}
private int jjMoveStringLiteralDfa11_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 10);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 10);
   }
   switch(curChar)
   {
      case 73:
      case 105:
         return jjMoveStringLiteralDfa12_0(active1, 0x4000L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa12_0(active1, 0x200000L);
      case 89:
      case 121:
         return jjMoveStringLiteralDfa12_0(active1, 0x100000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 11);
}
private int jjMoveStringLiteralDfa12_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 11);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 11);
   }
   switch(curChar)
   {
      case 76:
      case 108:
         return jjMoveStringLiteralDfa13_0(active1, 0x104000L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa13_0(active1, 0x200000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 12);
}
private int jjMoveStringLiteralDfa13_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 12);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 12);
   }
   switch(curChar)
   {
      case 69:
      case 101:
         if ((active1 & 0x4000L) != 0L)
         {
            jjmatchedKind = 78;
            jjmatchedPos = 13;
         }
         else if ((active1 & 0x100000L) != 0L)
         {
            jjmatchedKind = 84;
            jjmatchedPos = 13;
         }
         break;
      case 72:
      case 104:
         return jjMoveStringLiteralDfa14_0(active1, 0x200000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 13);
}
private int jjMoveStringLiteralDfa14_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 13);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 13);
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa15_0(active1, 0x200000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 14);
}
private int jjMoveStringLiteralDfa15_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 14);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 14);
   }
   switch(curChar)
   {
      case 66:
      case 98:
         return jjMoveStringLiteralDfa16_0(active1, 0x200000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 15);
}
private int jjMoveStringLiteralDfa16_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 15);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 15);
   }
   switch(curChar)
   {
      case 69:
      case 101:
         return jjMoveStringLiteralDfa17_0(active1, 0x200000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 16);
}
private int jjMoveStringLiteralDfa17_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 16);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 16);
   }
   switch(curChar)
   {
      case 84:
      case 116:
         if ((active1 & 0x200000L) != 0L)
         {
            jjmatchedKind = 85;
            jjmatchedPos = 17;
         }
         break;
      default :
         break;
   }
   return jjMoveNfa_0(7, 17);
}
static final long[] jjbitVec0 = {
   0xfffffffffffffffeL, 0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static final long[] jjbitVec2 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private int jjMoveNfa_0(int startState, int curPos)
{
   int strKind = jjmatchedKind;
   int strPos = jjmatchedPos;
   int seenUpto;
   input_stream.backup(seenUpto = curPos + 1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { throw new Error("Internal Error"); }
   curPos = 0;
   int startsAt = 0;
   jjnewStateCnt = 812;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 7:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 67)
                        kind = 67;
                     { jjCheckNAddStates(0, 104); }
                  }
                  else if ((0x100003600L & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     { jjCheckNAddStates(105, 124); }
                  }
                  else if (curChar == 46)
                     { jjCheckNAddStates(125, 152); }
                  else if (curChar == 35)
                     { jjCheckNAddStates(153, 157); }
                  else if (curChar == 45)
                     { jjAddStates(158, 161); }
                  else if (curChar == 39)
                  {
                     if (kind > 35)
                        kind = 35;
                     { jjCheckNAddStates(162, 166); }
                  }
                  else if (curChar == 34)
                  {
                     if (kind > 35)
                        kind = 35;
                     { jjCheckNAddStates(167, 171); }
                  }
                  else if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 234;
                  else if (curChar == 33)
                     { jjCheckNAddTwoStates(57, 74); }
                  else if (curChar == 44)
                  {
                     if (kind > 30)
                        kind = 30;
                  }
                  else if (curChar == 62)
                  {
                     if (kind > 29)
                        kind = 29;
                  }
                  else if (curChar == 43)
                  {
                     if (kind > 27)
                        kind = 27;
                  }
                  else if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 0;
                  if (curChar == 60)
                     { jjCheckNAddStates(172, 176); }
                  break;
               case 0:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(1, 2); }
                  break;
               case 1:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(1, 2); }
                  break;
               case 2:
                  if (curChar == 42)
                     { jjCheckNAddStates(177, 179); }
                  break;
               case 3:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(4, 5); }
                  break;
               case 4:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(4, 5); }
                  break;
               case 5:
                  if (curChar == 42)
                     { jjCheckNAddStates(180, 182); }
                  break;
               case 6:
                  if (curChar == 47 && kind > 1)
                     kind = 1;
                  break;
               case 9:
                  if (curChar == 43 && kind > 27)
                     kind = 27;
                  break;
               case 10:
                  if (curChar == 62 && kind > 29)
                     kind = 29;
                  break;
               case 11:
                  if (curChar == 44 && kind > 30)
                     kind = 30;
                  break;
               case 19:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 21:
                  if ((0xfffffdffffffffffL & l) != 0L)
                     { jjAddStates(183, 184); }
                  break;
               case 22:
                  if (curChar == 41 && kind > 39)
                     kind = 39;
                  break;
               case 32:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 49:
                  if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 48;
                  break;
               case 56:
                  if (curChar == 33)
                     { jjCheckNAddTwoStates(57, 74); }
                  break;
               case 57:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(185, 187); }
                  break;
               case 58:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(59, 60); }
                  break;
               case 59:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(59, 60); }
                  break;
               case 60:
                  if (curChar == 42)
                     { jjCheckNAddStates(188, 190); }
                  break;
               case 61:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(62, 63); }
                  break;
               case 62:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(62, 63); }
                  break;
               case 63:
                  if (curChar == 42)
                     { jjCheckNAddStates(191, 193); }
                  break;
               case 64:
                  if (curChar == 47)
                     { jjCheckNAddStates(185, 187); }
                  break;
               case 65:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 58;
                  break;
               case 76:
                  if (curChar == 45)
                     { jjAddStates(194, 195); }
                  break;
               case 78:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddTwoStates(78, 79); }
                  break;
               case 80:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddTwoStates(78, 79); }
                  break;
               case 81:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddStates(196, 200); }
                  break;
               case 82:
                  if (curChar != 10)
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddTwoStates(78, 79); }
                  break;
               case 83:
               case 92:
                  if (curChar == 13)
                     { jjCheckNAdd(82); }
                  break;
               case 84:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddTwoStates(78, 79); }
                  break;
               case 85:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddStates(201, 208); }
                  break;
               case 86:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddStates(209, 212); }
                  break;
               case 87:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddStates(213, 217); }
                  break;
               case 88:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddStates(218, 223); }
                  break;
               case 89:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddStates(224, 230); }
                  break;
               case 91:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddStates(231, 235); }
                  break;
               case 93:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddStates(236, 243); }
                  break;
               case 94:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddStates(244, 247); }
                  break;
               case 95:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddStates(248, 252); }
                  break;
               case 96:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddStates(253, 258); }
                  break;
               case 97:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddStates(259, 265); }
                  break;
               case 98:
                  if (curChar == 60)
                     { jjCheckNAddStates(172, 176); }
                  break;
               case 100:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(266, 270); }
                  break;
               case 101:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(102, 103); }
                  break;
               case 102:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(102, 103); }
                  break;
               case 103:
                  if (curChar == 42)
                     { jjCheckNAddStates(271, 273); }
                  break;
               case 104:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(105, 106); }
                  break;
               case 105:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(105, 106); }
                  break;
               case 106:
                  if (curChar == 42)
                     { jjCheckNAddStates(274, 276); }
                  break;
               case 107:
                  if (curChar == 47)
                     { jjCheckNAddStates(266, 270); }
                  break;
               case 108:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 101;
                  break;
               case 109:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(110, 219); }
                  break;
               case 111:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(277, 282); }
                  break;
               case 112:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(283, 288); }
                  break;
               case 113:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(114, 115); }
                  break;
               case 114:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(114, 115); }
                  break;
               case 115:
                  if (curChar == 42)
                     { jjCheckNAddStates(289, 291); }
                  break;
               case 116:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(117, 118); }
                  break;
               case 117:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(117, 118); }
                  break;
               case 118:
                  if (curChar == 42)
                     { jjCheckNAddStates(292, 294); }
                  break;
               case 119:
                  if (curChar == 47)
                     { jjCheckNAddStates(283, 288); }
                  break;
               case 120:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 113;
                  break;
               case 121:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(122, 138); }
                  break;
               case 123:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(295, 297); }
                  break;
               case 124:
                  if (curChar == 61)
                     { jjCheckNAddStates(298, 302); }
                  break;
               case 125:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(126, 168); }
                  break;
               case 127:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(303, 308); }
                  break;
               case 128:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(309, 314); }
                  break;
               case 129:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(130, 131); }
                  break;
               case 130:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(130, 131); }
                  break;
               case 131:
                  if (curChar == 42)
                     { jjCheckNAddStates(315, 317); }
                  break;
               case 132:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(133, 134); }
                  break;
               case 133:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(133, 134); }
                  break;
               case 134:
                  if (curChar == 42)
                     { jjCheckNAddStates(318, 320); }
                  break;
               case 135:
                  if (curChar == 47)
                     { jjCheckNAddStates(309, 314); }
                  break;
               case 136:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 129;
                  break;
               case 137:
                  if (curChar == 62 && kind > 103)
                     kind = 103;
                  break;
               case 139:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(295, 297); }
                  break;
               case 141:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(321, 326); }
                  break;
               case 142:
                  if (curChar == 10)
                     { jjCheckNAddStates(295, 297); }
                  break;
               case 143:
               case 151:
                  if (curChar == 13)
                     { jjCheckNAdd(142); }
                  break;
               case 144:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(295, 297); }
                  break;
               case 145:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(327, 335); }
                  break;
               case 146:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(336, 340); }
                  break;
               case 147:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(341, 346); }
                  break;
               case 148:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(347, 353); }
                  break;
               case 149:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(354, 361); }
                  break;
               case 150:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(362, 367); }
                  break;
               case 152:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(368, 376); }
                  break;
               case 153:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(377, 381); }
                  break;
               case 154:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(382, 387); }
                  break;
               case 155:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(388, 394); }
                  break;
               case 156:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(395, 402); }
                  break;
               case 158:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(303, 308); }
                  break;
               case 159:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(403, 410); }
                  break;
               case 160:
                  if (curChar == 10)
                     { jjCheckNAddStates(303, 308); }
                  break;
               case 161:
               case 170:
                  if (curChar == 13)
                     { jjCheckNAdd(160); }
                  break;
               case 162:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(411, 419); }
                  break;
               case 163:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(420, 430); }
                  break;
               case 164:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(431, 437); }
                  break;
               case 165:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(438, 445); }
                  break;
               case 166:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(446, 454); }
                  break;
               case 167:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(455, 464); }
                  break;
               case 169:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(465, 472); }
                  break;
               case 171:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(473, 483); }
                  break;
               case 172:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(484, 490); }
                  break;
               case 173:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(491, 498); }
                  break;
               case 174:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(499, 507); }
                  break;
               case 175:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(508, 517); }
                  break;
               case 176:
                  if (curChar == 34)
                     { jjCheckNAddStates(518, 520); }
                  break;
               case 177:
                  if ((0xfffffffbffffcbffL & l) != 0L)
                     { jjCheckNAddStates(518, 520); }
                  break;
               case 178:
                  if (curChar == 34)
                     { jjCheckNAddStates(521, 525); }
                  break;
               case 180:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(518, 520); }
                  break;
               case 181:
                  if (curChar == 10)
                     { jjCheckNAddStates(518, 520); }
                  break;
               case 182:
               case 185:
                  if (curChar == 13)
                     { jjCheckNAdd(181); }
                  break;
               case 183:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(518, 520); }
                  break;
               case 184:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(526, 531); }
                  break;
               case 186:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(518, 520); }
                  break;
               case 187:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(532, 540); }
                  break;
               case 188:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(541, 545); }
                  break;
               case 189:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(546, 551); }
                  break;
               case 190:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(552, 558); }
                  break;
               case 191:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(559, 566); }
                  break;
               case 192:
                  if (curChar == 39)
                     { jjCheckNAddStates(567, 569); }
                  break;
               case 193:
                  if ((0xffffff7fffffcbffL & l) != 0L)
                     { jjCheckNAddStates(567, 569); }
                  break;
               case 194:
                  if (curChar == 39)
                     { jjCheckNAddStates(521, 525); }
                  break;
               case 196:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(567, 569); }
                  break;
               case 197:
                  if (curChar == 10)
                     { jjCheckNAddStates(567, 569); }
                  break;
               case 198:
               case 201:
                  if (curChar == 13)
                     { jjCheckNAdd(197); }
                  break;
               case 199:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(567, 569); }
                  break;
               case 200:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(570, 575); }
                  break;
               case 202:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(567, 569); }
                  break;
               case 203:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(576, 584); }
                  break;
               case 204:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(585, 589); }
                  break;
               case 205:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(590, 595); }
                  break;
               case 206:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(596, 602); }
                  break;
               case 207:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(603, 610); }
                  break;
               case 209:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(277, 282); }
                  break;
               case 210:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(611, 618); }
                  break;
               case 211:
                  if (curChar == 10)
                     { jjCheckNAddStates(277, 282); }
                  break;
               case 212:
               case 221:
                  if (curChar == 13)
                     { jjCheckNAdd(211); }
                  break;
               case 213:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(619, 627); }
                  break;
               case 214:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(628, 638); }
                  break;
               case 215:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(639, 645); }
                  break;
               case 216:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(646, 653); }
                  break;
               case 217:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(654, 662); }
                  break;
               case 218:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(663, 672); }
                  break;
               case 220:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(673, 680); }
                  break;
               case 222:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(681, 691); }
                  break;
               case 223:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(692, 698); }
                  break;
               case 224:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(699, 706); }
                  break;
               case 225:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(707, 715); }
                  break;
               case 226:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(716, 725); }
                  break;
               case 233:
                  if (curChar == 33)
                     jjstateSet[jjnewStateCnt++] = 232;
                  break;
               case 234:
                  if (curChar == 47)
                     { jjCheckNAddStates(726, 729); }
                  break;
               case 235:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(730, 734); }
                  break;
               case 236:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(237, 238); }
                  break;
               case 237:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(237, 238); }
                  break;
               case 238:
                  if (curChar == 42)
                     { jjCheckNAddStates(735, 737); }
                  break;
               case 239:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(240, 241); }
                  break;
               case 240:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(240, 241); }
                  break;
               case 241:
                  if (curChar == 42)
                     { jjCheckNAddStates(738, 740); }
                  break;
               case 242:
                  if (curChar == 47)
                     { jjCheckNAddStates(730, 734); }
                  break;
               case 243:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 236;
                  break;
               case 244:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(245, 268); }
                  break;
               case 246:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(741, 744); }
                  break;
               case 247:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(745, 747); }
                  break;
               case 248:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(249, 250); }
                  break;
               case 249:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(249, 250); }
                  break;
               case 250:
                  if (curChar == 42)
                     { jjCheckNAddStates(748, 750); }
                  break;
               case 251:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(252, 253); }
                  break;
               case 252:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(252, 253); }
                  break;
               case 253:
                  if (curChar == 42)
                     { jjCheckNAddStates(751, 753); }
                  break;
               case 254:
                  if (curChar == 47)
                     { jjCheckNAddStates(745, 747); }
                  break;
               case 255:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 248;
                  break;
               case 256:
                  if (curChar == 62 && kind > 104)
                     kind = 104;
                  break;
               case 258:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(741, 744); }
                  break;
               case 259:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(754, 759); }
                  break;
               case 260:
                  if (curChar == 10)
                     { jjCheckNAddStates(741, 744); }
                  break;
               case 261:
               case 270:
                  if (curChar == 13)
                     { jjCheckNAdd(260); }
                  break;
               case 262:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(760, 765); }
                  break;
               case 263:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(766, 774); }
                  break;
               case 264:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(775, 779); }
                  break;
               case 265:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(780, 785); }
                  break;
               case 266:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(786, 792); }
                  break;
               case 267:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(793, 800); }
                  break;
               case 269:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(801, 806); }
                  break;
               case 271:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(807, 815); }
                  break;
               case 272:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(816, 820); }
                  break;
               case 273:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(821, 826); }
                  break;
               case 274:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(827, 833); }
                  break;
               case 275:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(834, 841); }
                  break;
               case 276:
                  if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 234;
                  break;
               case 277:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  { jjCheckNAddStates(105, 124); }
                  break;
               case 278:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(279, 280); }
                  break;
               case 279:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(279, 280); }
                  break;
               case 280:
                  if (curChar == 42)
                     { jjCheckNAddStates(842, 844); }
                  break;
               case 281:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(282, 283); }
                  break;
               case 282:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(282, 283); }
                  break;
               case 283:
                  if (curChar == 42)
                     { jjCheckNAddStates(845, 847); }
                  break;
               case 284:
                  if (curChar != 47)
                     break;
                  if (kind > 21)
                     kind = 21;
                  { jjCheckNAddTwoStates(285, 286); }
                  break;
               case 285:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 278;
                  break;
               case 286:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  { jjCheckNAddTwoStates(285, 286); }
                  break;
               case 287:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(288, 289); }
                  break;
               case 288:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(288, 289); }
                  break;
               case 289:
                  if (curChar == 42)
                     { jjCheckNAddStates(848, 850); }
                  break;
               case 290:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(291, 292); }
                  break;
               case 291:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(291, 292); }
                  break;
               case 292:
                  if (curChar == 42)
                     { jjCheckNAddStates(851, 853); }
                  break;
               case 293:
                  if (curChar == 47)
                     { jjCheckNAddStates(854, 856); }
                  break;
               case 294:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 287;
                  break;
               case 295:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(854, 856); }
                  break;
               case 297:
                  if (curChar == 61 && kind > 24)
                     kind = 24;
                  break;
               case 298:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(299, 300); }
                  break;
               case 299:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(299, 300); }
                  break;
               case 300:
                  if (curChar == 42)
                     { jjCheckNAddStates(857, 859); }
                  break;
               case 301:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(302, 303); }
                  break;
               case 302:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(302, 303); }
                  break;
               case 303:
                  if (curChar == 42)
                     { jjCheckNAddStates(860, 862); }
                  break;
               case 304:
                  if (curChar == 47)
                     { jjCheckNAddStates(863, 865); }
                  break;
               case 305:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 298;
                  break;
               case 306:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(863, 865); }
                  break;
               case 307:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(308, 309); }
                  break;
               case 308:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(308, 309); }
                  break;
               case 309:
                  if (curChar == 42)
                     { jjCheckNAddStates(866, 868); }
                  break;
               case 310:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(311, 312); }
                  break;
               case 311:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(311, 312); }
                  break;
               case 312:
                  if (curChar == 42)
                     { jjCheckNAddStates(869, 871); }
                  break;
               case 313:
                  if (curChar == 47)
                     { jjCheckNAddStates(872, 874); }
                  break;
               case 314:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 307;
                  break;
               case 315:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(872, 874); }
                  break;
               case 316:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(317, 318); }
                  break;
               case 317:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(317, 318); }
                  break;
               case 318:
                  if (curChar == 42)
                     { jjCheckNAddStates(875, 877); }
                  break;
               case 319:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(320, 321); }
                  break;
               case 320:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(320, 321); }
                  break;
               case 321:
                  if (curChar == 42)
                     { jjCheckNAddStates(878, 880); }
                  break;
               case 322:
                  if (curChar == 47)
                     { jjCheckNAddStates(881, 883); }
                  break;
               case 323:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 316;
                  break;
               case 324:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(881, 883); }
                  break;
               case 325:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(326, 327); }
                  break;
               case 326:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(326, 327); }
                  break;
               case 327:
                  if (curChar == 42)
                     { jjCheckNAddStates(884, 886); }
                  break;
               case 328:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(329, 330); }
                  break;
               case 329:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(329, 330); }
                  break;
               case 330:
                  if (curChar == 42)
                     { jjCheckNAddStates(887, 889); }
                  break;
               case 331:
                  if (curChar == 47)
                     { jjCheckNAddStates(890, 892); }
                  break;
               case 332:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 325;
                  break;
               case 333:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(890, 892); }
                  break;
               case 334:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(335, 336); }
                  break;
               case 335:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(335, 336); }
                  break;
               case 336:
                  if (curChar == 42)
                     { jjCheckNAddStates(893, 895); }
                  break;
               case 337:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(338, 339); }
                  break;
               case 338:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(338, 339); }
                  break;
               case 339:
                  if (curChar == 42)
                     { jjCheckNAddStates(896, 898); }
                  break;
               case 340:
                  if (curChar == 47)
                     { jjCheckNAddStates(899, 901); }
                  break;
               case 341:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 334;
                  break;
               case 342:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(899, 901); }
                  break;
               case 345:
                  if (curChar != 34)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(167, 171); }
                  break;
               case 346:
                  if ((0xfffffffbffffcbffL & l) != 0L)
                     { jjCheckNAddStates(902, 904); }
                  break;
               case 347:
                  if (curChar == 34 && kind > 34)
                     kind = 34;
                  break;
               case 349:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(902, 904); }
                  break;
               case 350:
                  if (curChar == 10)
                     { jjCheckNAddStates(902, 904); }
                  break;
               case 351:
               case 354:
                  if (curChar == 13)
                     { jjCheckNAdd(350); }
                  break;
               case 352:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(902, 904); }
                  break;
               case 353:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(905, 910); }
                  break;
               case 355:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(902, 904); }
                  break;
               case 356:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(911, 919); }
                  break;
               case 357:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(920, 924); }
                  break;
               case 358:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(925, 930); }
                  break;
               case 359:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(931, 937); }
                  break;
               case 360:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(938, 945); }
                  break;
               case 361:
                  if ((0xfffffffbffffcbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(361, 362); }
                  break;
               case 363:
                  if ((0x3400L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(361, 362); }
                  break;
               case 364:
                  if (curChar != 10)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(361, 362); }
                  break;
               case 365:
               case 368:
                  if (curChar == 13)
                     { jjCheckNAdd(364); }
                  break;
               case 366:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(361, 362); }
                  break;
               case 367:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(946, 950); }
                  break;
               case 369:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(361, 362); }
                  break;
               case 370:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(951, 958); }
                  break;
               case 371:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(959, 962); }
                  break;
               case 372:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(963, 967); }
                  break;
               case 373:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(968, 973); }
                  break;
               case 374:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(974, 980); }
                  break;
               case 375:
                  if (curChar != 39)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(162, 166); }
                  break;
               case 376:
                  if ((0xffffff7fffffcbffL & l) != 0L)
                     { jjCheckNAddStates(981, 983); }
                  break;
               case 377:
                  if (curChar == 39 && kind > 34)
                     kind = 34;
                  break;
               case 379:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(981, 983); }
                  break;
               case 380:
                  if (curChar == 10)
                     { jjCheckNAddStates(981, 983); }
                  break;
               case 381:
               case 384:
                  if (curChar == 13)
                     { jjCheckNAdd(380); }
                  break;
               case 382:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(981, 983); }
                  break;
               case 383:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(984, 989); }
                  break;
               case 385:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(981, 983); }
                  break;
               case 386:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(990, 998); }
                  break;
               case 387:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(999, 1003); }
                  break;
               case 388:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1004, 1009); }
                  break;
               case 389:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1010, 1016); }
                  break;
               case 390:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1017, 1024); }
                  break;
               case 391:
                  if ((0xffffff7fffffcbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(391, 392); }
                  break;
               case 393:
                  if ((0x3400L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(391, 392); }
                  break;
               case 394:
                  if (curChar != 10)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(391, 392); }
                  break;
               case 395:
               case 398:
                  if (curChar == 13)
                     { jjCheckNAdd(394); }
                  break;
               case 396:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(391, 392); }
                  break;
               case 397:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(1025, 1029); }
                  break;
               case 399:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(391, 392); }
                  break;
               case 400:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(1030, 1037); }
                  break;
               case 401:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(1038, 1041); }
                  break;
               case 402:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(1042, 1046); }
                  break;
               case 403:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(1047, 1052); }
                  break;
               case 404:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(1053, 1059); }
                  break;
               case 405:
                  if (curChar == 45)
                     { jjAddStates(158, 161); }
                  break;
               case 407:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddTwoStates(407, 408); }
                  break;
               case 409:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddTwoStates(407, 408); }
                  break;
               case 410:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1060, 1064); }
                  break;
               case 411:
                  if (curChar != 10)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddTwoStates(407, 408); }
                  break;
               case 412:
               case 443:
                  if (curChar == 13)
                     { jjCheckNAdd(411); }
                  break;
               case 413:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddTwoStates(407, 408); }
                  break;
               case 414:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1065, 1072); }
                  break;
               case 415:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1073, 1076); }
                  break;
               case 416:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1077, 1081); }
                  break;
               case 417:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1082, 1087); }
                  break;
               case 418:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1088, 1094); }
                  break;
               case 420:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(1095, 1097); }
                  break;
               case 421:
                  if (curChar == 40 && kind > 102)
                     kind = 102;
                  break;
               case 423:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1095, 1097); }
                  break;
               case 424:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1098, 1103); }
                  break;
               case 425:
                  if (curChar == 10)
                     { jjCheckNAddStates(1095, 1097); }
                  break;
               case 426:
               case 435:
                  if (curChar == 13)
                     { jjCheckNAdd(425); }
                  break;
               case 427:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1095, 1097); }
                  break;
               case 428:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1104, 1112); }
                  break;
               case 429:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1113, 1117); }
                  break;
               case 430:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1118, 1123); }
                  break;
               case 431:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1124, 1130); }
                  break;
               case 432:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1131, 1138); }
                  break;
               case 434:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1139, 1144); }
                  break;
               case 436:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1145, 1153); }
                  break;
               case 437:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1154, 1158); }
                  break;
               case 438:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1159, 1164); }
                  break;
               case 439:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1165, 1171); }
                  break;
               case 440:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1172, 1179); }
                  break;
               case 442:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1180, 1184); }
                  break;
               case 444:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1185, 1192); }
                  break;
               case 445:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1193, 1196); }
                  break;
               case 446:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1197, 1201); }
                  break;
               case 447:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1202, 1207); }
                  break;
               case 448:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1208, 1214); }
                  break;
               case 450:
                  if (curChar == 35)
                     { jjCheckNAddStates(153, 157); }
                  break;
               case 451:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(452, 465); }
                  break;
               case 453:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddTwoStates(453, 454); }
                  break;
               case 455:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddTwoStates(453, 454); }
                  break;
               case 456:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1215, 1219); }
                  break;
               case 457:
                  if (curChar != 10)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddTwoStates(453, 454); }
                  break;
               case 458:
               case 467:
                  if (curChar == 13)
                     { jjCheckNAdd(457); }
                  break;
               case 459:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddTwoStates(453, 454); }
                  break;
               case 460:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1220, 1227); }
                  break;
               case 461:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1228, 1231); }
                  break;
               case 462:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1232, 1236); }
                  break;
               case 463:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1237, 1242); }
                  break;
               case 464:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1243, 1249); }
                  break;
               case 466:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1250, 1254); }
                  break;
               case 468:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1255, 1262); }
                  break;
               case 469:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1263, 1266); }
                  break;
               case 470:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1267, 1271); }
                  break;
               case 471:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1272, 1277); }
                  break;
               case 472:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1278, 1284); }
                  break;
               case 473:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(473, 474); }
                  break;
               case 475:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(473, 474); }
                  break;
               case 476:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1285, 1289); }
                  break;
               case 477:
                  if (curChar != 10)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(473, 474); }
                  break;
               case 478:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 477;
                  break;
               case 479:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(473, 474); }
                  break;
               case 480:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1290, 1297); }
                  break;
               case 481:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1298, 1301); }
                  break;
               case 482:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1302, 1306); }
                  break;
               case 483:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1307, 1312); }
                  break;
               case 484:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1313, 1319); }
                  break;
               case 486:
                  if (curChar == 40)
                     { jjCheckNAddStates(1320, 1325); }
                  break;
               case 487:
                  if (curChar == 34)
                     { jjCheckNAddStates(1326, 1328); }
                  break;
               case 488:
                  if ((0xfffffffbffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1326, 1328); }
                  break;
               case 489:
                  if (curChar == 34)
                     { jjCheckNAddTwoStates(490, 499); }
                  break;
               case 490:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1329, 1331); }
                  break;
               case 491:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(492, 493); }
                  break;
               case 492:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(492, 493); }
                  break;
               case 493:
                  if (curChar == 42)
                     { jjCheckNAddStates(1332, 1334); }
                  break;
               case 494:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(495, 496); }
                  break;
               case 495:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(495, 496); }
                  break;
               case 496:
                  if (curChar == 42)
                     { jjCheckNAddStates(1335, 1337); }
                  break;
               case 497:
                  if (curChar == 47)
                     { jjCheckNAddStates(1329, 1331); }
                  break;
               case 498:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 491;
                  break;
               case 499:
                  if (curChar == 41 && kind > 54)
                     kind = 54;
                  break;
               case 501:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(1326, 1328); }
                  break;
               case 502:
                  if (curChar == 10)
                     { jjCheckNAddStates(1326, 1328); }
                  break;
               case 503:
               case 506:
                  if (curChar == 13)
                     { jjCheckNAdd(502); }
                  break;
               case 504:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1326, 1328); }
                  break;
               case 505:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1338, 1343); }
                  break;
               case 507:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1326, 1328); }
                  break;
               case 508:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1344, 1352); }
                  break;
               case 509:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1353, 1357); }
                  break;
               case 510:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1358, 1363); }
                  break;
               case 511:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1364, 1370); }
                  break;
               case 512:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1371, 1378); }
                  break;
               case 513:
                  if (curChar == 39)
                     { jjCheckNAddStates(1379, 1381); }
                  break;
               case 514:
                  if ((0xffffff7fffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1379, 1381); }
                  break;
               case 515:
                  if (curChar == 39)
                     { jjCheckNAddTwoStates(490, 499); }
                  break;
               case 517:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(1379, 1381); }
                  break;
               case 518:
                  if (curChar == 10)
                     { jjCheckNAddStates(1379, 1381); }
                  break;
               case 519:
               case 522:
                  if (curChar == 13)
                     { jjCheckNAdd(518); }
                  break;
               case 520:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1379, 1381); }
                  break;
               case 521:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1382, 1387); }
                  break;
               case 523:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1379, 1381); }
                  break;
               case 524:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1388, 1396); }
                  break;
               case 525:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1397, 1401); }
                  break;
               case 526:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1402, 1407); }
                  break;
               case 527:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1408, 1414); }
                  break;
               case 528:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1415, 1422); }
                  break;
               case 529:
                  if ((0xfffffc7a00000000L & l) != 0L)
                     { jjCheckNAddStates(1423, 1426); }
                  break;
               case 531:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1423, 1426); }
                  break;
               case 532:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1427, 1432); }
                  break;
               case 533:
                  if (curChar == 10)
                     { jjCheckNAddStates(1423, 1426); }
                  break;
               case 534:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 533;
                  break;
               case 535:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1433, 1438); }
                  break;
               case 536:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1439, 1447); }
                  break;
               case 537:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1448, 1452); }
                  break;
               case 538:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1453, 1458); }
                  break;
               case 539:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1459, 1465); }
                  break;
               case 540:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1466, 1473); }
                  break;
               case 541:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1474, 1482); }
                  break;
               case 542:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(543, 544); }
                  break;
               case 543:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(543, 544); }
                  break;
               case 544:
                  if (curChar == 42)
                     { jjCheckNAddStates(1483, 1485); }
                  break;
               case 545:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(546, 547); }
                  break;
               case 546:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(546, 547); }
                  break;
               case 547:
                  if (curChar == 42)
                     { jjCheckNAddStates(1486, 1488); }
                  break;
               case 548:
                  if (curChar == 47)
                     { jjCheckNAddStates(1489, 1495); }
                  break;
               case 549:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 542;
                  break;
               case 552:
                  if (curChar == 43)
                     { jjAddStates(1496, 1497); }
                  break;
               case 553:
                  if (curChar != 63)
                     break;
                  if (kind > 96)
                     kind = 96;
                  jjstateSet[jjnewStateCnt++] = 554;
                  break;
               case 554:
                  if (curChar != 63)
                     break;
                  if (kind > 96)
                     kind = 96;
                  { jjCheckNAddStates(1498, 1501); }
                  break;
               case 555:
                  if (curChar == 63 && kind > 96)
                     kind = 96;
                  break;
               case 556:
               case 572:
               case 576:
               case 579:
               case 582:
                  if (curChar != 63)
                     break;
                  if (kind > 96)
                     kind = 96;
                  { jjCheckNAdd(555); }
                  break;
               case 557:
                  if (curChar != 63)
                     break;
                  if (kind > 96)
                     kind = 96;
                  { jjCheckNAddTwoStates(555, 556); }
                  break;
               case 558:
                  if (curChar != 63)
                     break;
                  if (kind > 96)
                     kind = 96;
                  { jjCheckNAddStates(1502, 1504); }
                  break;
               case 559:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 96)
                     kind = 96;
                  { jjAddStates(1505, 1510); }
                  break;
               case 560:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 561;
                  break;
               case 561:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 562;
                  break;
               case 562:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 563;
                  break;
               case 563:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(564); }
                  break;
               case 564:
                  if ((0x3ff000000000000L & l) != 0L && kind > 96)
                     kind = 96;
                  break;
               case 565:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 566;
                  break;
               case 566:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 567;
                  break;
               case 567:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 568;
                  break;
               case 568:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 96)
                     kind = 96;
                  { jjCheckNAdd(555); }
                  break;
               case 569:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 570;
                  break;
               case 570:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 571;
                  break;
               case 571:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 96)
                     kind = 96;
                  jjstateSet[jjnewStateCnt++] = 572;
                  break;
               case 573:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 574;
                  break;
               case 574:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 96)
                     kind = 96;
                  jjstateSet[jjnewStateCnt++] = 575;
                  break;
               case 575:
                  if (curChar != 63)
                     break;
                  if (kind > 96)
                     kind = 96;
                  { jjCheckNAddTwoStates(555, 576); }
                  break;
               case 577:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 96)
                     kind = 96;
                  jjstateSet[jjnewStateCnt++] = 578;
                  break;
               case 578:
                  if (curChar != 63)
                     break;
                  if (kind > 96)
                     kind = 96;
                  { jjCheckNAddStates(1511, 1513); }
                  break;
               case 580:
                  if (curChar != 63)
                     break;
                  if (kind > 96)
                     kind = 96;
                  { jjCheckNAddTwoStates(555, 579); }
                  break;
               case 581:
                  if (curChar != 63)
                     break;
                  if (kind > 96)
                     kind = 96;
                  { jjCheckNAddStates(1514, 1517); }
                  break;
               case 583:
                  if (curChar != 63)
                     break;
                  if (kind > 96)
                     kind = 96;
                  { jjCheckNAddTwoStates(555, 582); }
                  break;
               case 584:
                  if (curChar != 63)
                     break;
                  if (kind > 96)
                     kind = 96;
                  { jjCheckNAddStates(1518, 1520); }
                  break;
               case 585:
                  if (curChar == 43)
                     jjstateSet[jjnewStateCnt++] = 586;
                  break;
               case 586:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(587, 593); }
                  break;
               case 587:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 588;
                  break;
               case 588:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 96)
                     kind = 96;
                  jjstateSet[jjnewStateCnt++] = 589;
                  break;
               case 589:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 96)
                     kind = 96;
                  { jjCheckNAddStates(1521, 1524); }
                  break;
               case 590:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 96)
                     kind = 96;
                  { jjCheckNAdd(564); }
                  break;
               case 591:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 96)
                     kind = 96;
                  { jjCheckNAddTwoStates(564, 590); }
                  break;
               case 592:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 96)
                     kind = 96;
                  { jjCheckNAddStates(1525, 1527); }
                  break;
               case 593:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1528, 1532); }
                  break;
               case 594:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(587); }
                  break;
               case 595:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(594, 587); }
                  break;
               case 596:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1533, 1535); }
                  break;
               case 597:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1536, 1539); }
                  break;
               case 598:
                  if (curChar == 46)
                     { jjCheckNAddStates(125, 152); }
                  break;
               case 599:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(599, 601); }
                  break;
               case 602:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(602, 604); }
                  break;
               case 605:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(605, 607); }
                  break;
               case 608:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(608, 610); }
                  break;
               case 611:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(611, 613); }
                  break;
               case 614:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(614, 616); }
                  break;
               case 617:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(617, 621); }
                  break;
               case 622:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(622, 626); }
                  break;
               case 627:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(627, 629); }
                  break;
               case 630:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(630, 631); }
                  break;
               case 632:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(632, 633); }
                  break;
               case 634:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(634, 636); }
                  break;
               case 637:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(637, 639); }
                  break;
               case 640:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(640, 642); }
                  break;
               case 643:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(643, 645); }
                  break;
               case 646:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(646, 648); }
                  break;
               case 649:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1540, 1544); }
                  break;
               case 663:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(663, 665); }
                  break;
               case 666:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(666, 668); }
                  break;
               case 669:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1545, 1547); }
                  break;
               case 673:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1548, 1550); }
                  break;
               case 678:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(678, 679); }
                  break;
               case 688:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1551, 1553); }
                  break;
               case 690:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddTwoStates(690, 691); }
                  break;
               case 692:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddTwoStates(690, 691); }
                  break;
               case 693:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddStates(1554, 1558); }
                  break;
               case 694:
                  if (curChar != 10)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddTwoStates(690, 691); }
                  break;
               case 695:
               case 704:
                  if (curChar == 13)
                     { jjCheckNAdd(694); }
                  break;
               case 696:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddTwoStates(690, 691); }
                  break;
               case 697:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddStates(1559, 1566); }
                  break;
               case 698:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddStates(1567, 1570); }
                  break;
               case 699:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddStates(1571, 1575); }
                  break;
               case 700:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddStates(1576, 1581); }
                  break;
               case 701:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddStates(1582, 1588); }
                  break;
               case 703:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddStates(1589, 1593); }
                  break;
               case 705:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddStates(1594, 1601); }
                  break;
               case 706:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddStates(1602, 1605); }
                  break;
               case 707:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddStates(1606, 1610); }
                  break;
               case 708:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddStates(1611, 1616); }
                  break;
               case 709:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddStates(1617, 1623); }
                  break;
               case 710:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(710, 711); }
                  break;
               case 711:
                  if (curChar == 37 && kind > 66)
                     kind = 66;
                  break;
               case 712:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 67)
                     kind = 67;
                  { jjCheckNAdd(712); }
                  break;
               case 713:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(714, 727); }
                  break;
               case 715:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddTwoStates(715, 716); }
                  break;
               case 717:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddTwoStates(715, 716); }
                  break;
               case 718:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1624, 1628); }
                  break;
               case 719:
                  if (curChar != 10)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddTwoStates(715, 716); }
                  break;
               case 720:
               case 729:
                  if (curChar == 13)
                     { jjCheckNAdd(719); }
                  break;
               case 721:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddTwoStates(715, 716); }
                  break;
               case 722:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1629, 1636); }
                  break;
               case 723:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1637, 1640); }
                  break;
               case 724:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1641, 1645); }
                  break;
               case 725:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1646, 1651); }
                  break;
               case 726:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1652, 1658); }
                  break;
               case 728:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1659, 1663); }
                  break;
               case 730:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1664, 1671); }
                  break;
               case 731:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1672, 1675); }
                  break;
               case 732:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1676, 1680); }
                  break;
               case 733:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1681, 1686); }
                  break;
               case 734:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1687, 1693); }
                  break;
               case 736:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 67)
                     kind = 67;
                  { jjCheckNAddStates(0, 104); }
                  break;
               case 737:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(737, 601); }
                  break;
               case 738:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(738, 739); }
                  break;
               case 739:
                  if (curChar == 46)
                     { jjCheckNAdd(599); }
                  break;
               case 740:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(740, 604); }
                  break;
               case 741:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(741, 742); }
                  break;
               case 742:
                  if (curChar == 46)
                     { jjCheckNAdd(602); }
                  break;
               case 743:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(743, 607); }
                  break;
               case 744:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(744, 745); }
                  break;
               case 745:
                  if (curChar == 46)
                     { jjCheckNAdd(605); }
                  break;
               case 746:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(746, 610); }
                  break;
               case 747:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(747, 748); }
                  break;
               case 748:
                  if (curChar == 46)
                     { jjCheckNAdd(608); }
                  break;
               case 749:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(749, 613); }
                  break;
               case 750:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(750, 751); }
                  break;
               case 751:
                  if (curChar == 46)
                     { jjCheckNAdd(611); }
                  break;
               case 752:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(752, 616); }
                  break;
               case 753:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(753, 754); }
                  break;
               case 754:
                  if (curChar == 46)
                     { jjCheckNAdd(614); }
                  break;
               case 755:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(755, 621); }
                  break;
               case 756:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(756, 757); }
                  break;
               case 757:
                  if (curChar == 46)
                     { jjCheckNAdd(617); }
                  break;
               case 758:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(758, 626); }
                  break;
               case 759:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(759, 760); }
                  break;
               case 760:
                  if (curChar == 46)
                     { jjCheckNAdd(622); }
                  break;
               case 761:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(761, 629); }
                  break;
               case 762:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(762, 763); }
                  break;
               case 763:
                  if (curChar == 46)
                     { jjCheckNAdd(627); }
                  break;
               case 764:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(764, 631); }
                  break;
               case 765:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(765, 766); }
                  break;
               case 766:
                  if (curChar == 46)
                     { jjCheckNAdd(630); }
                  break;
               case 767:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(767, 633); }
                  break;
               case 768:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(768, 769); }
                  break;
               case 769:
                  if (curChar == 46)
                     { jjCheckNAdd(632); }
                  break;
               case 770:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(770, 636); }
                  break;
               case 771:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(771, 772); }
                  break;
               case 772:
                  if (curChar == 46)
                     { jjCheckNAdd(634); }
                  break;
               case 773:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(773, 639); }
                  break;
               case 774:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(774, 775); }
                  break;
               case 775:
                  if (curChar == 46)
                     { jjCheckNAdd(637); }
                  break;
               case 776:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(776, 642); }
                  break;
               case 777:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(777, 778); }
                  break;
               case 778:
                  if (curChar == 46)
                     { jjCheckNAdd(640); }
                  break;
               case 779:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(779, 645); }
                  break;
               case 780:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(780, 781); }
                  break;
               case 781:
                  if (curChar == 46)
                     { jjCheckNAdd(643); }
                  break;
               case 782:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(782, 648); }
                  break;
               case 783:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(783, 784); }
                  break;
               case 784:
                  if (curChar == 46)
                     { jjCheckNAdd(646); }
                  break;
               case 785:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1694, 1698); }
                  break;
               case 786:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(786, 787); }
                  break;
               case 787:
                  if (curChar == 46)
                     { jjCheckNAdd(649); }
                  break;
               case 788:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(788, 665); }
                  break;
               case 789:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(789, 790); }
                  break;
               case 790:
                  if (curChar == 46)
                     { jjCheckNAdd(663); }
                  break;
               case 791:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(791, 668); }
                  break;
               case 792:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(792, 793); }
                  break;
               case 793:
                  if (curChar == 46)
                     { jjCheckNAdd(666); }
                  break;
               case 794:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1699, 1701); }
                  break;
               case 795:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(795, 796); }
                  break;
               case 796:
                  if (curChar == 46)
                     { jjCheckNAdd(669); }
                  break;
               case 797:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1702, 1704); }
                  break;
               case 798:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(798, 799); }
                  break;
               case 799:
                  if (curChar == 46)
                     { jjCheckNAdd(673); }
                  break;
               case 800:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(800, 679); }
                  break;
               case 801:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(801, 802); }
                  break;
               case 802:
                  if (curChar == 46)
                     { jjCheckNAdd(678); }
                  break;
               case 803:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1705, 1707); }
                  break;
               case 804:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(804, 805); }
                  break;
               case 805:
                  if (curChar == 46)
                     { jjCheckNAdd(688); }
                  break;
               case 806:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(806, 711); }
                  break;
               case 807:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(807, 808); }
                  break;
               case 808:
                  if (curChar == 46)
                     { jjCheckNAdd(710); }
                  break;
               case 809:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 67)
                     kind = 67;
                  { jjCheckNAdd(809); }
                  break;
               case 810:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(810, 811); }
                  break;
               case 811:
                  if (curChar == 46)
                     { jjCheckNAdd(712); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 7:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 36)
                        kind = 36;
                     { jjCheckNAddStates(1708, 1712); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddStates(1713, 1716); }
                  else if (curChar == 126)
                  {
                     if (kind > 31)
                        kind = 31;
                     { jjCheckNAdd(297); }
                  }
                  else if (curChar == 64)
                     { jjAddStates(1717, 1719); }
                  else if (curChar == 123)
                  {
                     if (kind > 26)
                        kind = 26;
                  }
                  if ((0x20000000200000L & l) != 0L)
                     { jjAddStates(1720, 1722); }
                  else if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 54;
                  else if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 17;
                  else if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 14;
                  break;
               case 1:
                  { jjAddStates(1723, 1724); }
                  break;
               case 3:
               case 4:
                  { jjCheckNAddTwoStates(4, 5); }
                  break;
               case 8:
                  if (curChar == 123 && kind > 26)
                     kind = 26;
                  break;
               case 12:
                  if ((0x200000002000000L & l) != 0L && kind > 33)
                     kind = 33;
                  break;
               case 13:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 12;
                  break;
               case 14:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 15:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 14;
                  break;
               case 16:
                  if ((0x10000000100000L & l) != 0L && kind > 33)
                     kind = 33;
                  break;
               case 17:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 16;
                  break;
               case 18:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 20:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(20, 21); }
                  break;
               case 21:
                  { jjCheckNAddTwoStates(21, 22); }
                  break;
               case 23:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 19;
                  break;
               case 24:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 23;
                  break;
               case 25:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 24;
                  break;
               case 26:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 25;
                  break;
               case 27:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 26;
                  break;
               case 28:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 27;
                  break;
               case 29:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 28;
                  break;
               case 30:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 29;
                  break;
               case 31:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 30;
                  break;
               case 33:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 32;
                  break;
               case 34:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 33;
                  break;
               case 35:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 34;
                  break;
               case 36:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 35;
                  break;
               case 37:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 36;
                  break;
               case 38:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 39:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 38;
                  break;
               case 40:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 39;
                  break;
               case 41:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 40;
                  break;
               case 42:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 41;
                  break;
               case 43:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 42;
                  break;
               case 44:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 43;
                  break;
               case 45:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 44;
                  break;
               case 46:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 45;
                  break;
               case 47:
                  if ((0x100000001000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 46;
                  break;
               case 48:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 47;
                  break;
               case 50:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 49;
                  break;
               case 51:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 50;
                  break;
               case 52:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 51;
                  break;
               case 53:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 52;
                  break;
               case 54:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 53;
                  break;
               case 55:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 54;
                  break;
               case 59:
                  { jjAddStates(1725, 1726); }
                  break;
               case 61:
               case 62:
                  { jjCheckNAddTwoStates(62, 63); }
                  break;
               case 66:
                  if ((0x10000000100000L & l) != 0L && kind > 68)
                     kind = 68;
                  break;
               case 67:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 66;
                  break;
               case 68:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 67;
                  break;
               case 69:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 68;
                  break;
               case 70:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 69;
                  break;
               case 71:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 70;
                  break;
               case 72:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 71;
                  break;
               case 73:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 72;
                  break;
               case 74:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 73;
                  break;
               case 75:
                  if (curChar == 64)
                     { jjAddStates(1717, 1719); }
                  break;
               case 77:
               case 78:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddTwoStates(78, 79); }
                  break;
               case 79:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(80, 81); }
                  break;
               case 80:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddTwoStates(78, 79); }
                  break;
               case 81:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddStates(196, 200); }
                  break;
               case 85:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddStates(201, 208); }
                  break;
               case 86:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddStates(209, 212); }
                  break;
               case 87:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddStates(213, 217); }
                  break;
               case 88:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddStates(218, 223); }
                  break;
               case 89:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddStates(224, 230); }
                  break;
               case 90:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(80, 91); }
                  break;
               case 91:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddStates(231, 235); }
                  break;
               case 93:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddStates(236, 243); }
                  break;
               case 94:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddStates(244, 247); }
                  break;
               case 95:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddStates(248, 252); }
                  break;
               case 96:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddStates(253, 258); }
                  break;
               case 97:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddStates(259, 265); }
                  break;
               case 99:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1727, 1730); }
                  break;
               case 102:
                  { jjAddStates(1731, 1732); }
                  break;
               case 104:
               case 105:
                  { jjCheckNAddTwoStates(105, 106); }
                  break;
               case 110:
               case 111:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(277, 282); }
                  break;
               case 114:
                  { jjAddStates(1733, 1734); }
                  break;
               case 116:
               case 117:
                  { jjCheckNAddTwoStates(117, 118); }
                  break;
               case 122:
               case 123:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(295, 297); }
                  break;
               case 126:
               case 127:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(303, 308); }
                  break;
               case 130:
                  { jjAddStates(1735, 1736); }
                  break;
               case 132:
               case 133:
                  { jjCheckNAddTwoStates(133, 134); }
                  break;
               case 138:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(139, 150); }
                  break;
               case 139:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(295, 297); }
                  break;
               case 140:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(139, 141); }
                  break;
               case 141:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(321, 326); }
                  break;
               case 145:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(327, 335); }
                  break;
               case 146:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(336, 340); }
                  break;
               case 147:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(341, 346); }
                  break;
               case 148:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(347, 353); }
                  break;
               case 149:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(354, 361); }
                  break;
               case 150:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(362, 367); }
                  break;
               case 152:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(368, 376); }
                  break;
               case 153:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(377, 381); }
                  break;
               case 154:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(382, 387); }
                  break;
               case 155:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(388, 394); }
                  break;
               case 156:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(395, 402); }
                  break;
               case 157:
                  if (curChar == 92)
                     { jjCheckNAddStates(1737, 1740); }
                  break;
               case 158:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(303, 308); }
                  break;
               case 159:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(403, 410); }
                  break;
               case 163:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(420, 430); }
                  break;
               case 164:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(431, 437); }
                  break;
               case 165:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(438, 445); }
                  break;
               case 166:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(446, 454); }
                  break;
               case 167:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(455, 464); }
                  break;
               case 168:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(158, 169); }
                  break;
               case 169:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(465, 472); }
                  break;
               case 171:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(473, 483); }
                  break;
               case 172:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(484, 490); }
                  break;
               case 173:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(491, 498); }
                  break;
               case 174:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(499, 507); }
                  break;
               case 175:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(508, 517); }
                  break;
               case 177:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(518, 520); }
                  break;
               case 179:
                  if (curChar == 92)
                     { jjAddStates(1741, 1744); }
                  break;
               case 183:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(518, 520); }
                  break;
               case 184:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(526, 531); }
                  break;
               case 187:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(532, 540); }
                  break;
               case 188:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(541, 545); }
                  break;
               case 189:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(546, 551); }
                  break;
               case 190:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(552, 558); }
                  break;
               case 191:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(559, 566); }
                  break;
               case 193:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(567, 569); }
                  break;
               case 195:
                  if (curChar == 92)
                     { jjAddStates(1745, 1748); }
                  break;
               case 199:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(567, 569); }
                  break;
               case 200:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(570, 575); }
                  break;
               case 203:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(576, 584); }
                  break;
               case 204:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(585, 589); }
                  break;
               case 205:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(590, 595); }
                  break;
               case 206:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(596, 602); }
                  break;
               case 207:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(603, 610); }
                  break;
               case 208:
                  if (curChar == 92)
                     { jjCheckNAddStates(1749, 1752); }
                  break;
               case 209:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(277, 282); }
                  break;
               case 210:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(611, 618); }
                  break;
               case 214:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(628, 638); }
                  break;
               case 215:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(639, 645); }
                  break;
               case 216:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(646, 653); }
                  break;
               case 217:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(654, 662); }
                  break;
               case 218:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(663, 672); }
                  break;
               case 219:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(209, 220); }
                  break;
               case 220:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(673, 680); }
                  break;
               case 222:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(681, 691); }
                  break;
               case 223:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(692, 698); }
                  break;
               case 224:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(699, 706); }
                  break;
               case 225:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(707, 715); }
                  break;
               case 226:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(716, 725); }
                  break;
               case 227:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 99;
                  break;
               case 228:
                  if ((0x200000002000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 227;
                  break;
               case 229:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 228;
                  break;
               case 230:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 229;
                  break;
               case 231:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 230;
                  break;
               case 232:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 231;
                  break;
               case 237:
                  { jjAddStates(1753, 1754); }
                  break;
               case 239:
               case 240:
                  { jjCheckNAddTwoStates(240, 241); }
                  break;
               case 245:
               case 246:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(741, 744); }
                  break;
               case 249:
                  { jjAddStates(1755, 1756); }
                  break;
               case 251:
               case 252:
                  { jjCheckNAddTwoStates(252, 253); }
                  break;
               case 257:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(258, 259); }
                  break;
               case 258:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(741, 744); }
                  break;
               case 259:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(754, 759); }
                  break;
               case 263:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(766, 774); }
                  break;
               case 264:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(775, 779); }
                  break;
               case 265:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(780, 785); }
                  break;
               case 266:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(786, 792); }
                  break;
               case 267:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(793, 800); }
                  break;
               case 268:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(258, 269); }
                  break;
               case 269:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(801, 806); }
                  break;
               case 271:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(807, 815); }
                  break;
               case 272:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(816, 820); }
                  break;
               case 273:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(821, 826); }
                  break;
               case 274:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(827, 833); }
                  break;
               case 275:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(834, 841); }
                  break;
               case 279:
                  { jjAddStates(1757, 1758); }
                  break;
               case 281:
               case 282:
                  { jjCheckNAddTwoStates(282, 283); }
                  break;
               case 288:
                  { jjAddStates(1759, 1760); }
                  break;
               case 290:
               case 291:
                  { jjCheckNAddTwoStates(291, 292); }
                  break;
               case 296:
                  if (curChar == 126)
                     { jjCheckNAdd(297); }
                  break;
               case 299:
                  { jjAddStates(1761, 1762); }
                  break;
               case 301:
               case 302:
                  { jjCheckNAddTwoStates(302, 303); }
                  break;
               case 308:
                  { jjAddStates(1763, 1764); }
                  break;
               case 310:
               case 311:
                  { jjCheckNAddTwoStates(311, 312); }
                  break;
               case 317:
                  { jjAddStates(1765, 1766); }
                  break;
               case 319:
               case 320:
                  { jjCheckNAddTwoStates(320, 321); }
                  break;
               case 326:
                  { jjAddStates(1767, 1768); }
                  break;
               case 328:
               case 329:
                  { jjCheckNAddTwoStates(329, 330); }
                  break;
               case 335:
                  { jjAddStates(1769, 1770); }
                  break;
               case 337:
               case 338:
                  { jjCheckNAddTwoStates(338, 339); }
                  break;
               case 343:
                  if (curChar == 126 && kind > 31)
                     kind = 31;
                  break;
               case 344:
                  if (curChar != 126)
                     break;
                  if (kind > 31)
                     kind = 31;
                  { jjCheckNAdd(297); }
                  break;
               case 346:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(902, 904); }
                  break;
               case 348:
                  if (curChar == 92)
                     { jjAddStates(1771, 1774); }
                  break;
               case 352:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(902, 904); }
                  break;
               case 353:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(905, 910); }
                  break;
               case 356:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(911, 919); }
                  break;
               case 357:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(920, 924); }
                  break;
               case 358:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(925, 930); }
                  break;
               case 359:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(931, 937); }
                  break;
               case 360:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(938, 945); }
                  break;
               case 361:
                  if ((0xffffffffefffffffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(361, 362); }
                  break;
               case 362:
                  if (curChar == 92)
                     { jjAddStates(1775, 1778); }
                  break;
               case 366:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(361, 362); }
                  break;
               case 367:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(946, 950); }
                  break;
               case 370:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(951, 958); }
                  break;
               case 371:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(959, 962); }
                  break;
               case 372:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(963, 967); }
                  break;
               case 373:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(968, 973); }
                  break;
               case 374:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(974, 980); }
                  break;
               case 376:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(981, 983); }
                  break;
               case 378:
                  if (curChar == 92)
                     { jjAddStates(1779, 1782); }
                  break;
               case 382:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(981, 983); }
                  break;
               case 383:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(984, 989); }
                  break;
               case 386:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(990, 998); }
                  break;
               case 387:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(999, 1003); }
                  break;
               case 388:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1004, 1009); }
                  break;
               case 389:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1010, 1016); }
                  break;
               case 390:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1017, 1024); }
                  break;
               case 391:
                  if ((0xffffffffefffffffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(391, 392); }
                  break;
               case 392:
                  if (curChar == 92)
                     { jjAddStates(1783, 1786); }
                  break;
               case 396:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(391, 392); }
                  break;
               case 397:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(1025, 1029); }
                  break;
               case 400:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(1030, 1037); }
                  break;
               case 401:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(1038, 1041); }
                  break;
               case 402:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(1042, 1046); }
                  break;
               case 403:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(1047, 1052); }
                  break;
               case 404:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(1053, 1059); }
                  break;
               case 406:
               case 407:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddTwoStates(407, 408); }
                  break;
               case 408:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(409, 410); }
                  break;
               case 409:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddTwoStates(407, 408); }
                  break;
               case 410:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1060, 1064); }
                  break;
               case 414:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1065, 1072); }
                  break;
               case 415:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1073, 1076); }
                  break;
               case 416:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1077, 1081); }
                  break;
               case 417:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1082, 1087); }
                  break;
               case 418:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1088, 1094); }
                  break;
               case 419:
               case 420:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(1095, 1097); }
                  break;
               case 422:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(423, 424); }
                  break;
               case 423:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(1095, 1097); }
                  break;
               case 424:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1098, 1103); }
                  break;
               case 428:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1104, 1112); }
                  break;
               case 429:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1113, 1117); }
                  break;
               case 430:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1118, 1123); }
                  break;
               case 431:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1124, 1130); }
                  break;
               case 432:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1131, 1138); }
                  break;
               case 433:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(423, 434); }
                  break;
               case 434:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1139, 1144); }
                  break;
               case 436:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1145, 1153); }
                  break;
               case 437:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1154, 1158); }
                  break;
               case 438:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1159, 1164); }
                  break;
               case 439:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1165, 1171); }
                  break;
               case 440:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1172, 1179); }
                  break;
               case 441:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(409, 442); }
                  break;
               case 442:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1180, 1184); }
                  break;
               case 444:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1185, 1192); }
                  break;
               case 445:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1193, 1196); }
                  break;
               case 446:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1197, 1201); }
                  break;
               case 447:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1202, 1207); }
                  break;
               case 448:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1208, 1214); }
                  break;
               case 449:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1708, 1712); }
                  break;
               case 452:
               case 453:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddTwoStates(453, 454); }
                  break;
               case 454:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(455, 456); }
                  break;
               case 455:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddTwoStates(453, 454); }
                  break;
               case 456:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1215, 1219); }
                  break;
               case 460:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1220, 1227); }
                  break;
               case 461:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1228, 1231); }
                  break;
               case 462:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1232, 1236); }
                  break;
               case 463:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1237, 1242); }
                  break;
               case 464:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1243, 1249); }
                  break;
               case 465:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(455, 466); }
                  break;
               case 466:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1250, 1254); }
                  break;
               case 468:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1255, 1262); }
                  break;
               case 469:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1263, 1266); }
                  break;
               case 470:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1267, 1271); }
                  break;
               case 471:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1272, 1277); }
                  break;
               case 472:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1278, 1284); }
                  break;
               case 473:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(473, 474); }
                  break;
               case 474:
                  if (curChar == 92)
                     { jjAddStates(1787, 1788); }
                  break;
               case 475:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(473, 474); }
                  break;
               case 476:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1285, 1289); }
                  break;
               case 480:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1290, 1297); }
                  break;
               case 481:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1298, 1301); }
                  break;
               case 482:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1302, 1306); }
                  break;
               case 483:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1307, 1312); }
                  break;
               case 484:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1313, 1319); }
                  break;
               case 485:
                  if ((0x20000000200000L & l) != 0L)
                     { jjAddStates(1720, 1722); }
                  break;
               case 488:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(1326, 1328); }
                  break;
               case 492:
                  { jjAddStates(1789, 1790); }
                  break;
               case 494:
               case 495:
                  { jjCheckNAddTwoStates(495, 496); }
                  break;
               case 500:
                  if (curChar == 92)
                     { jjAddStates(1791, 1794); }
                  break;
               case 504:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(1326, 1328); }
                  break;
               case 505:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1338, 1343); }
                  break;
               case 508:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1344, 1352); }
                  break;
               case 509:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1353, 1357); }
                  break;
               case 510:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1358, 1363); }
                  break;
               case 511:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1364, 1370); }
                  break;
               case 512:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1371, 1378); }
                  break;
               case 514:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(1379, 1381); }
                  break;
               case 516:
                  if (curChar == 92)
                     { jjAddStates(1795, 1798); }
                  break;
               case 520:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(1379, 1381); }
                  break;
               case 521:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1382, 1387); }
                  break;
               case 524:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1388, 1396); }
                  break;
               case 525:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1397, 1401); }
                  break;
               case 526:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1402, 1407); }
                  break;
               case 527:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1408, 1414); }
                  break;
               case 528:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1415, 1422); }
                  break;
               case 529:
                  if ((0x7fffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(1423, 1426); }
                  break;
               case 530:
                  if (curChar == 92)
                     { jjAddStates(1799, 1800); }
                  break;
               case 531:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(1423, 1426); }
                  break;
               case 532:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1427, 1432); }
                  break;
               case 536:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1439, 1447); }
                  break;
               case 537:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1448, 1452); }
                  break;
               case 538:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1453, 1458); }
                  break;
               case 539:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1459, 1465); }
                  break;
               case 540:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1466, 1473); }
                  break;
               case 543:
                  { jjAddStates(1801, 1802); }
                  break;
               case 545:
               case 546:
                  { jjCheckNAddTwoStates(546, 547); }
                  break;
               case 550:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 486;
                  break;
               case 551:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 550;
                  break;
               case 559:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 96)
                     kind = 96;
                  { jjAddStates(1505, 1510); }
                  break;
               case 560:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 561;
                  break;
               case 561:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 562;
                  break;
               case 562:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 563;
                  break;
               case 563:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(564); }
                  break;
               case 564:
                  if ((0x7e0000007eL & l) != 0L && kind > 96)
                     kind = 96;
                  break;
               case 565:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 566;
                  break;
               case 566:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 567;
                  break;
               case 567:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 568;
                  break;
               case 568:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 96)
                     kind = 96;
                  jjstateSet[jjnewStateCnt++] = 555;
                  break;
               case 569:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 570;
                  break;
               case 570:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 571;
                  break;
               case 571:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 96)
                     kind = 96;
                  jjstateSet[jjnewStateCnt++] = 572;
                  break;
               case 573:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 574;
                  break;
               case 574:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 96)
                     kind = 96;
                  jjstateSet[jjnewStateCnt++] = 575;
                  break;
               case 577:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 96)
                     kind = 96;
                  jjstateSet[jjnewStateCnt++] = 578;
                  break;
               case 586:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddTwoStates(587, 593); }
                  break;
               case 588:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 96)
                     kind = 96;
                  jjstateSet[jjnewStateCnt++] = 589;
                  break;
               case 589:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 96)
                     kind = 96;
                  { jjCheckNAddStates(1521, 1524); }
                  break;
               case 590:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 96)
                     kind = 96;
                  { jjCheckNAdd(564); }
                  break;
               case 591:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 96)
                     kind = 96;
                  { jjCheckNAddTwoStates(564, 590); }
                  break;
               case 592:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 96)
                     kind = 96;
                  { jjCheckNAddStates(1525, 1527); }
                  break;
               case 593:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1528, 1532); }
                  break;
               case 594:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(587); }
                  break;
               case 595:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddTwoStates(594, 587); }
                  break;
               case 596:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1533, 1535); }
                  break;
               case 597:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1536, 1539); }
                  break;
               case 600:
                  if ((0x200000002000L & l) != 0L && kind > 55)
                     kind = 55;
                  break;
               case 601:
               case 609:
                  if ((0x2000000020L & l) != 0L)
                     { jjCheckNAdd(600); }
                  break;
               case 603:
                  if ((0x100000001000000L & l) != 0L && kind > 55)
                     kind = 55;
                  break;
               case 604:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 603;
                  break;
               case 606:
                  if ((0x10000000100L & l) != 0L && kind > 55)
                     kind = 55;
                  break;
               case 607:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 606;
                  break;
               case 610:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 609;
                  break;
               case 612:
                  if ((0x80000000800000L & l) != 0L && kind > 56)
                     kind = 56;
                  break;
               case 613:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 612;
                  break;
               case 615:
                  if ((0x10000000100L & l) != 0L && kind > 56)
                     kind = 56;
                  break;
               case 616:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 615;
                  break;
               case 618:
                  if ((0x400000004000L & l) != 0L && kind > 56)
                     kind = 56;
                  break;
               case 619:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 618;
                  break;
               case 620:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 619;
                  break;
               case 621:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 620;
                  break;
               case 623:
                  if ((0x100000001000000L & l) != 0L && kind > 56)
                     kind = 56;
                  break;
               case 624:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 623;
                  break;
               case 625:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 624;
                  break;
               case 626:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 625;
                  break;
               case 628:
                  if ((0x200000002000L & l) != 0L && kind > 57)
                     kind = 57;
                  break;
               case 629:
                  if ((0x800000008L & l) != 0L)
                     { jjCheckNAdd(628); }
                  break;
               case 631:
                  if ((0x200000002000L & l) != 0L)
                     { jjCheckNAdd(628); }
                  break;
               case 633:
                  if ((0x2000000020000L & l) != 0L && kind > 57)
                     kind = 57;
                  break;
               case 635:
                  if ((0x400000004000L & l) != 0L && kind > 57)
                     kind = 57;
                  break;
               case 636:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 635;
                  break;
               case 638:
                  if ((0x10000000100000L & l) != 0L && kind > 57)
                     kind = 57;
                  break;
               case 639:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 638;
                  break;
               case 641:
                  if ((0x800000008L & l) != 0L && kind > 57)
                     kind = 57;
                  break;
               case 642:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 641;
                  break;
               case 644:
                  if ((0x100000001000000L & l) != 0L && kind > 57)
                     kind = 57;
                  break;
               case 645:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 644;
                  break;
               case 647:
                  if ((0x4000000040000L & l) != 0L && kind > 58)
                     kind = 58;
                  break;
               case 648:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 647;
                  break;
               case 650:
                  if ((0x8000000080L & l) != 0L && kind > 59)
                     kind = 59;
                  break;
               case 651:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 650;
                  break;
               case 652:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 651;
                  break;
               case 653:
                  if ((0x1000000010L & l) != 0L && kind > 59)
                     kind = 59;
                  break;
               case 654:
               case 657:
                  if ((0x200000002L & l) != 0L)
                     { jjCheckNAdd(653); }
                  break;
               case 655:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 654;
                  break;
               case 656:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 655;
                  break;
               case 658:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 657;
                  break;
               case 659:
                  if ((0x400000004000L & l) != 0L && kind > 59)
                     kind = 59;
                  break;
               case 660:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 659;
                  break;
               case 661:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 660;
                  break;
               case 662:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 661;
                  break;
               case 664:
                  if ((0x400000004L & l) != 0L && kind > 60)
                     kind = 60;
                  break;
               case 665:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 664;
                  break;
               case 667:
                  if ((0x10000000100000L & l) != 0L && kind > 61)
                     kind = 61;
                  break;
               case 668:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 667;
                  break;
               case 670:
               case 672:
                  if ((0x8000000080000L & l) != 0L && kind > 62)
                     kind = 62;
                  break;
               case 671:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 670;
                  break;
               case 674:
                  if ((0x400000004000000L & l) != 0L && kind > 63)
                     kind = 63;
                  break;
               case 675:
               case 676:
                  if ((0x10000000100L & l) != 0L)
                     { jjCheckNAdd(674); }
                  break;
               case 677:
                  if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 676;
                  break;
               case 679:
                  if ((0x1000000010L & l) != 0L)
                     { jjAddStates(1803, 1805); }
                  break;
               case 680:
                  if ((0x20000000200L & l) != 0L && kind > 64)
                     kind = 64;
                  break;
               case 681:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 680;
                  break;
               case 682:
                  if ((0x200000002000L & l) != 0L && kind > 64)
                     kind = 64;
                  break;
               case 683:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 682;
                  break;
               case 684:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 683;
                  break;
               case 685:
                  if ((0x100000001000000L & l) != 0L && kind > 64)
                     kind = 64;
                  break;
               case 686:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 685;
                  break;
               case 687:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 686;
                  break;
               case 689:
               case 690:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddTwoStates(690, 691); }
                  break;
               case 691:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(692, 693); }
                  break;
               case 692:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddTwoStates(690, 691); }
                  break;
               case 693:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddStates(1554, 1558); }
                  break;
               case 697:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddStates(1559, 1566); }
                  break;
               case 698:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddStates(1567, 1570); }
                  break;
               case 699:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddStates(1571, 1575); }
                  break;
               case 700:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddStates(1576, 1581); }
                  break;
               case 701:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddStates(1582, 1588); }
                  break;
               case 702:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(692, 703); }
                  break;
               case 703:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddStates(1589, 1593); }
                  break;
               case 705:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddStates(1594, 1601); }
                  break;
               case 706:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddStates(1602, 1605); }
                  break;
               case 707:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddStates(1606, 1610); }
                  break;
               case 708:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddStates(1611, 1616); }
                  break;
               case 709:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddStates(1617, 1623); }
                  break;
               case 714:
               case 715:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddTwoStates(715, 716); }
                  break;
               case 716:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(717, 718); }
                  break;
               case 717:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddTwoStates(715, 716); }
                  break;
               case 718:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1624, 1628); }
                  break;
               case 722:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1629, 1636); }
                  break;
               case 723:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1637, 1640); }
                  break;
               case 724:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1641, 1645); }
                  break;
               case 725:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1646, 1651); }
                  break;
               case 726:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1652, 1658); }
                  break;
               case 727:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(717, 728); }
                  break;
               case 728:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1659, 1663); }
                  break;
               case 730:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1664, 1671); }
                  break;
               case 731:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1672, 1675); }
                  break;
               case 732:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1676, 1680); }
                  break;
               case 733:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1681, 1686); }
                  break;
               case 734:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1687, 1693); }
                  break;
               case 735:
                  if (curChar == 92)
                     { jjCheckNAddStates(1713, 1716); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 7:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1708, 1712); }
                  break;
               case 1:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1723, 1724); }
                  break;
               case 3:
               case 4:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(4, 5); }
                  break;
               case 21:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(183, 184); }
                  break;
               case 59:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1725, 1726); }
                  break;
               case 61:
               case 62:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(62, 63); }
                  break;
               case 77:
               case 78:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddTwoStates(78, 79); }
                  break;
               case 80:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddTwoStates(78, 79); }
                  break;
               case 102:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1731, 1732); }
                  break;
               case 104:
               case 105:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(105, 106); }
                  break;
               case 110:
               case 111:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(277, 282); }
                  break;
               case 114:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1733, 1734); }
                  break;
               case 116:
               case 117:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(117, 118); }
                  break;
               case 122:
               case 123:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(295, 297); }
                  break;
               case 126:
               case 127:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(303, 308); }
                  break;
               case 130:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1735, 1736); }
                  break;
               case 132:
               case 133:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(133, 134); }
                  break;
               case 139:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(295, 297); }
                  break;
               case 158:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(303, 308); }
                  break;
               case 177:
               case 183:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(518, 520); }
                  break;
               case 193:
               case 199:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(567, 569); }
                  break;
               case 209:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(277, 282); }
                  break;
               case 237:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1753, 1754); }
                  break;
               case 239:
               case 240:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(240, 241); }
                  break;
               case 245:
               case 246:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(741, 744); }
                  break;
               case 249:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1755, 1756); }
                  break;
               case 251:
               case 252:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(252, 253); }
                  break;
               case 258:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(741, 744); }
                  break;
               case 279:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1757, 1758); }
                  break;
               case 281:
               case 282:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(282, 283); }
                  break;
               case 288:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1759, 1760); }
                  break;
               case 290:
               case 291:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(291, 292); }
                  break;
               case 299:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1761, 1762); }
                  break;
               case 301:
               case 302:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(302, 303); }
                  break;
               case 308:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1763, 1764); }
                  break;
               case 310:
               case 311:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(311, 312); }
                  break;
               case 317:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1765, 1766); }
                  break;
               case 319:
               case 320:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(320, 321); }
                  break;
               case 326:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1767, 1768); }
                  break;
               case 328:
               case 329:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(329, 330); }
                  break;
               case 335:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1769, 1770); }
                  break;
               case 337:
               case 338:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(338, 339); }
                  break;
               case 346:
               case 352:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(902, 904); }
                  break;
               case 361:
               case 366:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(361, 362); }
                  break;
               case 376:
               case 382:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(981, 983); }
                  break;
               case 391:
               case 396:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(391, 392); }
                  break;
               case 406:
               case 407:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddTwoStates(407, 408); }
                  break;
               case 409:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddTwoStates(407, 408); }
                  break;
               case 419:
               case 420:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1095, 1097); }
                  break;
               case 423:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1095, 1097); }
                  break;
               case 452:
               case 453:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddTwoStates(453, 454); }
                  break;
               case 455:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddTwoStates(453, 454); }
                  break;
               case 473:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(473, 474); }
                  break;
               case 475:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(473, 474); }
                  break;
               case 488:
               case 504:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1326, 1328); }
                  break;
               case 492:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1789, 1790); }
                  break;
               case 494:
               case 495:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(495, 496); }
                  break;
               case 514:
               case 520:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1379, 1381); }
                  break;
               case 529:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1423, 1426); }
                  break;
               case 531:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1423, 1426); }
                  break;
               case 543:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1801, 1802); }
                  break;
               case 545:
               case 546:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(546, 547); }
                  break;
               case 689:
               case 690:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddTwoStates(690, 691); }
                  break;
               case 692:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddTwoStates(690, 691); }
                  break;
               case 714:
               case 715:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddTwoStates(715, 716); }
                  break;
               case 717:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddTwoStates(715, 716); }
                  break;
               default : if (i1 == 0 || l1 == 0 || i2 == 0 ||  l2 == 0) break; else break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 812 - (jjnewStateCnt = startsAt)))
         break;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { break; }
   }
   if (jjmatchedPos > strPos)
      return curPos;

   int toRet = Math.max(curPos, seenUpto);

   if (curPos < toRet)
      for (i = toRet - Math.min(curPos, seenUpto); i-- > 0; )
         try { curChar = input_stream.readChar(); }
         catch(java.io.IOException e) { throw new Error("Internal Error : Please send a bug report."); }

   if (jjmatchedPos < strPos)
   {
      jjmatchedKind = strKind;
      jjmatchedPos = strPos;
   }
   else if (jjmatchedPos == strPos && jjmatchedKind > strKind)
      jjmatchedKind = strKind;

   return toRet;
}

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, "\74\41\55\55", "\55\55\76", 
null, "\174\75", null, null, "\55", null, null, null, null, null, null, null, null, 
null, null, null, "\175", "\136\75", "\44\75", "\52\75", "\75", "\73", "\57", 
"\133", "\135", "\52", "\56", "\51", "\50", "\72", null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, "\72\72", null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, "\174", "\45", };
protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}
static final int[] jjnextStates = {
   737, 738, 739, 601, 740, 741, 742, 604, 743, 744, 745, 607, 746, 747, 748, 610, 
   749, 750, 751, 613, 752, 753, 754, 616, 755, 756, 757, 621, 758, 759, 760, 626, 
   761, 762, 763, 629, 764, 765, 766, 631, 767, 768, 769, 633, 770, 771, 772, 636, 
   773, 774, 775, 639, 776, 777, 778, 642, 779, 780, 781, 645, 782, 783, 784, 648, 
   785, 786, 787, 652, 656, 658, 662, 788, 789, 790, 665, 791, 792, 793, 668, 794, 
   795, 796, 671, 672, 797, 798, 799, 675, 677, 800, 801, 802, 803, 804, 805, 689, 
   806, 807, 808, 711, 809, 810, 811, 702, 679, 285, 286, 294, 295, 296, 305, 306, 
   8, 314, 315, 9, 323, 324, 10, 332, 333, 11, 341, 342, 343, 599, 602, 605, 
   608, 611, 614, 617, 622, 627, 630, 632, 634, 637, 640, 643, 646, 649, 663, 666, 
   669, 673, 678, 688, 710, 712, 713, 714, 727, 451, 452, 473, 474, 465, 406, 419, 
   433, 441, 376, 377, 391, 392, 378, 346, 347, 361, 362, 348, 233, 100, 109, 110, 
   219, 2, 3, 6, 3, 5, 6, 21, 22, 65, 74, 57, 60, 61, 64, 61, 
   63, 64, 77, 90, 78, 83, 84, 79, 85, 78, 86, 83, 84, 79, 87, 88, 
   89, 78, 83, 84, 79, 78, 86, 83, 84, 79, 78, 86, 83, 84, 79, 87, 
   78, 86, 83, 84, 79, 87, 88, 92, 84, 78, 79, 93, 94, 92, 84, 78, 
   79, 95, 96, 97, 92, 84, 78, 79, 94, 92, 84, 78, 79, 94, 92, 84, 
   78, 79, 95, 94, 92, 84, 78, 79, 95, 96, 108, 109, 110, 219, 100, 103, 
   104, 107, 104, 106, 107, 111, 112, 121, 122, 137, 208, 120, 121, 122, 137, 138, 
   112, 115, 116, 119, 116, 118, 119, 123, 124, 140, 125, 126, 176, 192, 168, 121, 
   122, 127, 128, 137, 157, 121, 122, 136, 137, 138, 128, 131, 132, 135, 132, 134, 
   135, 123, 143, 144, 124, 140, 145, 123, 146, 143, 144, 124, 140, 147, 148, 149, 
   123, 143, 144, 124, 140, 123, 146, 143, 144, 124, 140, 123, 146, 143, 144, 124, 
   140, 147, 123, 146, 143, 144, 124, 140, 147, 148, 151, 144, 123, 124, 140, 152, 
   153, 151, 144, 123, 124, 140, 154, 155, 156, 151, 144, 123, 124, 140, 153, 151, 
   144, 123, 124, 140, 153, 151, 144, 123, 124, 140, 154, 153, 151, 144, 123, 124, 
   140, 154, 155, 121, 122, 127, 161, 137, 157, 162, 163, 121, 122, 127, 128, 136, 
   137, 138, 128, 157, 121, 122, 127, 164, 161, 137, 157, 162, 165, 166, 167, 121, 
   122, 127, 161, 137, 157, 162, 121, 122, 127, 164, 161, 137, 157, 162, 121, 122, 
   127, 164, 161, 137, 157, 162, 165, 121, 122, 127, 164, 161, 137, 157, 162, 165, 
   166, 121, 122, 170, 127, 137, 157, 162, 171, 121, 122, 172, 170, 127, 137, 157, 
   162, 173, 174, 175, 121, 122, 170, 127, 137, 157, 162, 121, 122, 172, 170, 127, 
   137, 157, 162, 121, 122, 172, 170, 127, 137, 157, 162, 173, 121, 122, 172, 170, 
   127, 137, 157, 162, 173, 174, 177, 178, 179, 121, 122, 128, 137, 138, 177, 185, 
   186, 178, 179, 187, 177, 188, 185, 186, 178, 179, 189, 190, 191, 177, 185, 186, 
   178, 179, 177, 188, 185, 186, 178, 179, 177, 188, 185, 186, 178, 179, 189, 177, 
   188, 185, 186, 178, 179, 189, 190, 193, 194, 195, 193, 201, 202, 194, 195, 203, 
   193, 204, 201, 202, 194, 195, 205, 206, 207, 193, 201, 202, 194, 195, 193, 204, 
   201, 202, 194, 195, 193, 204, 201, 202, 194, 195, 205, 193, 204, 201, 202, 194, 
   195, 205, 206, 111, 212, 121, 122, 137, 208, 213, 214, 111, 112, 120, 121, 122, 
   137, 138, 112, 208, 111, 215, 212, 121, 122, 137, 208, 213, 216, 217, 218, 111, 
   212, 121, 122, 137, 208, 213, 111, 215, 212, 121, 122, 137, 208, 213, 111, 215, 
   212, 121, 122, 137, 208, 213, 216, 111, 215, 212, 121, 122, 137, 208, 213, 216, 
   217, 221, 111, 121, 122, 137, 208, 213, 222, 223, 221, 111, 121, 122, 137, 208, 
   213, 224, 225, 226, 221, 111, 121, 122, 137, 208, 213, 223, 221, 111, 121, 122, 
   137, 208, 213, 223, 221, 111, 121, 122, 137, 208, 213, 224, 223, 221, 111, 121, 
   122, 137, 208, 213, 224, 225, 235, 244, 245, 268, 243, 244, 245, 268, 235, 238, 
   239, 242, 239, 241, 242, 246, 247, 256, 257, 255, 256, 247, 250, 251, 254, 251, 
   253, 254, 246, 261, 256, 257, 262, 263, 246, 247, 255, 256, 247, 257, 246, 264, 
   261, 256, 257, 262, 265, 266, 267, 246, 261, 256, 257, 262, 246, 264, 261, 256, 
   257, 262, 246, 264, 261, 256, 257, 262, 265, 246, 264, 261, 256, 257, 262, 265, 
   266, 270, 246, 256, 257, 262, 271, 272, 270, 246, 256, 257, 262, 273, 274, 275, 
   270, 246, 256, 257, 262, 272, 270, 246, 256, 257, 262, 272, 270, 246, 256, 257, 
   262, 273, 272, 270, 246, 256, 257, 262, 273, 274, 280, 281, 284, 281, 283, 284, 
   289, 290, 293, 290, 292, 293, 294, 295, 296, 300, 301, 304, 301, 303, 304, 305, 
   306, 8, 309, 310, 313, 310, 312, 313, 314, 315, 9, 318, 319, 322, 319, 321, 
   322, 323, 324, 10, 327, 328, 331, 328, 330, 331, 332, 333, 11, 336, 337, 340, 
   337, 339, 340, 341, 342, 343, 346, 347, 348, 346, 354, 355, 347, 348, 356, 346, 
   357, 354, 355, 347, 348, 358, 359, 360, 346, 354, 355, 347, 348, 346, 357, 354, 
   355, 347, 348, 346, 357, 354, 355, 347, 348, 358, 346, 357, 354, 355, 347, 348, 
   358, 359, 361, 368, 369, 362, 370, 361, 371, 368, 369, 362, 372, 373, 374, 361, 
   368, 369, 362, 361, 371, 368, 369, 362, 361, 371, 368, 369, 362, 372, 361, 371, 
   368, 369, 362, 372, 373, 376, 377, 378, 376, 384, 385, 377, 378, 386, 376, 387, 
   384, 385, 377, 378, 388, 389, 390, 376, 384, 385, 377, 378, 376, 387, 384, 385, 
   377, 378, 376, 387, 384, 385, 377, 378, 388, 376, 387, 384, 385, 377, 378, 388, 
   389, 391, 398, 399, 392, 400, 391, 401, 398, 399, 392, 402, 403, 404, 391, 398, 
   399, 392, 391, 401, 398, 399, 392, 391, 401, 398, 399, 392, 402, 391, 401, 398, 
   399, 392, 402, 403, 407, 412, 413, 408, 414, 407, 415, 412, 413, 408, 416, 417, 
   418, 407, 412, 413, 408, 407, 415, 412, 413, 408, 407, 415, 412, 413, 408, 416, 
   407, 415, 412, 413, 408, 416, 417, 420, 421, 422, 420, 426, 427, 421, 422, 428, 
   420, 429, 426, 427, 421, 422, 430, 431, 432, 420, 426, 427, 421, 422, 420, 429, 
   426, 427, 421, 422, 420, 429, 426, 427, 421, 422, 430, 420, 429, 426, 427, 421, 
   422, 430, 431, 435, 427, 420, 421, 422, 436, 437, 435, 427, 420, 421, 422, 438, 
   439, 440, 435, 427, 420, 421, 422, 437, 435, 427, 420, 421, 422, 437, 435, 427, 
   420, 421, 422, 438, 437, 435, 427, 420, 421, 422, 438, 439, 443, 413, 407, 408, 
   444, 445, 443, 413, 407, 408, 446, 447, 448, 443, 413, 407, 408, 445, 443, 413, 
   407, 408, 445, 443, 413, 407, 408, 446, 445, 443, 413, 407, 408, 446, 447, 453, 
   458, 459, 454, 460, 453, 461, 458, 459, 454, 462, 463, 464, 453, 458, 459, 454, 
   453, 461, 458, 459, 454, 453, 461, 458, 459, 454, 462, 453, 461, 458, 459, 454, 
   462, 463, 467, 459, 453, 454, 468, 469, 467, 459, 453, 454, 470, 471, 472, 467, 
   459, 453, 454, 469, 467, 459, 453, 454, 469, 467, 459, 453, 454, 470, 469, 467, 
   459, 453, 454, 470, 471, 473, 478, 479, 474, 480, 473, 481, 478, 479, 474, 482, 
   483, 484, 473, 478, 479, 474, 473, 481, 478, 479, 474, 473, 481, 478, 479, 474, 
   482, 473, 481, 478, 479, 474, 482, 483, 487, 513, 529, 499, 530, 541, 488, 489, 
   500, 498, 499, 490, 493, 494, 497, 494, 496, 497, 488, 506, 507, 489, 500, 508, 
   488, 509, 506, 507, 489, 500, 510, 511, 512, 488, 506, 507, 489, 500, 488, 509, 
   506, 507, 489, 500, 488, 509, 506, 507, 489, 500, 510, 488, 509, 506, 507, 489, 
   500, 510, 511, 514, 515, 516, 514, 522, 523, 515, 516, 524, 514, 525, 522, 523, 
   515, 516, 526, 527, 528, 514, 522, 523, 515, 516, 514, 525, 522, 523, 515, 516, 
   514, 525, 522, 523, 515, 516, 526, 514, 525, 522, 523, 515, 516, 526, 527, 529, 
   490, 499, 530, 529, 534, 499, 530, 535, 536, 529, 490, 498, 499, 490, 530, 529, 
   537, 534, 499, 530, 535, 538, 539, 540, 529, 534, 499, 530, 535, 529, 537, 534, 
   499, 530, 535, 529, 537, 534, 499, 530, 535, 538, 529, 537, 534, 499, 530, 535, 
   538, 539, 549, 487, 513, 529, 498, 499, 490, 530, 541, 544, 545, 548, 545, 547, 
   548, 549, 487, 513, 529, 499, 530, 541, 553, 559, 555, 556, 557, 558, 555, 556, 
   557, 560, 565, 569, 573, 577, 581, 555, 579, 580, 555, 582, 583, 584, 555, 582, 
   583, 564, 590, 591, 592, 564, 590, 591, 594, 587, 595, 596, 597, 594, 587, 595, 
   594, 587, 595, 596, 649, 652, 656, 658, 662, 669, 671, 672, 673, 675, 677, 688, 
   689, 702, 690, 695, 696, 691, 697, 690, 698, 695, 696, 691, 699, 700, 701, 690, 
   695, 696, 691, 690, 698, 695, 696, 691, 690, 698, 695, 696, 691, 699, 690, 698, 
   695, 696, 691, 699, 700, 704, 696, 690, 691, 705, 706, 704, 696, 690, 691, 707, 
   708, 709, 704, 696, 690, 691, 706, 704, 696, 690, 691, 706, 704, 696, 690, 691, 
   707, 706, 704, 696, 690, 691, 707, 708, 715, 720, 721, 716, 722, 715, 723, 720, 
   721, 716, 724, 725, 726, 715, 720, 721, 716, 715, 723, 720, 721, 716, 715, 723, 
   720, 721, 716, 724, 715, 723, 720, 721, 716, 724, 725, 729, 721, 715, 716, 730, 
   731, 729, 721, 715, 716, 732, 733, 734, 729, 721, 715, 716, 731, 729, 721, 715, 
   716, 731, 729, 721, 715, 716, 732, 731, 729, 721, 715, 716, 732, 733, 785, 652, 
   656, 658, 662, 794, 671, 672, 797, 675, 677, 803, 689, 702, 407, 420, 421, 422, 
   408, 409, 442, 423, 434, 76, 77, 90, 551, 552, 585, 1, 2, 59, 60, 100, 
   109, 110, 219, 102, 103, 114, 115, 130, 131, 139, 150, 158, 159, 180, 182, 183, 
   184, 196, 198, 199, 200, 209, 210, 139, 150, 237, 238, 249, 250, 279, 280, 288, 
   289, 299, 300, 308, 309, 317, 318, 326, 327, 335, 336, 349, 351, 352, 353, 363, 
   365, 366, 367, 379, 381, 382, 383, 393, 395, 396, 397, 475, 476, 492, 493, 501, 
   503, 504, 505, 517, 519, 520, 521, 531, 532, 543, 544, 681, 684, 687, 
};
private static final boolean jjCanMove_0(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec2[i2] & l2) != 0L);
      default :
         if ((jjbitVec0[i1] & l1) != 0L)
            return true;
         return false;
   }
}
private static final boolean jjCanMove_1(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec2[i2] & l2) != 0L);
      default :
         return false;
   }
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken() 
{
  Token specialToken = null;
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(Exception e)
   {
      jjmatchedKind = 0;
      jjmatchedPos = -1;
      matchedToken = jjFillToken();
      matchedToken.specialToken = specialToken;
      return matchedToken;
   }

   jjmatchedKind = 0x7fffffff;
   jjmatchedPos = 0;
   curPos = jjMoveStringLiteralDfa0_0();
   if (jjmatchedKind != 0x7fffffff)
   {
      if (jjmatchedPos + 1 < curPos)
         input_stream.backup(curPos - jjmatchedPos - 1);
      if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
      {
         matchedToken = jjFillToken();
         matchedToken.specialToken = specialToken;
         return matchedToken;
      }
      else
      {
         if ((jjtoSpecial[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
         {
            matchedToken = jjFillToken();
            if (specialToken == null)
               specialToken = matchedToken;
            else
            {
               matchedToken.specialToken = specialToken;
               specialToken = (specialToken.next = matchedToken);
            }
         }
         continue EOFLoop;
      }
   }
   int error_line = input_stream.getEndLine();
   int error_column = input_stream.getEndColumn();
   String error_after = null;
   boolean EOFSeen = false;
   try { input_stream.readChar(); input_stream.backup(1); }
   catch (java.io.IOException e1) {
      EOFSeen = true;
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
      if (curChar == '\n' || curChar == '\r') {
         error_line++;
         error_column = 0;
      }
      else
         error_column++;
   }
   if (!EOFSeen) {
      input_stream.backup(1);
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
   }
   throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
  }
}

void SkipLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      default :
         break;
   }
}
void MoreLexicalActions()
{
   jjimageLen += (lengthOfMatch = jjmatchedPos + 1);
   switch(jjmatchedKind)
   {
      default :
         break;
   }
}
void TokenLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      default :
         break;
   }
}
private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

    /** Constructor. */
    public CssParserTokenManager(SimpleCharStream stream){

      if (SimpleCharStream.staticFlag)
            throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");

    input_stream = stream;
  }

  /** Constructor. */
  public CssParserTokenManager (SimpleCharStream stream, int lexState){
    ReInit(stream);
    SwitchTo(lexState);
  }

  /** Reinitialise parser. */
  
  public void ReInit(SimpleCharStream stream)
  {


    jjmatchedPos =
    jjnewStateCnt =
    0;
    curLexState = defaultLexState;
    input_stream = stream;
    ReInitRounds();
  }

  private void ReInitRounds()
  {
    int i;
    jjround = 0x80000001;
    for (i = 812; i-- > 0;)
      jjrounds[i] = 0x80000000;
  }

  /** Reinitialise parser. */
  public void ReInit(SimpleCharStream stream, int lexState)
  
  {
    ReInit(stream);
    SwitchTo(lexState);
  }

  /** Switch to specified lex state. */
  public void SwitchTo(int lexState)
  {
    if (lexState >= 1 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
    else
      curLexState = lexState;
  }


/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
};

/** Lex State array. */
public static final int[] jjnewLexState = {
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, 
};
static final long[] jjtoToken = {
   0xffffffffffe00001L, 0x7ff007fffffL, 
};
static final long[] jjtoSkip = {
   0x2L, 0x0L, 
};
static final long[] jjtoSpecial = {
   0x2L, 0x0L, 
};
static final long[] jjtoMore = {
   0x0L, 0x0L, 
};
    protected SimpleCharStream  input_stream;

    private final int[] jjrounds = new int[812];
    private final int[] jjstateSet = new int[2 * 812];
    private final StringBuilder jjimage = new StringBuilder();
    private StringBuilder image = jjimage;
    private int jjimageLen;
    private int lengthOfMatch;
    protected int curChar;
}
