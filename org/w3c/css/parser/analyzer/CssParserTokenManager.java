/* CssParserTokenManager.java */
/* Generated By:JavaCC: Do not edit this line. CssParserTokenManager.java */
package org.w3c.css.parser.analyzer;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.Iterator;
import java.net.URL;
import java.math.BigDecimal;
import org.w3c.css.values.CssValue;
import org.w3c.css.values.CssOperator;
import org.w3c.css.values.CssAngle;
import org.w3c.css.values.CssCheckableValue;
import org.w3c.css.values.CssExpression;
import org.w3c.css.values.CssString;
import org.w3c.css.values.CssURL;
import org.w3c.css.values.CssLength;
import org.w3c.css.values.CssNumber;
import org.w3c.css.values.CssAttr;
import org.w3c.css.values.CssBracket;
import org.w3c.css.values.CssCalc;
import org.w3c.css.values.CssColor;
import org.w3c.css.values.CssFlexibleLength;
import org.w3c.css.values.CssFrequency;
import org.w3c.css.values.CssHashIdent;
import org.w3c.css.values.CssIdent;
import org.w3c.css.values.CssImage;
import org.w3c.css.values.CssPercentage;
import org.w3c.css.values.CssTime;
import org.w3c.css.values.CssSwitch;
import org.w3c.css.values.CssFunction;
import org.w3c.css.values.CssUnicodeRange;
import org.w3c.css.values.CssResolution;
import org.w3c.css.values.CssRatio;
import org.w3c.css.values.CssSemitone;
import org.w3c.css.values.CssTypes;
import org.w3c.css.values.CssVolume;
import org.w3c.css.properties.css.CssProperty;
import org.w3c.css.parser.Frame;
import org.w3c.css.parser.CssError;
import org.w3c.css.parser.CssErrorToken;
import org.w3c.css.parser.CssSelectors;
import org.w3c.css.parser.CssParseException;
import org.w3c.css.parser.AtRule;
import org.w3c.css.parser.AtRuleCounterStyle;
import org.w3c.css.media.AtRuleMedia;
import org.w3c.css.media.MediaFeature;
import org.w3c.css.parser.AtRuleFontFace;
import org.w3c.css.parser.AtRuleKeyframes;
import org.w3c.css.parser.AtRulePage;
import org.w3c.css.parser.AtRulePreference;
import org.w3c.css.parser.AtRulePhoneticAlphabet;
import org.w3c.css.properties.svg.AtRuleColorProfile;
import org.w3c.css.util.ApplContext;
import org.w3c.css.util.CssProfile;
import org.w3c.css.util.CssVersion;
import org.w3c.css.util.InvalidParamException;
import org.w3c.css.util.WarningParamException;
import org.w3c.css.util.Util;
import org.w3c.css.util.Messages;
import org.w3c.css.selectors.AdjacentSiblingSelector;
import org.w3c.css.selectors.AttributeSelector;
import org.w3c.css.selectors.ChildSelector;
import org.w3c.css.selectors.ClassSelector;
import org.w3c.css.selectors.DescendantSelector;
import org.w3c.css.selectors.GeneralSiblingSelector;
import org.w3c.css.selectors.IdSelector;
import org.w3c.css.selectors.TypeSelector;
import org.w3c.css.selectors.UniversalSelector;
import org.w3c.css.selectors.attributes.AttributeAny;
import org.w3c.css.selectors.attributes.AttributeBegin;
import org.w3c.css.selectors.attributes.AttributeExact;
import org.w3c.css.selectors.attributes.AttributeOneOf;
import org.w3c.css.selectors.attributes.AttributeStart;
import org.w3c.css.selectors.attributes.AttributeSubstr;
import org.w3c.css.selectors.attributes.AttributeSuffix;

/** Token Manager. */
public class CssParserTokenManager implements CssParserConstants {

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_0(){
   switch(curChar)
   {
      case 36:
         return jjMoveStringLiteralDfa1_0(0x20000000000L, 0x0L);
      case 37:
         jjmatchedKind = 106;
         return jjMoveNfa_0(7, 0);
      case 40:
         jjmatchedKind = 51;
         return jjMoveNfa_0(7, 0);
      case 41:
         jjmatchedKind = 50;
         return jjMoveNfa_0(7, 0);
      case 42:
         jjmatchedKind = 48;
         return jjMoveStringLiteralDfa1_0(0x40000000000L, 0x0L);
      case 45:
         jjmatchedKind = 28;
         return jjMoveStringLiteralDfa1_0(0x800000L, 0x0L);
      case 46:
         jjmatchedKind = 49;
         return jjMoveNfa_0(7, 0);
      case 47:
         jjmatchedKind = 45;
         return jjMoveNfa_0(7, 0);
      case 58:
         jjmatchedKind = 52;
         return jjMoveStringLiteralDfa1_0(0x0L, 0x800000020L);
      case 59:
         jjmatchedKind = 44;
         return jjMoveNfa_0(7, 0);
      case 60:
         return jjMoveStringLiteralDfa1_0(0x400000L, 0x0L);
      case 61:
         jjmatchedKind = 43;
         return jjMoveNfa_0(7, 0);
      case 64:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x3fffc0L);
      case 91:
         jjmatchedKind = 46;
         return jjMoveNfa_0(7, 0);
      case 93:
         jjmatchedKind = 47;
         return jjMoveNfa_0(7, 0);
      case 94:
         return jjMoveStringLiteralDfa1_0(0x10000000000L, 0x0L);
      case 65:
      case 97:
         return jjMoveStringLiteralDfa1_0(0x100000000L, 0x2000000000L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x1000000000L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x400000000L);
      case 124:
         jjmatchedKind = 105;
         return jjMoveStringLiteralDfa1_0(0x2000000L, 0x0L);
      case 125:
         jjmatchedKind = 39;
         return jjMoveNfa_0(7, 0);
      default :
         return jjMoveNfa_0(7, 0);
   }
}
private int jjMoveStringLiteralDfa1_0(long active0, long active1){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 0);
   }
   switch(curChar)
   {
      case 33:
         return jjMoveStringLiteralDfa2_0(active0, 0x400000L, active1, 0L);
      case 45:
         return jjMoveStringLiteralDfa2_0(active0, 0x800000L, active1, 0L);
      case 58:
         if ((active1 & 0x20L) != 0L)
         {
            jjmatchedKind = 69;
            jjmatchedPos = 1;
         }
         break;
      case 61:
         if ((active0 & 0x2000000L) != 0L)
         {
            jjmatchedKind = 25;
            jjmatchedPos = 1;
         }
         else if ((active0 & 0x10000000000L) != 0L)
         {
            jjmatchedKind = 40;
            jjmatchedPos = 1;
         }
         else if ((active0 & 0x20000000000L) != 0L)
         {
            jjmatchedKind = 41;
            jjmatchedPos = 1;
         }
         else if ((active0 & 0x40000000000L) != 0L)
         {
            jjmatchedKind = 42;
            jjmatchedPos = 1;
         }
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x1400000000L);
      case 66:
      case 98:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x20000L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x184040L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x800L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x80L);
      case 75:
      case 107:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x1000L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x40000L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x200L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa2_0(active0, 0x100000000L, active1, 0x800000100L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x202400L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x10000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x2000008000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 1);
}
private int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 1);
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa3_0(active0, 0x400000L, active1, 0L);
      case 62:
         if ((active0 & 0x800000L) != 0L)
         {
            jjmatchedKind = 23;
            jjmatchedPos = 2;
         }
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x500L);
      case 68:
      case 100:
         if ((active0 & 0x100000000L) != 0L)
         {
            jjmatchedKind = 32;
            jjmatchedPos = 2;
         }
         break;
      case 69:
      case 101:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x41200L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x200040L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x10000L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x1000000000L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x80L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x400000000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x8001ac800L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x2000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x2000000000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 2);
}
private int jjMoveStringLiteralDfa3_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 2);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 2);
   }
   switch(curChar)
   {
      case 45:
         if ((active0 & 0x400000L) != 0L)
         {
            jjmatchedKind = 22;
            jjmatchedPos = 3;
         }
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x40L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x1000000000L);
      case 68:
      case 100:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x200L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x2000L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x40000L);
      case 71:
      case 103:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x400010400L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x4000L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x100L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x800L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x200000L);
      case 80:
      case 112:
         if ((active1 & 0x8000L) != 0L)
         {
            jjmatchedKind = 79;
            jjmatchedPos = 3;
         }
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x80L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x2000000000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x800020000L);
      case 85:
      case 117:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x180000L);
      case 89:
      case 121:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x1000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 3);
}
private int jjMoveStringLiteralDfa4_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 3);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 3);
   }
   switch(curChar)
   {
      case 40:
         if ((active1 & 0x400000000L) != 0L)
         {
            jjmatchedKind = 98;
            jjmatchedPos = 4;
         }
         else if ((active1 & 0x800000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 4;
         }
         else if ((active1 & 0x1000000000L) != 0L)
         {
            jjmatchedKind = 100;
            jjmatchedPos = 4;
         }
         else if ((active1 & 0x2000000000L) != 0L)
         {
            jjmatchedKind = 101;
            jjmatchedPos = 4;
         }
         break;
      case 69:
      case 101:
         if ((active1 & 0x400L) != 0L)
         {
            jjmatchedKind = 74;
            jjmatchedPos = 4;
         }
         return jjMoveStringLiteralDfa5_0(active1, 0x100L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa5_0(active1, 0x3000L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa5_0(active1, 0x10000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa5_0(active1, 0x200L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa5_0(active1, 0x380000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa5_0(active1, 0x4080L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa5_0(active1, 0x40L);
      case 84:
      case 116:
         if ((active1 & 0x40000L) != 0L)
         {
            jjmatchedKind = 82;
            jjmatchedPos = 4;
         }
         return jjMoveStringLiteralDfa5_0(active1, 0x20800L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 4);
}
private int jjMoveStringLiteralDfa5_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 4);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 4);
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa6_0(active1, 0x800L);
      case 65:
      case 97:
         if ((active1 & 0x200L) != 0L)
         {
            jjmatchedKind = 73;
            jjmatchedPos = 5;
         }
         break;
      case 69:
      case 101:
         return jjMoveStringLiteralDfa6_0(active1, 0x202000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa6_0(active1, 0x20000L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa6_0(active1, 0x5080L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa6_0(active1, 0x140L);
      case 84:
      case 116:
         if ((active1 & 0x10000L) != 0L)
         {
            jjmatchedKind = 80;
            jjmatchedPos = 5;
         }
         return jjMoveStringLiteralDfa6_0(active1, 0x180000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 5);
}
private int jjMoveStringLiteralDfa6_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 5);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 5);
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa7_0(active1, 0x4000L);
      case 65:
      case 97:
         return jjMoveStringLiteralDfa7_0(active1, 0x1000L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa7_0(active1, 0x180040L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa7_0(active1, 0x800L);
      case 77:
      case 109:
         if ((active1 & 0x20000L) != 0L)
         {
            jjmatchedKind = 81;
            jjmatchedPos = 6;
         }
         break;
      case 80:
      case 112:
         return jjMoveStringLiteralDfa7_0(active1, 0x100L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa7_0(active1, 0x2000L);
      case 84:
      case 116:
         if ((active1 & 0x80L) != 0L)
         {
            jjmatchedKind = 71;
            jjmatchedPos = 6;
         }
         return jjMoveStringLiteralDfa7_0(active1, 0x200000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 6);
}
private int jjMoveStringLiteralDfa7_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 6);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 6);
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa8_0(active1, 0x900L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa8_0(active1, 0x2000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa8_0(active1, 0x200000L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa8_0(active1, 0x1000L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa8_0(active1, 0x4000L);
      case 82:
      case 114:
         if ((active1 & 0x80000L) != 0L)
         {
            jjmatchedKind = 83;
            jjmatchedPos = 7;
         }
         return jjMoveStringLiteralDfa8_0(active1, 0x100000L);
      case 84:
      case 116:
         if ((active1 & 0x40L) != 0L)
         {
            jjmatchedKind = 70;
            jjmatchedPos = 7;
         }
         break;
      default :
         break;
   }
   return jjMoveNfa_0(7, 7);
}
private int jjMoveStringLiteralDfa8_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 7);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 7);
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa9_0(active1, 0x100000L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa9_0(active1, 0x200900L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa9_0(active1, 0x1000L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa9_0(active1, 0x2000L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa9_0(active1, 0x4000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 8);
}
private int jjMoveStringLiteralDfa9_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 8);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 8);
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa10_0(active1, 0x200000L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa10_0(active1, 0x2000L);
      case 69:
      case 101:
         if ((active1 & 0x100L) != 0L)
         {
            jjmatchedKind = 72;
            jjmatchedPos = 9;
         }
         else if ((active1 & 0x800L) != 0L)
         {
            jjmatchedKind = 75;
            jjmatchedPos = 9;
         }
         break;
      case 79:
      case 111:
         return jjMoveStringLiteralDfa10_0(active1, 0x4000L);
      case 83:
      case 115:
         if ((active1 & 0x1000L) != 0L)
         {
            jjmatchedKind = 76;
            jjmatchedPos = 9;
         }
         return jjMoveStringLiteralDfa10_0(active1, 0x100000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 9);
}
private int jjMoveStringLiteralDfa10_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 9);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 9);
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa11_0(active1, 0x200000L);
      case 69:
      case 101:
         if ((active1 & 0x2000L) != 0L)
         {
            jjmatchedKind = 77;
            jjmatchedPos = 10;
         }
         break;
      case 70:
      case 102:
         return jjMoveStringLiteralDfa11_0(active1, 0x4000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa11_0(active1, 0x100000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 10);
}
private int jjMoveStringLiteralDfa11_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 10);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 10);
   }
   switch(curChar)
   {
      case 73:
      case 105:
         return jjMoveStringLiteralDfa12_0(active1, 0x4000L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa12_0(active1, 0x200000L);
      case 89:
      case 121:
         return jjMoveStringLiteralDfa12_0(active1, 0x100000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 11);
}
private int jjMoveStringLiteralDfa12_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 11);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 11);
   }
   switch(curChar)
   {
      case 76:
      case 108:
         return jjMoveStringLiteralDfa13_0(active1, 0x104000L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa13_0(active1, 0x200000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 12);
}
private int jjMoveStringLiteralDfa13_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 12);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 12);
   }
   switch(curChar)
   {
      case 69:
      case 101:
         if ((active1 & 0x4000L) != 0L)
         {
            jjmatchedKind = 78;
            jjmatchedPos = 13;
         }
         else if ((active1 & 0x100000L) != 0L)
         {
            jjmatchedKind = 84;
            jjmatchedPos = 13;
         }
         break;
      case 72:
      case 104:
         return jjMoveStringLiteralDfa14_0(active1, 0x200000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 13);
}
private int jjMoveStringLiteralDfa14_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 13);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 13);
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa15_0(active1, 0x200000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 14);
}
private int jjMoveStringLiteralDfa15_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 14);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 14);
   }
   switch(curChar)
   {
      case 66:
      case 98:
         return jjMoveStringLiteralDfa16_0(active1, 0x200000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 15);
}
private int jjMoveStringLiteralDfa16_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 15);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 15);
   }
   switch(curChar)
   {
      case 69:
      case 101:
         return jjMoveStringLiteralDfa17_0(active1, 0x200000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 16);
}
private int jjMoveStringLiteralDfa17_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 16);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 16);
   }
   switch(curChar)
   {
      case 84:
      case 116:
         if ((active1 & 0x200000L) != 0L)
         {
            jjmatchedKind = 85;
            jjmatchedPos = 17;
         }
         break;
      default :
         break;
   }
   return jjMoveNfa_0(7, 17);
}
static final long[] jjbitVec0 = {
   0xfffffffffffffffeL, 0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static final long[] jjbitVec2 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private int jjMoveNfa_0(int startState, int curPos)
{
   int strKind = jjmatchedKind;
   int strPos = jjmatchedPos;
   int seenUpto;
   input_stream.backup(seenUpto = curPos + 1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { throw new Error("Internal Error"); }
   curPos = 0;
   int startsAt = 0;
   jjnewStateCnt = 787;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 7:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 66)
                        kind = 66;
                     { jjCheckNAddStates(0, 104); }
                  }
                  else if ((0x100003600L & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     { jjCheckNAddStates(105, 124); }
                  }
                  else if (curChar == 33)
                     { jjCheckNAddStates(125, 128); }
                  else if (curChar == 46)
                     { jjCheckNAddStates(129, 156); }
                  else if (curChar == 35)
                     { jjCheckNAddStates(157, 161); }
                  else if (curChar == 45)
                     { jjAddStates(162, 165); }
                  else if (curChar == 39)
                  {
                     if (kind > 35)
                        kind = 35;
                     { jjCheckNAddStates(166, 170); }
                  }
                  else if (curChar == 34)
                  {
                     if (kind > 35)
                        kind = 35;
                     { jjCheckNAddStates(171, 175); }
                  }
                  else if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 178;
                  else if (curChar == 44)
                  {
                     if (kind > 30)
                        kind = 30;
                  }
                  else if (curChar == 62)
                  {
                     if (kind > 29)
                        kind = 29;
                  }
                  else if (curChar == 43)
                  {
                     if (kind > 27)
                        kind = 27;
                  }
                  else if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 0;
                  if (curChar == 60)
                     { jjCheckNAddStates(176, 180); }
                  break;
               case 0:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(1, 2); }
                  break;
               case 1:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(1, 2); }
                  break;
               case 2:
                  if (curChar == 42)
                     { jjCheckNAddStates(181, 183); }
                  break;
               case 3:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(4, 5); }
                  break;
               case 4:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(4, 5); }
                  break;
               case 5:
                  if (curChar == 42)
                     { jjCheckNAddStates(184, 186); }
                  break;
               case 6:
                  if (curChar == 47 && kind > 1)
                     kind = 1;
                  break;
               case 9:
                  if (curChar == 43 && kind > 27)
                     kind = 27;
                  break;
               case 10:
                  if (curChar == 62 && kind > 29)
                     kind = 29;
                  break;
               case 11:
                  if (curChar == 44 && kind > 30)
                     kind = 30;
                  break;
               case 20:
                  if (curChar == 45)
                     { jjAddStates(187, 188); }
                  break;
               case 22:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddTwoStates(22, 23); }
                  break;
               case 24:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddTwoStates(22, 23); }
                  break;
               case 25:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddStates(189, 193); }
                  break;
               case 26:
                  if (curChar != 10)
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddTwoStates(22, 23); }
                  break;
               case 27:
               case 36:
                  if (curChar == 13)
                     { jjCheckNAdd(26); }
                  break;
               case 28:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddTwoStates(22, 23); }
                  break;
               case 29:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddStates(194, 201); }
                  break;
               case 30:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddStates(202, 205); }
                  break;
               case 31:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddStates(206, 210); }
                  break;
               case 32:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddStates(211, 216); }
                  break;
               case 33:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddStates(217, 223); }
                  break;
               case 35:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddStates(224, 228); }
                  break;
               case 37:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddStates(229, 236); }
                  break;
               case 38:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddStates(237, 240); }
                  break;
               case 39:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddStates(241, 245); }
                  break;
               case 40:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddStates(246, 251); }
                  break;
               case 41:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddStates(252, 258); }
                  break;
               case 42:
                  if (curChar == 60)
                     { jjCheckNAddStates(176, 180); }
                  break;
               case 44:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(259, 263); }
                  break;
               case 45:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(46, 47); }
                  break;
               case 46:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(46, 47); }
                  break;
               case 47:
                  if (curChar == 42)
                     { jjCheckNAddStates(264, 266); }
                  break;
               case 48:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(49, 50); }
                  break;
               case 49:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(49, 50); }
                  break;
               case 50:
                  if (curChar == 42)
                     { jjCheckNAddStates(267, 269); }
                  break;
               case 51:
                  if (curChar == 47)
                     { jjCheckNAddStates(259, 263); }
                  break;
               case 52:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 45;
                  break;
               case 53:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(54, 163); }
                  break;
               case 55:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(270, 275); }
                  break;
               case 56:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(276, 281); }
                  break;
               case 57:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(58, 59); }
                  break;
               case 58:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(58, 59); }
                  break;
               case 59:
                  if (curChar == 42)
                     { jjCheckNAddStates(282, 284); }
                  break;
               case 60:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(61, 62); }
                  break;
               case 61:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(61, 62); }
                  break;
               case 62:
                  if (curChar == 42)
                     { jjCheckNAddStates(285, 287); }
                  break;
               case 63:
                  if (curChar == 47)
                     { jjCheckNAddStates(276, 281); }
                  break;
               case 64:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 57;
                  break;
               case 65:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(66, 82); }
                  break;
               case 67:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(288, 290); }
                  break;
               case 68:
                  if (curChar == 61)
                     { jjCheckNAddStates(291, 295); }
                  break;
               case 69:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(70, 112); }
                  break;
               case 71:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(296, 301); }
                  break;
               case 72:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(302, 307); }
                  break;
               case 73:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(74, 75); }
                  break;
               case 74:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(74, 75); }
                  break;
               case 75:
                  if (curChar == 42)
                     { jjCheckNAddStates(308, 310); }
                  break;
               case 76:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(77, 78); }
                  break;
               case 77:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(77, 78); }
                  break;
               case 78:
                  if (curChar == 42)
                     { jjCheckNAddStates(311, 313); }
                  break;
               case 79:
                  if (curChar == 47)
                     { jjCheckNAddStates(302, 307); }
                  break;
               case 80:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 73;
                  break;
               case 81:
                  if (curChar == 62 && kind > 103)
                     kind = 103;
                  break;
               case 83:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(288, 290); }
                  break;
               case 85:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(314, 319); }
                  break;
               case 86:
                  if (curChar == 10)
                     { jjCheckNAddStates(288, 290); }
                  break;
               case 87:
               case 95:
                  if (curChar == 13)
                     { jjCheckNAdd(86); }
                  break;
               case 88:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(288, 290); }
                  break;
               case 89:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(320, 328); }
                  break;
               case 90:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(329, 333); }
                  break;
               case 91:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(334, 339); }
                  break;
               case 92:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(340, 346); }
                  break;
               case 93:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(347, 354); }
                  break;
               case 94:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(355, 360); }
                  break;
               case 96:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(361, 369); }
                  break;
               case 97:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(370, 374); }
                  break;
               case 98:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(375, 380); }
                  break;
               case 99:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(381, 387); }
                  break;
               case 100:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(388, 395); }
                  break;
               case 102:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(296, 301); }
                  break;
               case 103:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(396, 403); }
                  break;
               case 104:
                  if (curChar == 10)
                     { jjCheckNAddStates(296, 301); }
                  break;
               case 105:
               case 114:
                  if (curChar == 13)
                     { jjCheckNAdd(104); }
                  break;
               case 106:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(404, 412); }
                  break;
               case 107:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(413, 423); }
                  break;
               case 108:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(424, 430); }
                  break;
               case 109:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(431, 438); }
                  break;
               case 110:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(439, 447); }
                  break;
               case 111:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(448, 457); }
                  break;
               case 113:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(458, 465); }
                  break;
               case 115:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(466, 476); }
                  break;
               case 116:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(477, 483); }
                  break;
               case 117:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(484, 491); }
                  break;
               case 118:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(492, 500); }
                  break;
               case 119:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(501, 510); }
                  break;
               case 120:
                  if (curChar == 34)
                     { jjCheckNAddStates(511, 513); }
                  break;
               case 121:
                  if ((0xfffffffbffffcbffL & l) != 0L)
                     { jjCheckNAddStates(511, 513); }
                  break;
               case 122:
                  if (curChar == 34)
                     { jjCheckNAddStates(514, 518); }
                  break;
               case 124:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(511, 513); }
                  break;
               case 125:
                  if (curChar == 10)
                     { jjCheckNAddStates(511, 513); }
                  break;
               case 126:
               case 129:
                  if (curChar == 13)
                     { jjCheckNAdd(125); }
                  break;
               case 127:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(511, 513); }
                  break;
               case 128:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(519, 524); }
                  break;
               case 130:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(511, 513); }
                  break;
               case 131:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(525, 533); }
                  break;
               case 132:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(534, 538); }
                  break;
               case 133:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(539, 544); }
                  break;
               case 134:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(545, 551); }
                  break;
               case 135:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(552, 559); }
                  break;
               case 136:
                  if (curChar == 39)
                     { jjCheckNAddStates(560, 562); }
                  break;
               case 137:
                  if ((0xffffff7fffffcbffL & l) != 0L)
                     { jjCheckNAddStates(560, 562); }
                  break;
               case 138:
                  if (curChar == 39)
                     { jjCheckNAddStates(514, 518); }
                  break;
               case 140:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(560, 562); }
                  break;
               case 141:
                  if (curChar == 10)
                     { jjCheckNAddStates(560, 562); }
                  break;
               case 142:
               case 145:
                  if (curChar == 13)
                     { jjCheckNAdd(141); }
                  break;
               case 143:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(560, 562); }
                  break;
               case 144:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(563, 568); }
                  break;
               case 146:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(560, 562); }
                  break;
               case 147:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(569, 577); }
                  break;
               case 148:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(578, 582); }
                  break;
               case 149:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(583, 588); }
                  break;
               case 150:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(589, 595); }
                  break;
               case 151:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(596, 603); }
                  break;
               case 153:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(270, 275); }
                  break;
               case 154:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(604, 611); }
                  break;
               case 155:
                  if (curChar == 10)
                     { jjCheckNAddStates(270, 275); }
                  break;
               case 156:
               case 165:
                  if (curChar == 13)
                     { jjCheckNAdd(155); }
                  break;
               case 157:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(612, 620); }
                  break;
               case 158:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(621, 631); }
                  break;
               case 159:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(632, 638); }
                  break;
               case 160:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(639, 646); }
                  break;
               case 161:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(647, 655); }
                  break;
               case 162:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(656, 665); }
                  break;
               case 164:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(666, 673); }
                  break;
               case 166:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(674, 684); }
                  break;
               case 167:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(685, 691); }
                  break;
               case 168:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(692, 699); }
                  break;
               case 169:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(700, 708); }
                  break;
               case 170:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(709, 718); }
                  break;
               case 177:
                  if (curChar == 33)
                     jjstateSet[jjnewStateCnt++] = 176;
                  break;
               case 178:
                  if (curChar == 47)
                     { jjCheckNAddStates(719, 722); }
                  break;
               case 179:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(723, 727); }
                  break;
               case 180:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(181, 182); }
                  break;
               case 181:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(181, 182); }
                  break;
               case 182:
                  if (curChar == 42)
                     { jjCheckNAddStates(728, 730); }
                  break;
               case 183:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(184, 185); }
                  break;
               case 184:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(184, 185); }
                  break;
               case 185:
                  if (curChar == 42)
                     { jjCheckNAddStates(731, 733); }
                  break;
               case 186:
                  if (curChar == 47)
                     { jjCheckNAddStates(723, 727); }
                  break;
               case 187:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 180;
                  break;
               case 188:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(189, 212); }
                  break;
               case 190:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(734, 737); }
                  break;
               case 191:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(738, 740); }
                  break;
               case 192:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(193, 194); }
                  break;
               case 193:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(193, 194); }
                  break;
               case 194:
                  if (curChar == 42)
                     { jjCheckNAddStates(741, 743); }
                  break;
               case 195:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(196, 197); }
                  break;
               case 196:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(196, 197); }
                  break;
               case 197:
                  if (curChar == 42)
                     { jjCheckNAddStates(744, 746); }
                  break;
               case 198:
                  if (curChar == 47)
                     { jjCheckNAddStates(738, 740); }
                  break;
               case 199:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 192;
                  break;
               case 200:
                  if (curChar == 62 && kind > 104)
                     kind = 104;
                  break;
               case 202:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(734, 737); }
                  break;
               case 203:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(747, 752); }
                  break;
               case 204:
                  if (curChar == 10)
                     { jjCheckNAddStates(734, 737); }
                  break;
               case 205:
               case 214:
                  if (curChar == 13)
                     { jjCheckNAdd(204); }
                  break;
               case 206:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(753, 758); }
                  break;
               case 207:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(759, 767); }
                  break;
               case 208:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(768, 772); }
                  break;
               case 209:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(773, 778); }
                  break;
               case 210:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(779, 785); }
                  break;
               case 211:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(786, 793); }
                  break;
               case 213:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(794, 799); }
                  break;
               case 215:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(800, 808); }
                  break;
               case 216:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(809, 813); }
                  break;
               case 217:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(814, 819); }
                  break;
               case 218:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(820, 826); }
                  break;
               case 219:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(827, 834); }
                  break;
               case 220:
                  if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 178;
                  break;
               case 221:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  { jjCheckNAddStates(105, 124); }
                  break;
               case 222:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(223, 224); }
                  break;
               case 223:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(223, 224); }
                  break;
               case 224:
                  if (curChar == 42)
                     { jjCheckNAddStates(835, 837); }
                  break;
               case 225:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(226, 227); }
                  break;
               case 226:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(226, 227); }
                  break;
               case 227:
                  if (curChar == 42)
                     { jjCheckNAddStates(838, 840); }
                  break;
               case 228:
                  if (curChar != 47)
                     break;
                  if (kind > 21)
                     kind = 21;
                  { jjCheckNAddTwoStates(229, 230); }
                  break;
               case 229:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 222;
                  break;
               case 230:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  { jjCheckNAddTwoStates(229, 230); }
                  break;
               case 231:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(232, 233); }
                  break;
               case 232:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(232, 233); }
                  break;
               case 233:
                  if (curChar == 42)
                     { jjCheckNAddStates(841, 843); }
                  break;
               case 234:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(235, 236); }
                  break;
               case 235:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(235, 236); }
                  break;
               case 236:
                  if (curChar == 42)
                     { jjCheckNAddStates(844, 846); }
                  break;
               case 237:
                  if (curChar == 47)
                     { jjCheckNAddStates(847, 849); }
                  break;
               case 238:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 231;
                  break;
               case 239:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(847, 849); }
                  break;
               case 241:
                  if (curChar == 61 && kind > 24)
                     kind = 24;
                  break;
               case 242:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(243, 244); }
                  break;
               case 243:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(243, 244); }
                  break;
               case 244:
                  if (curChar == 42)
                     { jjCheckNAddStates(850, 852); }
                  break;
               case 245:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(246, 247); }
                  break;
               case 246:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(246, 247); }
                  break;
               case 247:
                  if (curChar == 42)
                     { jjCheckNAddStates(853, 855); }
                  break;
               case 248:
                  if (curChar == 47)
                     { jjCheckNAddStates(856, 858); }
                  break;
               case 249:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 242;
                  break;
               case 250:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(856, 858); }
                  break;
               case 251:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(252, 253); }
                  break;
               case 252:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(252, 253); }
                  break;
               case 253:
                  if (curChar == 42)
                     { jjCheckNAddStates(859, 861); }
                  break;
               case 254:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(255, 256); }
                  break;
               case 255:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(255, 256); }
                  break;
               case 256:
                  if (curChar == 42)
                     { jjCheckNAddStates(862, 864); }
                  break;
               case 257:
                  if (curChar == 47)
                     { jjCheckNAddStates(865, 867); }
                  break;
               case 258:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 251;
                  break;
               case 259:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(865, 867); }
                  break;
               case 260:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(261, 262); }
                  break;
               case 261:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(261, 262); }
                  break;
               case 262:
                  if (curChar == 42)
                     { jjCheckNAddStates(868, 870); }
                  break;
               case 263:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  break;
               case 264:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  break;
               case 265:
                  if (curChar == 42)
                     { jjCheckNAddStates(871, 873); }
                  break;
               case 266:
                  if (curChar == 47)
                     { jjCheckNAddStates(874, 876); }
                  break;
               case 267:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 260;
                  break;
               case 268:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(874, 876); }
                  break;
               case 269:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(270, 271); }
                  break;
               case 270:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(270, 271); }
                  break;
               case 271:
                  if (curChar == 42)
                     { jjCheckNAddStates(877, 879); }
                  break;
               case 272:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(273, 274); }
                  break;
               case 273:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(273, 274); }
                  break;
               case 274:
                  if (curChar == 42)
                     { jjCheckNAddStates(880, 882); }
                  break;
               case 275:
                  if (curChar == 47)
                     { jjCheckNAddStates(883, 885); }
                  break;
               case 276:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 269;
                  break;
               case 277:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(883, 885); }
                  break;
               case 278:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(279, 280); }
                  break;
               case 279:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(279, 280); }
                  break;
               case 280:
                  if (curChar == 42)
                     { jjCheckNAddStates(886, 888); }
                  break;
               case 281:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(282, 283); }
                  break;
               case 282:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(282, 283); }
                  break;
               case 283:
                  if (curChar == 42)
                     { jjCheckNAddStates(889, 891); }
                  break;
               case 284:
                  if (curChar == 47)
                     { jjCheckNAddStates(892, 894); }
                  break;
               case 285:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 278;
                  break;
               case 286:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(892, 894); }
                  break;
               case 289:
                  if (curChar != 34)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(171, 175); }
                  break;
               case 290:
                  if ((0xfffffffbffffcbffL & l) != 0L)
                     { jjCheckNAddStates(895, 897); }
                  break;
               case 291:
                  if (curChar == 34 && kind > 34)
                     kind = 34;
                  break;
               case 293:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(895, 897); }
                  break;
               case 294:
                  if (curChar == 10)
                     { jjCheckNAddStates(895, 897); }
                  break;
               case 295:
               case 298:
                  if (curChar == 13)
                     { jjCheckNAdd(294); }
                  break;
               case 296:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(895, 897); }
                  break;
               case 297:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(898, 903); }
                  break;
               case 299:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(895, 897); }
                  break;
               case 300:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(904, 912); }
                  break;
               case 301:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(913, 917); }
                  break;
               case 302:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(918, 923); }
                  break;
               case 303:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(924, 930); }
                  break;
               case 304:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(931, 938); }
                  break;
               case 305:
                  if ((0xfffffffbffffcbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(305, 306); }
                  break;
               case 307:
                  if ((0x3400L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(305, 306); }
                  break;
               case 308:
                  if (curChar != 10)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(305, 306); }
                  break;
               case 309:
               case 312:
                  if (curChar == 13)
                     { jjCheckNAdd(308); }
                  break;
               case 310:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(305, 306); }
                  break;
               case 311:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(939, 943); }
                  break;
               case 313:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(305, 306); }
                  break;
               case 314:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(944, 951); }
                  break;
               case 315:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(952, 955); }
                  break;
               case 316:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(956, 960); }
                  break;
               case 317:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(961, 966); }
                  break;
               case 318:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(967, 973); }
                  break;
               case 319:
                  if (curChar != 39)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(166, 170); }
                  break;
               case 320:
                  if ((0xffffff7fffffcbffL & l) != 0L)
                     { jjCheckNAddStates(974, 976); }
                  break;
               case 321:
                  if (curChar == 39 && kind > 34)
                     kind = 34;
                  break;
               case 323:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(974, 976); }
                  break;
               case 324:
                  if (curChar == 10)
                     { jjCheckNAddStates(974, 976); }
                  break;
               case 325:
               case 328:
                  if (curChar == 13)
                     { jjCheckNAdd(324); }
                  break;
               case 326:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(974, 976); }
                  break;
               case 327:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(977, 982); }
                  break;
               case 329:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(974, 976); }
                  break;
               case 330:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(983, 991); }
                  break;
               case 331:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(992, 996); }
                  break;
               case 332:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(997, 1002); }
                  break;
               case 333:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1003, 1009); }
                  break;
               case 334:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1010, 1017); }
                  break;
               case 335:
                  if ((0xffffff7fffffcbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(335, 336); }
                  break;
               case 337:
                  if ((0x3400L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(335, 336); }
                  break;
               case 338:
                  if (curChar != 10)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(335, 336); }
                  break;
               case 339:
               case 342:
                  if (curChar == 13)
                     { jjCheckNAdd(338); }
                  break;
               case 340:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(335, 336); }
                  break;
               case 341:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(1018, 1022); }
                  break;
               case 343:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(335, 336); }
                  break;
               case 344:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(1023, 1030); }
                  break;
               case 345:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(1031, 1034); }
                  break;
               case 346:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(1035, 1039); }
                  break;
               case 347:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(1040, 1045); }
                  break;
               case 348:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(1046, 1052); }
                  break;
               case 349:
                  if (curChar == 45)
                     { jjAddStates(162, 165); }
                  break;
               case 351:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddTwoStates(351, 352); }
                  break;
               case 353:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddTwoStates(351, 352); }
                  break;
               case 354:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1053, 1057); }
                  break;
               case 355:
                  if (curChar != 10)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddTwoStates(351, 352); }
                  break;
               case 356:
               case 387:
                  if (curChar == 13)
                     { jjCheckNAdd(355); }
                  break;
               case 357:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddTwoStates(351, 352); }
                  break;
               case 358:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1058, 1065); }
                  break;
               case 359:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1066, 1069); }
                  break;
               case 360:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1070, 1074); }
                  break;
               case 361:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1075, 1080); }
                  break;
               case 362:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1081, 1087); }
                  break;
               case 364:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(1088, 1090); }
                  break;
               case 365:
                  if (curChar == 40 && kind > 102)
                     kind = 102;
                  break;
               case 367:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1088, 1090); }
                  break;
               case 368:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1091, 1096); }
                  break;
               case 369:
                  if (curChar == 10)
                     { jjCheckNAddStates(1088, 1090); }
                  break;
               case 370:
               case 379:
                  if (curChar == 13)
                     { jjCheckNAdd(369); }
                  break;
               case 371:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1088, 1090); }
                  break;
               case 372:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1097, 1105); }
                  break;
               case 373:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1106, 1110); }
                  break;
               case 374:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1111, 1116); }
                  break;
               case 375:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1117, 1123); }
                  break;
               case 376:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1124, 1131); }
                  break;
               case 378:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1132, 1137); }
                  break;
               case 380:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1138, 1146); }
                  break;
               case 381:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1147, 1151); }
                  break;
               case 382:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1152, 1157); }
                  break;
               case 383:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1158, 1164); }
                  break;
               case 384:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1165, 1172); }
                  break;
               case 386:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1173, 1177); }
                  break;
               case 388:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1178, 1185); }
                  break;
               case 389:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1186, 1189); }
                  break;
               case 390:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1190, 1194); }
                  break;
               case 391:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1195, 1200); }
                  break;
               case 392:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1201, 1207); }
                  break;
               case 394:
                  if (curChar == 35)
                     { jjCheckNAddStates(157, 161); }
                  break;
               case 395:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(396, 409); }
                  break;
               case 397:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddTwoStates(397, 398); }
                  break;
               case 399:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddTwoStates(397, 398); }
                  break;
               case 400:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1208, 1212); }
                  break;
               case 401:
                  if (curChar != 10)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddTwoStates(397, 398); }
                  break;
               case 402:
               case 411:
                  if (curChar == 13)
                     { jjCheckNAdd(401); }
                  break;
               case 403:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddTwoStates(397, 398); }
                  break;
               case 404:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1213, 1220); }
                  break;
               case 405:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1221, 1224); }
                  break;
               case 406:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1225, 1229); }
                  break;
               case 407:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1230, 1235); }
                  break;
               case 408:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1236, 1242); }
                  break;
               case 410:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1243, 1247); }
                  break;
               case 412:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1248, 1255); }
                  break;
               case 413:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1256, 1259); }
                  break;
               case 414:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1260, 1264); }
                  break;
               case 415:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1265, 1270); }
                  break;
               case 416:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1271, 1277); }
                  break;
               case 417:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(417, 418); }
                  break;
               case 419:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(417, 418); }
                  break;
               case 420:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1278, 1282); }
                  break;
               case 421:
                  if (curChar != 10)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(417, 418); }
                  break;
               case 422:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 421;
                  break;
               case 423:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(417, 418); }
                  break;
               case 424:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1283, 1290); }
                  break;
               case 425:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1291, 1294); }
                  break;
               case 426:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1295, 1299); }
                  break;
               case 427:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1300, 1305); }
                  break;
               case 428:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1306, 1312); }
                  break;
               case 430:
                  if (curChar == 40)
                     { jjCheckNAddStates(1313, 1318); }
                  break;
               case 431:
                  if (curChar == 34)
                     { jjCheckNAddStates(1319, 1321); }
                  break;
               case 432:
                  if ((0xfffffffbffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1319, 1321); }
                  break;
               case 433:
                  if (curChar == 34)
                     { jjCheckNAddTwoStates(434, 443); }
                  break;
               case 434:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1322, 1324); }
                  break;
               case 435:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(436, 437); }
                  break;
               case 436:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(436, 437); }
                  break;
               case 437:
                  if (curChar == 42)
                     { jjCheckNAddStates(1325, 1327); }
                  break;
               case 438:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(439, 440); }
                  break;
               case 439:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(439, 440); }
                  break;
               case 440:
                  if (curChar == 42)
                     { jjCheckNAddStates(1328, 1330); }
                  break;
               case 441:
                  if (curChar == 47)
                     { jjCheckNAddStates(1322, 1324); }
                  break;
               case 442:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 435;
                  break;
               case 443:
                  if (curChar == 41 && kind > 53)
                     kind = 53;
                  break;
               case 445:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(1319, 1321); }
                  break;
               case 446:
                  if (curChar == 10)
                     { jjCheckNAddStates(1319, 1321); }
                  break;
               case 447:
               case 450:
                  if (curChar == 13)
                     { jjCheckNAdd(446); }
                  break;
               case 448:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1319, 1321); }
                  break;
               case 449:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1331, 1336); }
                  break;
               case 451:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1319, 1321); }
                  break;
               case 452:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1337, 1345); }
                  break;
               case 453:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1346, 1350); }
                  break;
               case 454:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1351, 1356); }
                  break;
               case 455:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1357, 1363); }
                  break;
               case 456:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1364, 1371); }
                  break;
               case 457:
                  if (curChar == 39)
                     { jjCheckNAddStates(1372, 1374); }
                  break;
               case 458:
                  if ((0xffffff7fffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1372, 1374); }
                  break;
               case 459:
                  if (curChar == 39)
                     { jjCheckNAddTwoStates(434, 443); }
                  break;
               case 461:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(1372, 1374); }
                  break;
               case 462:
                  if (curChar == 10)
                     { jjCheckNAddStates(1372, 1374); }
                  break;
               case 463:
               case 466:
                  if (curChar == 13)
                     { jjCheckNAdd(462); }
                  break;
               case 464:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1372, 1374); }
                  break;
               case 465:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1375, 1380); }
                  break;
               case 467:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1372, 1374); }
                  break;
               case 468:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1381, 1389); }
                  break;
               case 469:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1390, 1394); }
                  break;
               case 470:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1395, 1400); }
                  break;
               case 471:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1401, 1407); }
                  break;
               case 472:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1408, 1415); }
                  break;
               case 473:
                  if ((0xfffffc7a00000000L & l) != 0L)
                     { jjCheckNAddStates(1416, 1419); }
                  break;
               case 475:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1416, 1419); }
                  break;
               case 476:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1420, 1425); }
                  break;
               case 477:
                  if (curChar == 10)
                     { jjCheckNAddStates(1416, 1419); }
                  break;
               case 478:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 477;
                  break;
               case 479:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1426, 1431); }
                  break;
               case 480:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1432, 1440); }
                  break;
               case 481:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1441, 1445); }
                  break;
               case 482:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1446, 1451); }
                  break;
               case 483:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1452, 1458); }
                  break;
               case 484:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1459, 1466); }
                  break;
               case 485:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1467, 1475); }
                  break;
               case 486:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(487, 488); }
                  break;
               case 487:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(487, 488); }
                  break;
               case 488:
                  if (curChar == 42)
                     { jjCheckNAddStates(1476, 1478); }
                  break;
               case 489:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(490, 491); }
                  break;
               case 490:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(490, 491); }
                  break;
               case 491:
                  if (curChar == 42)
                     { jjCheckNAddStates(1479, 1481); }
                  break;
               case 492:
                  if (curChar == 47)
                     { jjCheckNAddStates(1482, 1488); }
                  break;
               case 493:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 486;
                  break;
               case 496:
                  if (curChar == 43)
                     { jjAddStates(1489, 1490); }
                  break;
               case 497:
                  if (curChar != 63)
                     break;
                  if (kind > 96)
                     kind = 96;
                  jjstateSet[jjnewStateCnt++] = 498;
                  break;
               case 498:
                  if (curChar != 63)
                     break;
                  if (kind > 96)
                     kind = 96;
                  { jjCheckNAddStates(1491, 1494); }
                  break;
               case 499:
                  if (curChar == 63 && kind > 96)
                     kind = 96;
                  break;
               case 500:
               case 516:
               case 520:
               case 523:
               case 526:
                  if (curChar != 63)
                     break;
                  if (kind > 96)
                     kind = 96;
                  { jjCheckNAdd(499); }
                  break;
               case 501:
                  if (curChar != 63)
                     break;
                  if (kind > 96)
                     kind = 96;
                  { jjCheckNAddTwoStates(499, 500); }
                  break;
               case 502:
                  if (curChar != 63)
                     break;
                  if (kind > 96)
                     kind = 96;
                  { jjCheckNAddStates(1495, 1497); }
                  break;
               case 503:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 96)
                     kind = 96;
                  { jjAddStates(1498, 1503); }
                  break;
               case 504:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 505;
                  break;
               case 505:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 506;
                  break;
               case 506:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 507;
                  break;
               case 507:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(508); }
                  break;
               case 508:
                  if ((0x3ff000000000000L & l) != 0L && kind > 96)
                     kind = 96;
                  break;
               case 509:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 510;
                  break;
               case 510:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 511;
                  break;
               case 511:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 512;
                  break;
               case 512:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 96)
                     kind = 96;
                  { jjCheckNAdd(499); }
                  break;
               case 513:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 514;
                  break;
               case 514:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 515;
                  break;
               case 515:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 96)
                     kind = 96;
                  jjstateSet[jjnewStateCnt++] = 516;
                  break;
               case 517:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 518;
                  break;
               case 518:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 96)
                     kind = 96;
                  jjstateSet[jjnewStateCnt++] = 519;
                  break;
               case 519:
                  if (curChar != 63)
                     break;
                  if (kind > 96)
                     kind = 96;
                  { jjCheckNAddTwoStates(499, 520); }
                  break;
               case 521:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 96)
                     kind = 96;
                  jjstateSet[jjnewStateCnt++] = 522;
                  break;
               case 522:
                  if (curChar != 63)
                     break;
                  if (kind > 96)
                     kind = 96;
                  { jjCheckNAddStates(1504, 1506); }
                  break;
               case 524:
                  if (curChar != 63)
                     break;
                  if (kind > 96)
                     kind = 96;
                  { jjCheckNAddTwoStates(499, 523); }
                  break;
               case 525:
                  if (curChar != 63)
                     break;
                  if (kind > 96)
                     kind = 96;
                  { jjCheckNAddStates(1507, 1510); }
                  break;
               case 527:
                  if (curChar != 63)
                     break;
                  if (kind > 96)
                     kind = 96;
                  { jjCheckNAddTwoStates(499, 526); }
                  break;
               case 528:
                  if (curChar != 63)
                     break;
                  if (kind > 96)
                     kind = 96;
                  { jjCheckNAddStates(1511, 1513); }
                  break;
               case 529:
                  if (curChar == 43)
                     jjstateSet[jjnewStateCnt++] = 530;
                  break;
               case 530:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(531, 537); }
                  break;
               case 531:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 532;
                  break;
               case 532:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 96)
                     kind = 96;
                  jjstateSet[jjnewStateCnt++] = 533;
                  break;
               case 533:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 96)
                     kind = 96;
                  { jjCheckNAddStates(1514, 1517); }
                  break;
               case 534:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 96)
                     kind = 96;
                  { jjCheckNAdd(508); }
                  break;
               case 535:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 96)
                     kind = 96;
                  { jjCheckNAddTwoStates(508, 534); }
                  break;
               case 536:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 96)
                     kind = 96;
                  { jjCheckNAddStates(1518, 1520); }
                  break;
               case 537:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1521, 1525); }
                  break;
               case 538:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(531); }
                  break;
               case 539:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(538, 531); }
                  break;
               case 540:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1526, 1528); }
                  break;
               case 541:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1529, 1532); }
                  break;
               case 542:
                  if (curChar == 46)
                     { jjCheckNAddStates(129, 156); }
                  break;
               case 543:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(543, 545); }
                  break;
               case 546:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(546, 548); }
                  break;
               case 549:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(549, 551); }
                  break;
               case 552:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(552, 554); }
                  break;
               case 555:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(555, 557); }
                  break;
               case 558:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(558, 560); }
                  break;
               case 561:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(561, 565); }
                  break;
               case 566:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(566, 570); }
                  break;
               case 571:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(571, 573); }
                  break;
               case 574:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(574, 575); }
                  break;
               case 576:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(576, 577); }
                  break;
               case 578:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(578, 580); }
                  break;
               case 581:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(581, 583); }
                  break;
               case 584:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(584, 586); }
                  break;
               case 587:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(587, 589); }
                  break;
               case 590:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(590, 592); }
                  break;
               case 593:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1533, 1537); }
                  break;
               case 607:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(607, 609); }
                  break;
               case 610:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(610, 612); }
                  break;
               case 613:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1538, 1540); }
                  break;
               case 617:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1541, 1543); }
                  break;
               case 622:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(622, 623); }
                  break;
               case 632:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1544, 1546); }
                  break;
               case 634:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddTwoStates(634, 635); }
                  break;
               case 636:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddTwoStates(634, 635); }
                  break;
               case 637:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(1547, 1551); }
                  break;
               case 638:
                  if (curChar != 10)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddTwoStates(634, 635); }
                  break;
               case 639:
               case 648:
                  if (curChar == 13)
                     { jjCheckNAdd(638); }
                  break;
               case 640:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddTwoStates(634, 635); }
                  break;
               case 641:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(1552, 1559); }
                  break;
               case 642:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(1560, 1563); }
                  break;
               case 643:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(1564, 1568); }
                  break;
               case 644:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(1569, 1574); }
                  break;
               case 645:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(1575, 1581); }
                  break;
               case 647:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(1582, 1586); }
                  break;
               case 649:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(1587, 1594); }
                  break;
               case 650:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(1595, 1598); }
                  break;
               case 651:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(1599, 1603); }
                  break;
               case 652:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(1604, 1609); }
                  break;
               case 653:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(1610, 1616); }
                  break;
               case 654:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(654, 655); }
                  break;
               case 655:
                  if (curChar == 37 && kind > 65)
                     kind = 65;
                  break;
               case 656:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  { jjCheckNAdd(656); }
                  break;
               case 657:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(658, 671); }
                  break;
               case 659:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddTwoStates(659, 660); }
                  break;
               case 661:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddTwoStates(659, 660); }
                  break;
               case 662:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1617, 1621); }
                  break;
               case 663:
                  if (curChar != 10)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddTwoStates(659, 660); }
                  break;
               case 664:
               case 673:
                  if (curChar == 13)
                     { jjCheckNAdd(663); }
                  break;
               case 665:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddTwoStates(659, 660); }
                  break;
               case 666:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1622, 1629); }
                  break;
               case 667:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1630, 1633); }
                  break;
               case 668:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1634, 1638); }
                  break;
               case 669:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1639, 1644); }
                  break;
               case 670:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1645, 1651); }
                  break;
               case 672:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1652, 1656); }
                  break;
               case 674:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1657, 1664); }
                  break;
               case 675:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1665, 1668); }
                  break;
               case 676:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1669, 1673); }
                  break;
               case 677:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1674, 1679); }
                  break;
               case 678:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1680, 1686); }
                  break;
               case 679:
                  if (curChar == 33)
                     { jjCheckNAddStates(125, 128); }
                  break;
               case 680:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1687, 1689); }
                  break;
               case 681:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(682, 683); }
                  break;
               case 682:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(682, 683); }
                  break;
               case 683:
                  if (curChar == 42)
                     { jjCheckNAddStates(1690, 1692); }
                  break;
               case 684:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(685, 686); }
                  break;
               case 685:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(685, 686); }
                  break;
               case 686:
                  if (curChar == 42)
                     { jjCheckNAddStates(1693, 1695); }
                  break;
               case 687:
                  if (curChar == 47)
                     { jjCheckNAddStates(1687, 1689); }
                  break;
               case 688:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 681;
                  break;
               case 698:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1696, 1698); }
                  break;
               case 699:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(700, 701); }
                  break;
               case 700:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(700, 701); }
                  break;
               case 701:
                  if (curChar == 42)
                     { jjCheckNAddStates(1699, 1701); }
                  break;
               case 702:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(703, 704); }
                  break;
               case 703:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(703, 704); }
                  break;
               case 704:
                  if (curChar == 42)
                     { jjCheckNAddStates(1702, 1704); }
                  break;
               case 705:
                  if (curChar == 47)
                     { jjCheckNAddStates(1696, 1698); }
                  break;
               case 706:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 699;
                  break;
               case 708:
                  if ((0x280000000000000L & l) != 0L && kind > 68)
                     kind = 68;
                  break;
               case 711:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  { jjCheckNAddStates(0, 104); }
                  break;
               case 712:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(712, 545); }
                  break;
               case 713:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(713, 714); }
                  break;
               case 714:
                  if (curChar == 46)
                     { jjCheckNAdd(543); }
                  break;
               case 715:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(715, 548); }
                  break;
               case 716:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(716, 717); }
                  break;
               case 717:
                  if (curChar == 46)
                     { jjCheckNAdd(546); }
                  break;
               case 718:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(718, 551); }
                  break;
               case 719:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(719, 720); }
                  break;
               case 720:
                  if (curChar == 46)
                     { jjCheckNAdd(549); }
                  break;
               case 721:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(721, 554); }
                  break;
               case 722:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(722, 723); }
                  break;
               case 723:
                  if (curChar == 46)
                     { jjCheckNAdd(552); }
                  break;
               case 724:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(724, 557); }
                  break;
               case 725:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(725, 726); }
                  break;
               case 726:
                  if (curChar == 46)
                     { jjCheckNAdd(555); }
                  break;
               case 727:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(727, 560); }
                  break;
               case 728:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(728, 729); }
                  break;
               case 729:
                  if (curChar == 46)
                     { jjCheckNAdd(558); }
                  break;
               case 730:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(730, 565); }
                  break;
               case 731:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(731, 732); }
                  break;
               case 732:
                  if (curChar == 46)
                     { jjCheckNAdd(561); }
                  break;
               case 733:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(733, 570); }
                  break;
               case 734:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(734, 735); }
                  break;
               case 735:
                  if (curChar == 46)
                     { jjCheckNAdd(566); }
                  break;
               case 736:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(736, 573); }
                  break;
               case 737:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(737, 738); }
                  break;
               case 738:
                  if (curChar == 46)
                     { jjCheckNAdd(571); }
                  break;
               case 739:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(739, 575); }
                  break;
               case 740:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(740, 741); }
                  break;
               case 741:
                  if (curChar == 46)
                     { jjCheckNAdd(574); }
                  break;
               case 742:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(742, 577); }
                  break;
               case 743:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(743, 744); }
                  break;
               case 744:
                  if (curChar == 46)
                     { jjCheckNAdd(576); }
                  break;
               case 745:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(745, 580); }
                  break;
               case 746:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(746, 747); }
                  break;
               case 747:
                  if (curChar == 46)
                     { jjCheckNAdd(578); }
                  break;
               case 748:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(748, 583); }
                  break;
               case 749:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(749, 750); }
                  break;
               case 750:
                  if (curChar == 46)
                     { jjCheckNAdd(581); }
                  break;
               case 751:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(751, 586); }
                  break;
               case 752:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(752, 753); }
                  break;
               case 753:
                  if (curChar == 46)
                     { jjCheckNAdd(584); }
                  break;
               case 754:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(754, 589); }
                  break;
               case 755:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(755, 756); }
                  break;
               case 756:
                  if (curChar == 46)
                     { jjCheckNAdd(587); }
                  break;
               case 757:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(757, 592); }
                  break;
               case 758:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(758, 759); }
                  break;
               case 759:
                  if (curChar == 46)
                     { jjCheckNAdd(590); }
                  break;
               case 760:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1705, 1709); }
                  break;
               case 761:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(761, 762); }
                  break;
               case 762:
                  if (curChar == 46)
                     { jjCheckNAdd(593); }
                  break;
               case 763:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(763, 609); }
                  break;
               case 764:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(764, 765); }
                  break;
               case 765:
                  if (curChar == 46)
                     { jjCheckNAdd(607); }
                  break;
               case 766:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(766, 612); }
                  break;
               case 767:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(767, 768); }
                  break;
               case 768:
                  if (curChar == 46)
                     { jjCheckNAdd(610); }
                  break;
               case 769:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1710, 1712); }
                  break;
               case 770:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(770, 771); }
                  break;
               case 771:
                  if (curChar == 46)
                     { jjCheckNAdd(613); }
                  break;
               case 772:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1713, 1715); }
                  break;
               case 773:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(773, 774); }
                  break;
               case 774:
                  if (curChar == 46)
                     { jjCheckNAdd(617); }
                  break;
               case 775:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(775, 623); }
                  break;
               case 776:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(776, 777); }
                  break;
               case 777:
                  if (curChar == 46)
                     { jjCheckNAdd(622); }
                  break;
               case 778:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1716, 1718); }
                  break;
               case 779:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(779, 780); }
                  break;
               case 780:
                  if (curChar == 46)
                     { jjCheckNAdd(632); }
                  break;
               case 781:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(781, 655); }
                  break;
               case 782:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(782, 783); }
                  break;
               case 783:
                  if (curChar == 46)
                     { jjCheckNAdd(654); }
                  break;
               case 784:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  { jjCheckNAdd(784); }
                  break;
               case 785:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(785, 786); }
                  break;
               case 786:
                  if (curChar == 46)
                     { jjCheckNAdd(656); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 7:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 36)
                        kind = 36;
                     { jjCheckNAddStates(1719, 1723); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddStates(1724, 1727); }
                  else if (curChar == 126)
                  {
                     if (kind > 31)
                        kind = 31;
                     { jjCheckNAdd(241); }
                  }
                  else if (curChar == 64)
                     { jjAddStates(1728, 1730); }
                  else if (curChar == 123)
                  {
                     if (kind > 26)
                        kind = 26;
                  }
                  if ((0x20000000200000L & l) != 0L)
                     { jjAddStates(1731, 1733); }
                  else if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 17;
                  else if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 14;
                  break;
               case 1:
                  { jjAddStates(1734, 1735); }
                  break;
               case 3:
               case 4:
                  { jjCheckNAddTwoStates(4, 5); }
                  break;
               case 8:
                  if (curChar == 123 && kind > 26)
                     kind = 26;
                  break;
               case 12:
                  if ((0x200000002000000L & l) != 0L && kind > 33)
                     kind = 33;
                  break;
               case 13:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 12;
                  break;
               case 14:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 15:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 14;
                  break;
               case 16:
                  if ((0x10000000100000L & l) != 0L && kind > 33)
                     kind = 33;
                  break;
               case 17:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 16;
                  break;
               case 18:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 19:
                  if (curChar == 64)
                     { jjAddStates(1728, 1730); }
                  break;
               case 21:
               case 22:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddTwoStates(22, 23); }
                  break;
               case 23:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(24, 25); }
                  break;
               case 24:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddTwoStates(22, 23); }
                  break;
               case 25:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddStates(189, 193); }
                  break;
               case 29:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddStates(194, 201); }
                  break;
               case 30:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddStates(202, 205); }
                  break;
               case 31:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddStates(206, 210); }
                  break;
               case 32:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddStates(211, 216); }
                  break;
               case 33:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddStates(217, 223); }
                  break;
               case 34:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(24, 35); }
                  break;
               case 35:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddStates(224, 228); }
                  break;
               case 37:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddStates(229, 236); }
                  break;
               case 38:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddStates(237, 240); }
                  break;
               case 39:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddStates(241, 245); }
                  break;
               case 40:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddStates(246, 251); }
                  break;
               case 41:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddStates(252, 258); }
                  break;
               case 43:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1736, 1739); }
                  break;
               case 46:
                  { jjAddStates(1740, 1741); }
                  break;
               case 48:
               case 49:
                  { jjCheckNAddTwoStates(49, 50); }
                  break;
               case 54:
               case 55:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(270, 275); }
                  break;
               case 58:
                  { jjAddStates(1742, 1743); }
                  break;
               case 60:
               case 61:
                  { jjCheckNAddTwoStates(61, 62); }
                  break;
               case 66:
               case 67:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(288, 290); }
                  break;
               case 70:
               case 71:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(296, 301); }
                  break;
               case 74:
                  { jjAddStates(1744, 1745); }
                  break;
               case 76:
               case 77:
                  { jjCheckNAddTwoStates(77, 78); }
                  break;
               case 82:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(83, 94); }
                  break;
               case 83:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(288, 290); }
                  break;
               case 84:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(83, 85); }
                  break;
               case 85:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(314, 319); }
                  break;
               case 89:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(320, 328); }
                  break;
               case 90:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(329, 333); }
                  break;
               case 91:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(334, 339); }
                  break;
               case 92:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(340, 346); }
                  break;
               case 93:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(347, 354); }
                  break;
               case 94:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(355, 360); }
                  break;
               case 96:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(361, 369); }
                  break;
               case 97:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(370, 374); }
                  break;
               case 98:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(375, 380); }
                  break;
               case 99:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(381, 387); }
                  break;
               case 100:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(388, 395); }
                  break;
               case 101:
                  if (curChar == 92)
                     { jjCheckNAddStates(1746, 1749); }
                  break;
               case 102:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(296, 301); }
                  break;
               case 103:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(396, 403); }
                  break;
               case 107:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(413, 423); }
                  break;
               case 108:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(424, 430); }
                  break;
               case 109:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(431, 438); }
                  break;
               case 110:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(439, 447); }
                  break;
               case 111:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(448, 457); }
                  break;
               case 112:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(102, 113); }
                  break;
               case 113:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(458, 465); }
                  break;
               case 115:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(466, 476); }
                  break;
               case 116:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(477, 483); }
                  break;
               case 117:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(484, 491); }
                  break;
               case 118:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(492, 500); }
                  break;
               case 119:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(501, 510); }
                  break;
               case 121:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(511, 513); }
                  break;
               case 123:
                  if (curChar == 92)
                     { jjAddStates(1750, 1753); }
                  break;
               case 127:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(511, 513); }
                  break;
               case 128:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(519, 524); }
                  break;
               case 131:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(525, 533); }
                  break;
               case 132:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(534, 538); }
                  break;
               case 133:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(539, 544); }
                  break;
               case 134:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(545, 551); }
                  break;
               case 135:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(552, 559); }
                  break;
               case 137:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(560, 562); }
                  break;
               case 139:
                  if (curChar == 92)
                     { jjAddStates(1754, 1757); }
                  break;
               case 143:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(560, 562); }
                  break;
               case 144:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(563, 568); }
                  break;
               case 147:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(569, 577); }
                  break;
               case 148:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(578, 582); }
                  break;
               case 149:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(583, 588); }
                  break;
               case 150:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(589, 595); }
                  break;
               case 151:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(596, 603); }
                  break;
               case 152:
                  if (curChar == 92)
                     { jjCheckNAddStates(1758, 1761); }
                  break;
               case 153:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(270, 275); }
                  break;
               case 154:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(604, 611); }
                  break;
               case 158:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(621, 631); }
                  break;
               case 159:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(632, 638); }
                  break;
               case 160:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(639, 646); }
                  break;
               case 161:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(647, 655); }
                  break;
               case 162:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(656, 665); }
                  break;
               case 163:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(153, 164); }
                  break;
               case 164:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(666, 673); }
                  break;
               case 166:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(674, 684); }
                  break;
               case 167:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(685, 691); }
                  break;
               case 168:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(692, 699); }
                  break;
               case 169:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(700, 708); }
                  break;
               case 170:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(709, 718); }
                  break;
               case 171:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 43;
                  break;
               case 172:
                  if ((0x200000002000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 171;
                  break;
               case 173:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 172;
                  break;
               case 174:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 173;
                  break;
               case 175:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 174;
                  break;
               case 176:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 175;
                  break;
               case 181:
                  { jjAddStates(1762, 1763); }
                  break;
               case 183:
               case 184:
                  { jjCheckNAddTwoStates(184, 185); }
                  break;
               case 189:
               case 190:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(734, 737); }
                  break;
               case 193:
                  { jjAddStates(1764, 1765); }
                  break;
               case 195:
               case 196:
                  { jjCheckNAddTwoStates(196, 197); }
                  break;
               case 201:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(202, 203); }
                  break;
               case 202:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(734, 737); }
                  break;
               case 203:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(747, 752); }
                  break;
               case 207:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(759, 767); }
                  break;
               case 208:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(768, 772); }
                  break;
               case 209:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(773, 778); }
                  break;
               case 210:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(779, 785); }
                  break;
               case 211:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(786, 793); }
                  break;
               case 212:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(202, 213); }
                  break;
               case 213:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(794, 799); }
                  break;
               case 215:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(800, 808); }
                  break;
               case 216:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(809, 813); }
                  break;
               case 217:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(814, 819); }
                  break;
               case 218:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(820, 826); }
                  break;
               case 219:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(827, 834); }
                  break;
               case 223:
                  { jjAddStates(1766, 1767); }
                  break;
               case 225:
               case 226:
                  { jjCheckNAddTwoStates(226, 227); }
                  break;
               case 232:
                  { jjAddStates(1768, 1769); }
                  break;
               case 234:
               case 235:
                  { jjCheckNAddTwoStates(235, 236); }
                  break;
               case 240:
                  if (curChar == 126)
                     { jjCheckNAdd(241); }
                  break;
               case 243:
                  { jjAddStates(1770, 1771); }
                  break;
               case 245:
               case 246:
                  { jjCheckNAddTwoStates(246, 247); }
                  break;
               case 252:
                  { jjAddStates(1772, 1773); }
                  break;
               case 254:
               case 255:
                  { jjCheckNAddTwoStates(255, 256); }
                  break;
               case 261:
                  { jjAddStates(1774, 1775); }
                  break;
               case 263:
               case 264:
                  { jjCheckNAddTwoStates(264, 265); }
                  break;
               case 270:
                  { jjAddStates(1776, 1777); }
                  break;
               case 272:
               case 273:
                  { jjCheckNAddTwoStates(273, 274); }
                  break;
               case 279:
                  { jjAddStates(1778, 1779); }
                  break;
               case 281:
               case 282:
                  { jjCheckNAddTwoStates(282, 283); }
                  break;
               case 287:
                  if (curChar == 126 && kind > 31)
                     kind = 31;
                  break;
               case 288:
                  if (curChar != 126)
                     break;
                  if (kind > 31)
                     kind = 31;
                  { jjCheckNAdd(241); }
                  break;
               case 290:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(895, 897); }
                  break;
               case 292:
                  if (curChar == 92)
                     { jjAddStates(1780, 1783); }
                  break;
               case 296:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(895, 897); }
                  break;
               case 297:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(898, 903); }
                  break;
               case 300:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(904, 912); }
                  break;
               case 301:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(913, 917); }
                  break;
               case 302:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(918, 923); }
                  break;
               case 303:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(924, 930); }
                  break;
               case 304:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(931, 938); }
                  break;
               case 305:
                  if ((0xffffffffefffffffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(305, 306); }
                  break;
               case 306:
                  if (curChar == 92)
                     { jjAddStates(1784, 1787); }
                  break;
               case 310:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(305, 306); }
                  break;
               case 311:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(939, 943); }
                  break;
               case 314:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(944, 951); }
                  break;
               case 315:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(952, 955); }
                  break;
               case 316:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(956, 960); }
                  break;
               case 317:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(961, 966); }
                  break;
               case 318:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(967, 973); }
                  break;
               case 320:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(974, 976); }
                  break;
               case 322:
                  if (curChar == 92)
                     { jjAddStates(1788, 1791); }
                  break;
               case 326:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(974, 976); }
                  break;
               case 327:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(977, 982); }
                  break;
               case 330:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(983, 991); }
                  break;
               case 331:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(992, 996); }
                  break;
               case 332:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(997, 1002); }
                  break;
               case 333:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1003, 1009); }
                  break;
               case 334:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1010, 1017); }
                  break;
               case 335:
                  if ((0xffffffffefffffffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(335, 336); }
                  break;
               case 336:
                  if (curChar == 92)
                     { jjAddStates(1792, 1795); }
                  break;
               case 340:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(335, 336); }
                  break;
               case 341:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(1018, 1022); }
                  break;
               case 344:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(1023, 1030); }
                  break;
               case 345:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(1031, 1034); }
                  break;
               case 346:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(1035, 1039); }
                  break;
               case 347:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(1040, 1045); }
                  break;
               case 348:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(1046, 1052); }
                  break;
               case 350:
               case 351:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddTwoStates(351, 352); }
                  break;
               case 352:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(353, 354); }
                  break;
               case 353:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddTwoStates(351, 352); }
                  break;
               case 354:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1053, 1057); }
                  break;
               case 358:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1058, 1065); }
                  break;
               case 359:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1066, 1069); }
                  break;
               case 360:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1070, 1074); }
                  break;
               case 361:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1075, 1080); }
                  break;
               case 362:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1081, 1087); }
                  break;
               case 363:
               case 364:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(1088, 1090); }
                  break;
               case 366:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(367, 368); }
                  break;
               case 367:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(1088, 1090); }
                  break;
               case 368:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1091, 1096); }
                  break;
               case 372:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1097, 1105); }
                  break;
               case 373:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1106, 1110); }
                  break;
               case 374:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1111, 1116); }
                  break;
               case 375:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1117, 1123); }
                  break;
               case 376:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1124, 1131); }
                  break;
               case 377:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(367, 378); }
                  break;
               case 378:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1132, 1137); }
                  break;
               case 380:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1138, 1146); }
                  break;
               case 381:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1147, 1151); }
                  break;
               case 382:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1152, 1157); }
                  break;
               case 383:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1158, 1164); }
                  break;
               case 384:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1165, 1172); }
                  break;
               case 385:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(353, 386); }
                  break;
               case 386:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1173, 1177); }
                  break;
               case 388:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1178, 1185); }
                  break;
               case 389:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1186, 1189); }
                  break;
               case 390:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1190, 1194); }
                  break;
               case 391:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1195, 1200); }
                  break;
               case 392:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1201, 1207); }
                  break;
               case 393:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1719, 1723); }
                  break;
               case 396:
               case 397:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddTwoStates(397, 398); }
                  break;
               case 398:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(399, 400); }
                  break;
               case 399:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddTwoStates(397, 398); }
                  break;
               case 400:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1208, 1212); }
                  break;
               case 404:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1213, 1220); }
                  break;
               case 405:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1221, 1224); }
                  break;
               case 406:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1225, 1229); }
                  break;
               case 407:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1230, 1235); }
                  break;
               case 408:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1236, 1242); }
                  break;
               case 409:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(399, 410); }
                  break;
               case 410:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1243, 1247); }
                  break;
               case 412:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1248, 1255); }
                  break;
               case 413:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1256, 1259); }
                  break;
               case 414:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1260, 1264); }
                  break;
               case 415:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1265, 1270); }
                  break;
               case 416:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1271, 1277); }
                  break;
               case 417:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(417, 418); }
                  break;
               case 418:
                  if (curChar == 92)
                     { jjAddStates(1796, 1797); }
                  break;
               case 419:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(417, 418); }
                  break;
               case 420:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1278, 1282); }
                  break;
               case 424:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1283, 1290); }
                  break;
               case 425:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1291, 1294); }
                  break;
               case 426:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1295, 1299); }
                  break;
               case 427:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1300, 1305); }
                  break;
               case 428:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1306, 1312); }
                  break;
               case 429:
                  if ((0x20000000200000L & l) != 0L)
                     { jjAddStates(1731, 1733); }
                  break;
               case 432:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(1319, 1321); }
                  break;
               case 436:
                  { jjAddStates(1798, 1799); }
                  break;
               case 438:
               case 439:
                  { jjCheckNAddTwoStates(439, 440); }
                  break;
               case 444:
                  if (curChar == 92)
                     { jjAddStates(1800, 1803); }
                  break;
               case 448:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(1319, 1321); }
                  break;
               case 449:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1331, 1336); }
                  break;
               case 452:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1337, 1345); }
                  break;
               case 453:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1346, 1350); }
                  break;
               case 454:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1351, 1356); }
                  break;
               case 455:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1357, 1363); }
                  break;
               case 456:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1364, 1371); }
                  break;
               case 458:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(1372, 1374); }
                  break;
               case 460:
                  if (curChar == 92)
                     { jjAddStates(1804, 1807); }
                  break;
               case 464:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(1372, 1374); }
                  break;
               case 465:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1375, 1380); }
                  break;
               case 468:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1381, 1389); }
                  break;
               case 469:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1390, 1394); }
                  break;
               case 470:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1395, 1400); }
                  break;
               case 471:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1401, 1407); }
                  break;
               case 472:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1408, 1415); }
                  break;
               case 473:
                  if ((0x7fffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(1416, 1419); }
                  break;
               case 474:
                  if (curChar == 92)
                     { jjAddStates(1808, 1809); }
                  break;
               case 475:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(1416, 1419); }
                  break;
               case 476:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1420, 1425); }
                  break;
               case 480:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1432, 1440); }
                  break;
               case 481:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1441, 1445); }
                  break;
               case 482:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1446, 1451); }
                  break;
               case 483:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1452, 1458); }
                  break;
               case 484:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1459, 1466); }
                  break;
               case 487:
                  { jjAddStates(1810, 1811); }
                  break;
               case 489:
               case 490:
                  { jjCheckNAddTwoStates(490, 491); }
                  break;
               case 494:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 430;
                  break;
               case 495:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 494;
                  break;
               case 503:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 96)
                     kind = 96;
                  { jjAddStates(1498, 1503); }
                  break;
               case 504:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 505;
                  break;
               case 505:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 506;
                  break;
               case 506:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 507;
                  break;
               case 507:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(508); }
                  break;
               case 508:
                  if ((0x7e0000007eL & l) != 0L && kind > 96)
                     kind = 96;
                  break;
               case 509:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 510;
                  break;
               case 510:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 511;
                  break;
               case 511:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 512;
                  break;
               case 512:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 96)
                     kind = 96;
                  jjstateSet[jjnewStateCnt++] = 499;
                  break;
               case 513:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 514;
                  break;
               case 514:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 515;
                  break;
               case 515:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 96)
                     kind = 96;
                  jjstateSet[jjnewStateCnt++] = 516;
                  break;
               case 517:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 518;
                  break;
               case 518:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 96)
                     kind = 96;
                  jjstateSet[jjnewStateCnt++] = 519;
                  break;
               case 521:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 96)
                     kind = 96;
                  jjstateSet[jjnewStateCnt++] = 522;
                  break;
               case 530:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddTwoStates(531, 537); }
                  break;
               case 532:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 96)
                     kind = 96;
                  jjstateSet[jjnewStateCnt++] = 533;
                  break;
               case 533:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 96)
                     kind = 96;
                  { jjCheckNAddStates(1514, 1517); }
                  break;
               case 534:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 96)
                     kind = 96;
                  { jjCheckNAdd(508); }
                  break;
               case 535:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 96)
                     kind = 96;
                  { jjCheckNAddTwoStates(508, 534); }
                  break;
               case 536:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 96)
                     kind = 96;
                  { jjCheckNAddStates(1518, 1520); }
                  break;
               case 537:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1521, 1525); }
                  break;
               case 538:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(531); }
                  break;
               case 539:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddTwoStates(538, 531); }
                  break;
               case 540:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1526, 1528); }
                  break;
               case 541:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1529, 1532); }
                  break;
               case 544:
                  if ((0x200000002000L & l) != 0L && kind > 54)
                     kind = 54;
                  break;
               case 545:
               case 553:
                  if ((0x2000000020L & l) != 0L)
                     { jjCheckNAdd(544); }
                  break;
               case 547:
                  if ((0x100000001000000L & l) != 0L && kind > 54)
                     kind = 54;
                  break;
               case 548:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 547;
                  break;
               case 550:
                  if ((0x10000000100L & l) != 0L && kind > 54)
                     kind = 54;
                  break;
               case 551:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 550;
                  break;
               case 554:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 553;
                  break;
               case 556:
                  if ((0x80000000800000L & l) != 0L && kind > 55)
                     kind = 55;
                  break;
               case 557:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 556;
                  break;
               case 559:
                  if ((0x10000000100L & l) != 0L && kind > 55)
                     kind = 55;
                  break;
               case 560:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 559;
                  break;
               case 562:
                  if ((0x400000004000L & l) != 0L && kind > 55)
                     kind = 55;
                  break;
               case 563:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 562;
                  break;
               case 564:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 563;
                  break;
               case 565:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 564;
                  break;
               case 567:
                  if ((0x100000001000000L & l) != 0L && kind > 55)
                     kind = 55;
                  break;
               case 568:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 567;
                  break;
               case 569:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 568;
                  break;
               case 570:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 569;
                  break;
               case 572:
                  if ((0x200000002000L & l) != 0L && kind > 56)
                     kind = 56;
                  break;
               case 573:
                  if ((0x800000008L & l) != 0L)
                     { jjCheckNAdd(572); }
                  break;
               case 575:
                  if ((0x200000002000L & l) != 0L)
                     { jjCheckNAdd(572); }
                  break;
               case 577:
                  if ((0x2000000020000L & l) != 0L && kind > 56)
                     kind = 56;
                  break;
               case 579:
                  if ((0x400000004000L & l) != 0L && kind > 56)
                     kind = 56;
                  break;
               case 580:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 579;
                  break;
               case 582:
                  if ((0x10000000100000L & l) != 0L && kind > 56)
                     kind = 56;
                  break;
               case 583:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 582;
                  break;
               case 585:
                  if ((0x800000008L & l) != 0L && kind > 56)
                     kind = 56;
                  break;
               case 586:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 585;
                  break;
               case 588:
                  if ((0x100000001000000L & l) != 0L && kind > 56)
                     kind = 56;
                  break;
               case 589:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 588;
                  break;
               case 591:
                  if ((0x4000000040000L & l) != 0L && kind > 57)
                     kind = 57;
                  break;
               case 592:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 591;
                  break;
               case 594:
                  if ((0x8000000080L & l) != 0L && kind > 58)
                     kind = 58;
                  break;
               case 595:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 594;
                  break;
               case 596:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 595;
                  break;
               case 597:
                  if ((0x1000000010L & l) != 0L && kind > 58)
                     kind = 58;
                  break;
               case 598:
               case 601:
                  if ((0x200000002L & l) != 0L)
                     { jjCheckNAdd(597); }
                  break;
               case 599:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 598;
                  break;
               case 600:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 599;
                  break;
               case 602:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 601;
                  break;
               case 603:
                  if ((0x400000004000L & l) != 0L && kind > 58)
                     kind = 58;
                  break;
               case 604:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 603;
                  break;
               case 605:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 604;
                  break;
               case 606:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 605;
                  break;
               case 608:
                  if ((0x400000004L & l) != 0L && kind > 59)
                     kind = 59;
                  break;
               case 609:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 608;
                  break;
               case 611:
                  if ((0x10000000100000L & l) != 0L && kind > 60)
                     kind = 60;
                  break;
               case 612:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 611;
                  break;
               case 614:
               case 616:
                  if ((0x8000000080000L & l) != 0L && kind > 61)
                     kind = 61;
                  break;
               case 615:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 614;
                  break;
               case 618:
                  if ((0x400000004000000L & l) != 0L && kind > 62)
                     kind = 62;
                  break;
               case 619:
               case 620:
                  if ((0x10000000100L & l) != 0L)
                     { jjCheckNAdd(618); }
                  break;
               case 621:
                  if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 620;
                  break;
               case 623:
                  if ((0x1000000010L & l) != 0L)
                     { jjAddStates(1812, 1814); }
                  break;
               case 624:
                  if ((0x20000000200L & l) != 0L && kind > 63)
                     kind = 63;
                  break;
               case 625:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 624;
                  break;
               case 626:
                  if ((0x200000002000L & l) != 0L && kind > 63)
                     kind = 63;
                  break;
               case 627:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 626;
                  break;
               case 628:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 627;
                  break;
               case 629:
                  if ((0x100000001000000L & l) != 0L && kind > 63)
                     kind = 63;
                  break;
               case 630:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 629;
                  break;
               case 631:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 630;
                  break;
               case 633:
               case 634:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddTwoStates(634, 635); }
                  break;
               case 635:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(636, 637); }
                  break;
               case 636:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddTwoStates(634, 635); }
                  break;
               case 637:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(1547, 1551); }
                  break;
               case 641:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(1552, 1559); }
                  break;
               case 642:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(1560, 1563); }
                  break;
               case 643:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(1564, 1568); }
                  break;
               case 644:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(1569, 1574); }
                  break;
               case 645:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(1575, 1581); }
                  break;
               case 646:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(636, 647); }
                  break;
               case 647:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(1582, 1586); }
                  break;
               case 649:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(1587, 1594); }
                  break;
               case 650:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(1595, 1598); }
                  break;
               case 651:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(1599, 1603); }
                  break;
               case 652:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(1604, 1609); }
                  break;
               case 653:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(1610, 1616); }
                  break;
               case 658:
               case 659:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddTwoStates(659, 660); }
                  break;
               case 660:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(661, 662); }
                  break;
               case 661:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddTwoStates(659, 660); }
                  break;
               case 662:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1617, 1621); }
                  break;
               case 666:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1622, 1629); }
                  break;
               case 667:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1630, 1633); }
                  break;
               case 668:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1634, 1638); }
                  break;
               case 669:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1639, 1644); }
                  break;
               case 670:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1645, 1651); }
                  break;
               case 671:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(661, 672); }
                  break;
               case 672:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1652, 1656); }
                  break;
               case 674:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1657, 1664); }
                  break;
               case 675:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1665, 1668); }
                  break;
               case 676:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1669, 1673); }
                  break;
               case 677:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1674, 1679); }
                  break;
               case 678:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1680, 1686); }
                  break;
               case 682:
                  { jjAddStates(1815, 1816); }
                  break;
               case 684:
               case 685:
                  { jjCheckNAddTwoStates(685, 686); }
                  break;
               case 689:
                  if ((0x10000000100000L & l) != 0L && kind > 67)
                     kind = 67;
                  break;
               case 690:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 689;
                  break;
               case 691:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 690;
                  break;
               case 692:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 691;
                  break;
               case 693:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 692;
                  break;
               case 694:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 693;
                  break;
               case 695:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 694;
                  break;
               case 696:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 695;
                  break;
               case 697:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 696;
                  break;
               case 700:
                  { jjAddStates(1817, 1818); }
                  break;
               case 702:
               case 703:
                  { jjCheckNAddTwoStates(703, 704); }
                  break;
               case 707:
                  if ((0x2000000020L & l) == 0L)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjstateSet[jjnewStateCnt++] = 708;
                  break;
               case 709:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 707;
                  break;
               case 710:
                  if (curChar == 92)
                     { jjCheckNAddStates(1724, 1727); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 7:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1719, 1723); }
                  break;
               case 1:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1734, 1735); }
                  break;
               case 3:
               case 4:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(4, 5); }
                  break;
               case 21:
               case 22:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddTwoStates(22, 23); }
                  break;
               case 24:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAddTwoStates(22, 23); }
                  break;
               case 46:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1740, 1741); }
                  break;
               case 48:
               case 49:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(49, 50); }
                  break;
               case 54:
               case 55:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(270, 275); }
                  break;
               case 58:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1742, 1743); }
                  break;
               case 60:
               case 61:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(61, 62); }
                  break;
               case 66:
               case 67:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(288, 290); }
                  break;
               case 70:
               case 71:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(296, 301); }
                  break;
               case 74:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1744, 1745); }
                  break;
               case 76:
               case 77:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(77, 78); }
                  break;
               case 83:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(288, 290); }
                  break;
               case 102:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(296, 301); }
                  break;
               case 121:
               case 127:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(511, 513); }
                  break;
               case 137:
               case 143:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(560, 562); }
                  break;
               case 153:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(270, 275); }
                  break;
               case 181:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1762, 1763); }
                  break;
               case 183:
               case 184:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(184, 185); }
                  break;
               case 189:
               case 190:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(734, 737); }
                  break;
               case 193:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1764, 1765); }
                  break;
               case 195:
               case 196:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(196, 197); }
                  break;
               case 202:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(734, 737); }
                  break;
               case 223:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1766, 1767); }
                  break;
               case 225:
               case 226:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(226, 227); }
                  break;
               case 232:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1768, 1769); }
                  break;
               case 234:
               case 235:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(235, 236); }
                  break;
               case 243:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1770, 1771); }
                  break;
               case 245:
               case 246:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(246, 247); }
                  break;
               case 252:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1772, 1773); }
                  break;
               case 254:
               case 255:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(255, 256); }
                  break;
               case 261:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1774, 1775); }
                  break;
               case 263:
               case 264:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(264, 265); }
                  break;
               case 270:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1776, 1777); }
                  break;
               case 272:
               case 273:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(273, 274); }
                  break;
               case 279:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1778, 1779); }
                  break;
               case 281:
               case 282:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(282, 283); }
                  break;
               case 290:
               case 296:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(895, 897); }
                  break;
               case 305:
               case 310:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(305, 306); }
                  break;
               case 320:
               case 326:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(974, 976); }
                  break;
               case 335:
               case 340:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(335, 336); }
                  break;
               case 350:
               case 351:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddTwoStates(351, 352); }
                  break;
               case 353:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddTwoStates(351, 352); }
                  break;
               case 363:
               case 364:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1088, 1090); }
                  break;
               case 367:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1088, 1090); }
                  break;
               case 396:
               case 397:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddTwoStates(397, 398); }
                  break;
               case 399:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddTwoStates(397, 398); }
                  break;
               case 417:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(417, 418); }
                  break;
               case 419:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(417, 418); }
                  break;
               case 432:
               case 448:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1319, 1321); }
                  break;
               case 436:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1798, 1799); }
                  break;
               case 438:
               case 439:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(439, 440); }
                  break;
               case 458:
               case 464:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1372, 1374); }
                  break;
               case 473:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1416, 1419); }
                  break;
               case 475:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1416, 1419); }
                  break;
               case 487:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1810, 1811); }
                  break;
               case 489:
               case 490:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(490, 491); }
                  break;
               case 633:
               case 634:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddTwoStates(634, 635); }
                  break;
               case 636:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddTwoStates(634, 635); }
                  break;
               case 658:
               case 659:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddTwoStates(659, 660); }
                  break;
               case 661:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddTwoStates(659, 660); }
                  break;
               case 682:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1815, 1816); }
                  break;
               case 684:
               case 685:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(685, 686); }
                  break;
               case 700:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1817, 1818); }
                  break;
               case 702:
               case 703:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(703, 704); }
                  break;
               default : if (i1 == 0 || l1 == 0 || i2 == 0 ||  l2 == 0) break; else break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 787 - (jjnewStateCnt = startsAt)))
         break;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { break; }
   }
   if (jjmatchedPos > strPos)
      return curPos;

   int toRet = Math.max(curPos, seenUpto);

   if (curPos < toRet)
      for (i = toRet - Math.min(curPos, seenUpto); i-- > 0; )
         try { curChar = input_stream.readChar(); }
         catch(java.io.IOException e) { throw new Error("Internal Error : Please send a bug report."); }

   if (jjmatchedPos < strPos)
   {
      jjmatchedKind = strKind;
      jjmatchedPos = strPos;
   }
   else if (jjmatchedPos == strPos && jjmatchedKind > strKind)
      jjmatchedKind = strKind;

   return toRet;
}

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, "\74\41\55\55", "\55\55\76", 
null, "\174\75", null, null, "\55", null, null, null, null, null, null, null, null, 
null, null, "\175", "\136\75", "\44\75", "\52\75", "\75", "\73", "\57", "\133", 
"\135", "\52", "\56", "\51", "\50", "\72", null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, "\72\72", null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, "\174", "\45", };
protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}
static final int[] jjnextStates = {
   712, 713, 714, 545, 715, 716, 717, 548, 718, 719, 720, 551, 721, 722, 723, 554, 
   724, 725, 726, 557, 727, 728, 729, 560, 730, 731, 732, 565, 733, 734, 735, 570, 
   736, 737, 738, 573, 739, 740, 741, 575, 742, 743, 744, 577, 745, 746, 747, 580, 
   748, 749, 750, 583, 751, 752, 753, 586, 754, 755, 756, 589, 757, 758, 759, 592, 
   760, 761, 762, 596, 600, 602, 606, 763, 764, 765, 609, 766, 767, 768, 612, 769, 
   770, 771, 615, 616, 772, 773, 774, 619, 621, 775, 776, 777, 778, 779, 780, 633, 
   781, 782, 783, 655, 784, 785, 786, 646, 623, 229, 230, 238, 239, 240, 249, 250, 
   8, 258, 259, 9, 267, 268, 10, 276, 277, 11, 285, 286, 287, 680, 697, 698, 
   709, 543, 546, 549, 552, 555, 558, 561, 566, 571, 574, 576, 578, 581, 584, 587, 
   590, 593, 607, 610, 613, 617, 622, 632, 654, 656, 657, 658, 671, 395, 396, 417, 
   418, 409, 350, 363, 377, 385, 320, 321, 335, 336, 322, 290, 291, 305, 306, 292, 
   177, 44, 53, 54, 163, 2, 3, 6, 3, 5, 6, 21, 34, 22, 27, 28, 
   23, 29, 22, 30, 27, 28, 23, 31, 32, 33, 22, 27, 28, 23, 22, 30, 
   27, 28, 23, 22, 30, 27, 28, 23, 31, 22, 30, 27, 28, 23, 31, 32, 
   36, 28, 22, 23, 37, 38, 36, 28, 22, 23, 39, 40, 41, 36, 28, 22, 
   23, 38, 36, 28, 22, 23, 38, 36, 28, 22, 23, 39, 38, 36, 28, 22, 
   23, 39, 40, 52, 53, 54, 163, 44, 47, 48, 51, 48, 50, 51, 55, 56, 
   65, 66, 81, 152, 64, 65, 66, 81, 82, 56, 59, 60, 63, 60, 62, 63, 
   67, 68, 84, 69, 70, 120, 136, 112, 65, 66, 71, 72, 81, 101, 65, 66, 
   80, 81, 82, 72, 75, 76, 79, 76, 78, 79, 67, 87, 88, 68, 84, 89, 
   67, 90, 87, 88, 68, 84, 91, 92, 93, 67, 87, 88, 68, 84, 67, 90, 
   87, 88, 68, 84, 67, 90, 87, 88, 68, 84, 91, 67, 90, 87, 88, 68, 
   84, 91, 92, 95, 88, 67, 68, 84, 96, 97, 95, 88, 67, 68, 84, 98, 
   99, 100, 95, 88, 67, 68, 84, 97, 95, 88, 67, 68, 84, 97, 95, 88, 
   67, 68, 84, 98, 97, 95, 88, 67, 68, 84, 98, 99, 65, 66, 71, 105, 
   81, 101, 106, 107, 65, 66, 71, 72, 80, 81, 82, 72, 101, 65, 66, 71, 
   108, 105, 81, 101, 106, 109, 110, 111, 65, 66, 71, 105, 81, 101, 106, 65, 
   66, 71, 108, 105, 81, 101, 106, 65, 66, 71, 108, 105, 81, 101, 106, 109, 
   65, 66, 71, 108, 105, 81, 101, 106, 109, 110, 65, 66, 114, 71, 81, 101, 
   106, 115, 65, 66, 116, 114, 71, 81, 101, 106, 117, 118, 119, 65, 66, 114, 
   71, 81, 101, 106, 65, 66, 116, 114, 71, 81, 101, 106, 65, 66, 116, 114, 
   71, 81, 101, 106, 117, 65, 66, 116, 114, 71, 81, 101, 106, 117, 118, 121, 
   122, 123, 65, 66, 72, 81, 82, 121, 129, 130, 122, 123, 131, 121, 132, 129, 
   130, 122, 123, 133, 134, 135, 121, 129, 130, 122, 123, 121, 132, 129, 130, 122, 
   123, 121, 132, 129, 130, 122, 123, 133, 121, 132, 129, 130, 122, 123, 133, 134, 
   137, 138, 139, 137, 145, 146, 138, 139, 147, 137, 148, 145, 146, 138, 139, 149, 
   150, 151, 137, 145, 146, 138, 139, 137, 148, 145, 146, 138, 139, 137, 148, 145, 
   146, 138, 139, 149, 137, 148, 145, 146, 138, 139, 149, 150, 55, 156, 65, 66, 
   81, 152, 157, 158, 55, 56, 64, 65, 66, 81, 82, 56, 152, 55, 159, 156, 
   65, 66, 81, 152, 157, 160, 161, 162, 55, 156, 65, 66, 81, 152, 157, 55, 
   159, 156, 65, 66, 81, 152, 157, 55, 159, 156, 65, 66, 81, 152, 157, 160, 
   55, 159, 156, 65, 66, 81, 152, 157, 160, 161, 165, 55, 65, 66, 81, 152, 
   157, 166, 167, 165, 55, 65, 66, 81, 152, 157, 168, 169, 170, 165, 55, 65, 
   66, 81, 152, 157, 167, 165, 55, 65, 66, 81, 152, 157, 167, 165, 55, 65, 
   66, 81, 152, 157, 168, 167, 165, 55, 65, 66, 81, 152, 157, 168, 169, 179, 
   188, 189, 212, 187, 188, 189, 212, 179, 182, 183, 186, 183, 185, 186, 190, 191, 
   200, 201, 199, 200, 191, 194, 195, 198, 195, 197, 198, 190, 205, 200, 201, 206, 
   207, 190, 191, 199, 200, 191, 201, 190, 208, 205, 200, 201, 206, 209, 210, 211, 
   190, 205, 200, 201, 206, 190, 208, 205, 200, 201, 206, 190, 208, 205, 200, 201, 
   206, 209, 190, 208, 205, 200, 201, 206, 209, 210, 214, 190, 200, 201, 206, 215, 
   216, 214, 190, 200, 201, 206, 217, 218, 219, 214, 190, 200, 201, 206, 216, 214, 
   190, 200, 201, 206, 216, 214, 190, 200, 201, 206, 217, 216, 214, 190, 200, 201, 
   206, 217, 218, 224, 225, 228, 225, 227, 228, 233, 234, 237, 234, 236, 237, 238, 
   239, 240, 244, 245, 248, 245, 247, 248, 249, 250, 8, 253, 254, 257, 254, 256, 
   257, 258, 259, 9, 262, 263, 266, 263, 265, 266, 267, 268, 10, 271, 272, 275, 
   272, 274, 275, 276, 277, 11, 280, 281, 284, 281, 283, 284, 285, 286, 287, 290, 
   291, 292, 290, 298, 299, 291, 292, 300, 290, 301, 298, 299, 291, 292, 302, 303, 
   304, 290, 298, 299, 291, 292, 290, 301, 298, 299, 291, 292, 290, 301, 298, 299, 
   291, 292, 302, 290, 301, 298, 299, 291, 292, 302, 303, 305, 312, 313, 306, 314, 
   305, 315, 312, 313, 306, 316, 317, 318, 305, 312, 313, 306, 305, 315, 312, 313, 
   306, 305, 315, 312, 313, 306, 316, 305, 315, 312, 313, 306, 316, 317, 320, 321, 
   322, 320, 328, 329, 321, 322, 330, 320, 331, 328, 329, 321, 322, 332, 333, 334, 
   320, 328, 329, 321, 322, 320, 331, 328, 329, 321, 322, 320, 331, 328, 329, 321, 
   322, 332, 320, 331, 328, 329, 321, 322, 332, 333, 335, 342, 343, 336, 344, 335, 
   345, 342, 343, 336, 346, 347, 348, 335, 342, 343, 336, 335, 345, 342, 343, 336, 
   335, 345, 342, 343, 336, 346, 335, 345, 342, 343, 336, 346, 347, 351, 356, 357, 
   352, 358, 351, 359, 356, 357, 352, 360, 361, 362, 351, 356, 357, 352, 351, 359, 
   356, 357, 352, 351, 359, 356, 357, 352, 360, 351, 359, 356, 357, 352, 360, 361, 
   364, 365, 366, 364, 370, 371, 365, 366, 372, 364, 373, 370, 371, 365, 366, 374, 
   375, 376, 364, 370, 371, 365, 366, 364, 373, 370, 371, 365, 366, 364, 373, 370, 
   371, 365, 366, 374, 364, 373, 370, 371, 365, 366, 374, 375, 379, 371, 364, 365, 
   366, 380, 381, 379, 371, 364, 365, 366, 382, 383, 384, 379, 371, 364, 365, 366, 
   381, 379, 371, 364, 365, 366, 381, 379, 371, 364, 365, 366, 382, 381, 379, 371, 
   364, 365, 366, 382, 383, 387, 357, 351, 352, 388, 389, 387, 357, 351, 352, 390, 
   391, 392, 387, 357, 351, 352, 389, 387, 357, 351, 352, 389, 387, 357, 351, 352, 
   390, 389, 387, 357, 351, 352, 390, 391, 397, 402, 403, 398, 404, 397, 405, 402, 
   403, 398, 406, 407, 408, 397, 402, 403, 398, 397, 405, 402, 403, 398, 397, 405, 
   402, 403, 398, 406, 397, 405, 402, 403, 398, 406, 407, 411, 403, 397, 398, 412, 
   413, 411, 403, 397, 398, 414, 415, 416, 411, 403, 397, 398, 413, 411, 403, 397, 
   398, 413, 411, 403, 397, 398, 414, 413, 411, 403, 397, 398, 414, 415, 417, 422, 
   423, 418, 424, 417, 425, 422, 423, 418, 426, 427, 428, 417, 422, 423, 418, 417, 
   425, 422, 423, 418, 417, 425, 422, 423, 418, 426, 417, 425, 422, 423, 418, 426, 
   427, 431, 457, 473, 443, 474, 485, 432, 433, 444, 442, 443, 434, 437, 438, 441, 
   438, 440, 441, 432, 450, 451, 433, 444, 452, 432, 453, 450, 451, 433, 444, 454, 
   455, 456, 432, 450, 451, 433, 444, 432, 453, 450, 451, 433, 444, 432, 453, 450, 
   451, 433, 444, 454, 432, 453, 450, 451, 433, 444, 454, 455, 458, 459, 460, 458, 
   466, 467, 459, 460, 468, 458, 469, 466, 467, 459, 460, 470, 471, 472, 458, 466, 
   467, 459, 460, 458, 469, 466, 467, 459, 460, 458, 469, 466, 467, 459, 460, 470, 
   458, 469, 466, 467, 459, 460, 470, 471, 473, 434, 443, 474, 473, 478, 443, 474, 
   479, 480, 473, 434, 442, 443, 434, 474, 473, 481, 478, 443, 474, 479, 482, 483, 
   484, 473, 478, 443, 474, 479, 473, 481, 478, 443, 474, 479, 473, 481, 478, 443, 
   474, 479, 482, 473, 481, 478, 443, 474, 479, 482, 483, 493, 431, 457, 473, 442, 
   443, 434, 474, 485, 488, 489, 492, 489, 491, 492, 493, 431, 457, 473, 443, 474, 
   485, 497, 503, 499, 500, 501, 502, 499, 500, 501, 504, 509, 513, 517, 521, 525, 
   499, 523, 524, 499, 526, 527, 528, 499, 526, 527, 508, 534, 535, 536, 508, 534, 
   535, 538, 531, 539, 540, 541, 538, 531, 539, 538, 531, 539, 540, 593, 596, 600, 
   602, 606, 613, 615, 616, 617, 619, 621, 632, 633, 646, 634, 639, 640, 635, 641, 
   634, 642, 639, 640, 635, 643, 644, 645, 634, 639, 640, 635, 634, 642, 639, 640, 
   635, 634, 642, 639, 640, 635, 643, 634, 642, 639, 640, 635, 643, 644, 648, 640, 
   634, 635, 649, 650, 648, 640, 634, 635, 651, 652, 653, 648, 640, 634, 635, 650, 
   648, 640, 634, 635, 650, 648, 640, 634, 635, 651, 650, 648, 640, 634, 635, 651, 
   652, 659, 664, 665, 660, 666, 659, 667, 664, 665, 660, 668, 669, 670, 659, 664, 
   665, 660, 659, 667, 664, 665, 660, 659, 667, 664, 665, 660, 668, 659, 667, 664, 
   665, 660, 668, 669, 673, 665, 659, 660, 674, 675, 673, 665, 659, 660, 676, 677, 
   678, 673, 665, 659, 660, 675, 673, 665, 659, 660, 675, 673, 665, 659, 660, 676, 
   675, 673, 665, 659, 660, 676, 677, 688, 697, 680, 683, 684, 687, 684, 686, 687, 
   706, 709, 698, 701, 702, 705, 702, 704, 705, 760, 596, 600, 602, 606, 769, 615, 
   616, 772, 619, 621, 778, 633, 646, 351, 364, 365, 366, 352, 353, 386, 367, 378, 
   20, 21, 34, 495, 496, 529, 1, 2, 44, 53, 54, 163, 46, 47, 58, 59, 
   74, 75, 83, 94, 102, 103, 124, 126, 127, 128, 140, 142, 143, 144, 153, 154, 
   83, 94, 181, 182, 193, 194, 223, 224, 232, 233, 243, 244, 252, 253, 261, 262, 
   270, 271, 279, 280, 293, 295, 296, 297, 307, 309, 310, 311, 323, 325, 326, 327, 
   337, 339, 340, 341, 419, 420, 436, 437, 445, 447, 448, 449, 461, 463, 464, 465, 
   475, 476, 487, 488, 625, 628, 631, 682, 683, 700, 701, 
};
private static final boolean jjCanMove_0(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec2[i2] & l2) != 0L);
      default :
         if ((jjbitVec0[i1] & l1) != 0L)
            return true;
         return false;
   }
}
private static final boolean jjCanMove_1(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec2[i2] & l2) != 0L);
      default :
         return false;
   }
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken() 
{
  Token specialToken = null;
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(Exception e)
   {
      jjmatchedKind = 0;
      jjmatchedPos = -1;
      matchedToken = jjFillToken();
      matchedToken.specialToken = specialToken;
      return matchedToken;
   }

   jjmatchedKind = 0x7fffffff;
   jjmatchedPos = 0;
   curPos = jjMoveStringLiteralDfa0_0();
   if (jjmatchedKind != 0x7fffffff)
   {
      if (jjmatchedPos + 1 < curPos)
         input_stream.backup(curPos - jjmatchedPos - 1);
      if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
      {
         matchedToken = jjFillToken();
         matchedToken.specialToken = specialToken;
         return matchedToken;
      }
      else
      {
         if ((jjtoSpecial[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
         {
            matchedToken = jjFillToken();
            if (specialToken == null)
               specialToken = matchedToken;
            else
            {
               matchedToken.specialToken = specialToken;
               specialToken = (specialToken.next = matchedToken);
            }
         }
         continue EOFLoop;
      }
   }
   int error_line = input_stream.getEndLine();
   int error_column = input_stream.getEndColumn();
   String error_after = null;
   boolean EOFSeen = false;
   try { input_stream.readChar(); input_stream.backup(1); }
   catch (java.io.IOException e1) {
      EOFSeen = true;
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
      if (curChar == '\n' || curChar == '\r') {
         error_line++;
         error_column = 0;
      }
      else
         error_column++;
   }
   if (!EOFSeen) {
      input_stream.backup(1);
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
   }
   throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
  }
}

void SkipLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      default :
         break;
   }
}
void MoreLexicalActions()
{
   jjimageLen += (lengthOfMatch = jjmatchedPos + 1);
   switch(jjmatchedKind)
   {
      default :
         break;
   }
}
void TokenLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      default :
         break;
   }
}
private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

    /** Constructor. */
    public CssParserTokenManager(SimpleCharStream stream){

      if (SimpleCharStream.staticFlag)
            throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");

    input_stream = stream;
  }

  /** Constructor. */
  public CssParserTokenManager (SimpleCharStream stream, int lexState){
    ReInit(stream);
    SwitchTo(lexState);
  }

  /** Reinitialise parser. */
  
  public void ReInit(SimpleCharStream stream)
  {


    jjmatchedPos =
    jjnewStateCnt =
    0;
    curLexState = defaultLexState;
    input_stream = stream;
    ReInitRounds();
  }

  private void ReInitRounds()
  {
    int i;
    jjround = 0x80000001;
    for (i = 787; i-- > 0;)
      jjrounds[i] = 0x80000000;
  }

  /** Reinitialise parser. */
  public void ReInit(SimpleCharStream stream, int lexState)
  
  {
    ReInit(stream);
    SwitchTo(lexState);
  }

  /** Switch to specified lex state. */
  public void SwitchTo(int lexState)
  {
    if (lexState >= 1 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
    else
      curLexState = lexState;
  }


/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
};

/** Lex State array. */
public static final int[] jjnewLexState = {
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, 
};
static final long[] jjtoToken = {
   0xffffffffffe00001L, 0x7ff007fffffL, 
};
static final long[] jjtoSkip = {
   0x2L, 0x0L, 
};
static final long[] jjtoSpecial = {
   0x2L, 0x0L, 
};
static final long[] jjtoMore = {
   0x0L, 0x0L, 
};
    protected SimpleCharStream  input_stream;

    private final int[] jjrounds = new int[787];
    private final int[] jjstateSet = new int[2 * 787];
    private final StringBuilder jjimage = new StringBuilder();
    private StringBuilder image = jjimage;
    private int jjimageLen;
    private int lengthOfMatch;
    protected int curChar;
}
